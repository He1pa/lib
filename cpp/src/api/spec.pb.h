// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: spec.proto
// Protobuf C++ Version: 5.27.0

#ifndef GOOGLE_PROTOBUF_INCLUDED_spec_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_spec_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027000
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_spec_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_spec_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_spec_2eproto;
namespace com {
namespace kcl {
namespace api {
class Argument;
struct ArgumentDefaultTypeInternal;
extern ArgumentDefaultTypeInternal _Argument_default_instance_;
class BuildProgram_Args;
struct BuildProgram_ArgsDefaultTypeInternal;
extern BuildProgram_ArgsDefaultTypeInternal _BuildProgram_Args_default_instance_;
class BuildProgram_Result;
struct BuildProgram_ResultDefaultTypeInternal;
extern BuildProgram_ResultDefaultTypeInternal _BuildProgram_Result_default_instance_;
class CliConfig;
struct CliConfigDefaultTypeInternal;
extern CliConfigDefaultTypeInternal _CliConfig_default_instance_;
class Decorator;
struct DecoratorDefaultTypeInternal;
extern DecoratorDefaultTypeInternal _Decorator_default_instance_;
class Decorator_KeywordsEntry_DoNotUse;
struct Decorator_KeywordsEntry_DoNotUseDefaultTypeInternal;
extern Decorator_KeywordsEntry_DoNotUseDefaultTypeInternal _Decorator_KeywordsEntry_DoNotUse_default_instance_;
class Error;
struct ErrorDefaultTypeInternal;
extern ErrorDefaultTypeInternal _Error_default_instance_;
class Example;
struct ExampleDefaultTypeInternal;
extern ExampleDefaultTypeInternal _Example_default_instance_;
class ExecArtifact_Args;
struct ExecArtifact_ArgsDefaultTypeInternal;
extern ExecArtifact_ArgsDefaultTypeInternal _ExecArtifact_Args_default_instance_;
class ExecProgram_Args;
struct ExecProgram_ArgsDefaultTypeInternal;
extern ExecProgram_ArgsDefaultTypeInternal _ExecProgram_Args_default_instance_;
class ExecProgram_Result;
struct ExecProgram_ResultDefaultTypeInternal;
extern ExecProgram_ResultDefaultTypeInternal _ExecProgram_Result_default_instance_;
class ExternalPkg;
struct ExternalPkgDefaultTypeInternal;
extern ExternalPkgDefaultTypeInternal _ExternalPkg_default_instance_;
class FormatCode_Args;
struct FormatCode_ArgsDefaultTypeInternal;
extern FormatCode_ArgsDefaultTypeInternal _FormatCode_Args_default_instance_;
class FormatCode_Result;
struct FormatCode_ResultDefaultTypeInternal;
extern FormatCode_ResultDefaultTypeInternal _FormatCode_Result_default_instance_;
class FormatPath_Args;
struct FormatPath_ArgsDefaultTypeInternal;
extern FormatPath_ArgsDefaultTypeInternal _FormatPath_Args_default_instance_;
class FormatPath_Result;
struct FormatPath_ResultDefaultTypeInternal;
extern FormatPath_ResultDefaultTypeInternal _FormatPath_Result_default_instance_;
class GetSchemaTypeMapping_Args;
struct GetSchemaTypeMapping_ArgsDefaultTypeInternal;
extern GetSchemaTypeMapping_ArgsDefaultTypeInternal _GetSchemaTypeMapping_Args_default_instance_;
class GetSchemaTypeMapping_Result;
struct GetSchemaTypeMapping_ResultDefaultTypeInternal;
extern GetSchemaTypeMapping_ResultDefaultTypeInternal _GetSchemaTypeMapping_Result_default_instance_;
class GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse;
struct GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUseDefaultTypeInternal;
extern GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUseDefaultTypeInternal _GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse_default_instance_;
class GetVersion_Args;
struct GetVersion_ArgsDefaultTypeInternal;
extern GetVersion_ArgsDefaultTypeInternal _GetVersion_Args_default_instance_;
class GetVersion_Result;
struct GetVersion_ResultDefaultTypeInternal;
extern GetVersion_ResultDefaultTypeInternal _GetVersion_Result_default_instance_;
class KclType;
struct KclTypeDefaultTypeInternal;
extern KclTypeDefaultTypeInternal _KclType_default_instance_;
class KclType_ExamplesEntry_DoNotUse;
struct KclType_ExamplesEntry_DoNotUseDefaultTypeInternal;
extern KclType_ExamplesEntry_DoNotUseDefaultTypeInternal _KclType_ExamplesEntry_DoNotUse_default_instance_;
class KclType_PropertiesEntry_DoNotUse;
struct KclType_PropertiesEntry_DoNotUseDefaultTypeInternal;
extern KclType_PropertiesEntry_DoNotUseDefaultTypeInternal _KclType_PropertiesEntry_DoNotUse_default_instance_;
class KeyValuePair;
struct KeyValuePairDefaultTypeInternal;
extern KeyValuePairDefaultTypeInternal _KeyValuePair_default_instance_;
class LintPath_Args;
struct LintPath_ArgsDefaultTypeInternal;
extern LintPath_ArgsDefaultTypeInternal _LintPath_Args_default_instance_;
class LintPath_Result;
struct LintPath_ResultDefaultTypeInternal;
extern LintPath_ResultDefaultTypeInternal _LintPath_Result_default_instance_;
class ListDepFiles_Args;
struct ListDepFiles_ArgsDefaultTypeInternal;
extern ListDepFiles_ArgsDefaultTypeInternal _ListDepFiles_Args_default_instance_;
class ListDepFiles_Result;
struct ListDepFiles_ResultDefaultTypeInternal;
extern ListDepFiles_ResultDefaultTypeInternal _ListDepFiles_Result_default_instance_;
class ListMethod_Args;
struct ListMethod_ArgsDefaultTypeInternal;
extern ListMethod_ArgsDefaultTypeInternal _ListMethod_Args_default_instance_;
class ListMethod_Result;
struct ListMethod_ResultDefaultTypeInternal;
extern ListMethod_ResultDefaultTypeInternal _ListMethod_Result_default_instance_;
class ListOptions_Result;
struct ListOptions_ResultDefaultTypeInternal;
extern ListOptions_ResultDefaultTypeInternal _ListOptions_Result_default_instance_;
class ListVariables_Args;
struct ListVariables_ArgsDefaultTypeInternal;
extern ListVariables_ArgsDefaultTypeInternal _ListVariables_Args_default_instance_;
class ListVariables_Options;
struct ListVariables_OptionsDefaultTypeInternal;
extern ListVariables_OptionsDefaultTypeInternal _ListVariables_Options_default_instance_;
class ListVariables_Result;
struct ListVariables_ResultDefaultTypeInternal;
extern ListVariables_ResultDefaultTypeInternal _ListVariables_Result_default_instance_;
class ListVariables_Result_VariablesEntry_DoNotUse;
struct ListVariables_Result_VariablesEntry_DoNotUseDefaultTypeInternal;
extern ListVariables_Result_VariablesEntry_DoNotUseDefaultTypeInternal _ListVariables_Result_VariablesEntry_DoNotUse_default_instance_;
class LoadPackage_Args;
struct LoadPackage_ArgsDefaultTypeInternal;
extern LoadPackage_ArgsDefaultTypeInternal _LoadPackage_Args_default_instance_;
class LoadPackage_Result;
struct LoadPackage_ResultDefaultTypeInternal;
extern LoadPackage_ResultDefaultTypeInternal _LoadPackage_Result_default_instance_;
class LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse;
struct LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUseDefaultTypeInternal;
extern LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUseDefaultTypeInternal _LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse_default_instance_;
class LoadPackage_Result_NodeSymbolMapEntry_DoNotUse;
struct LoadPackage_Result_NodeSymbolMapEntry_DoNotUseDefaultTypeInternal;
extern LoadPackage_Result_NodeSymbolMapEntry_DoNotUseDefaultTypeInternal _LoadPackage_Result_NodeSymbolMapEntry_DoNotUse_default_instance_;
class LoadPackage_Result_PkgScopeMapEntry_DoNotUse;
struct LoadPackage_Result_PkgScopeMapEntry_DoNotUseDefaultTypeInternal;
extern LoadPackage_Result_PkgScopeMapEntry_DoNotUseDefaultTypeInternal _LoadPackage_Result_PkgScopeMapEntry_DoNotUse_default_instance_;
class LoadPackage_Result_ScopesEntry_DoNotUse;
struct LoadPackage_Result_ScopesEntry_DoNotUseDefaultTypeInternal;
extern LoadPackage_Result_ScopesEntry_DoNotUseDefaultTypeInternal _LoadPackage_Result_ScopesEntry_DoNotUse_default_instance_;
class LoadPackage_Result_SymbolNodeMapEntry_DoNotUse;
struct LoadPackage_Result_SymbolNodeMapEntry_DoNotUseDefaultTypeInternal;
extern LoadPackage_Result_SymbolNodeMapEntry_DoNotUseDefaultTypeInternal _LoadPackage_Result_SymbolNodeMapEntry_DoNotUse_default_instance_;
class LoadPackage_Result_SymbolsEntry_DoNotUse;
struct LoadPackage_Result_SymbolsEntry_DoNotUseDefaultTypeInternal;
extern LoadPackage_Result_SymbolsEntry_DoNotUseDefaultTypeInternal _LoadPackage_Result_SymbolsEntry_DoNotUse_default_instance_;
class LoadSettingsFiles_Args;
struct LoadSettingsFiles_ArgsDefaultTypeInternal;
extern LoadSettingsFiles_ArgsDefaultTypeInternal _LoadSettingsFiles_Args_default_instance_;
class LoadSettingsFiles_Result;
struct LoadSettingsFiles_ResultDefaultTypeInternal;
extern LoadSettingsFiles_ResultDefaultTypeInternal _LoadSettingsFiles_Result_default_instance_;
class MapEntry;
struct MapEntryDefaultTypeInternal;
extern MapEntryDefaultTypeInternal _MapEntry_default_instance_;
class Message;
struct MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class OptionHelp;
struct OptionHelpDefaultTypeInternal;
extern OptionHelpDefaultTypeInternal _OptionHelp_default_instance_;
class OverrideFile_Args;
struct OverrideFile_ArgsDefaultTypeInternal;
extern OverrideFile_ArgsDefaultTypeInternal _OverrideFile_Args_default_instance_;
class OverrideFile_Result;
struct OverrideFile_ResultDefaultTypeInternal;
extern OverrideFile_ResultDefaultTypeInternal _OverrideFile_Result_default_instance_;
class ParseFile_Args;
struct ParseFile_ArgsDefaultTypeInternal;
extern ParseFile_ArgsDefaultTypeInternal _ParseFile_Args_default_instance_;
class ParseFile_Result;
struct ParseFile_ResultDefaultTypeInternal;
extern ParseFile_ResultDefaultTypeInternal _ParseFile_Result_default_instance_;
class ParseProgram_Args;
struct ParseProgram_ArgsDefaultTypeInternal;
extern ParseProgram_ArgsDefaultTypeInternal _ParseProgram_Args_default_instance_;
class ParseProgram_Result;
struct ParseProgram_ResultDefaultTypeInternal;
extern ParseProgram_ResultDefaultTypeInternal _ParseProgram_Result_default_instance_;
class Ping_Args;
struct Ping_ArgsDefaultTypeInternal;
extern Ping_ArgsDefaultTypeInternal _Ping_Args_default_instance_;
class Ping_Result;
struct Ping_ResultDefaultTypeInternal;
extern Ping_ResultDefaultTypeInternal _Ping_Result_default_instance_;
class Position;
struct PositionDefaultTypeInternal;
extern PositionDefaultTypeInternal _Position_default_instance_;
class RenameCode_Args;
struct RenameCode_ArgsDefaultTypeInternal;
extern RenameCode_ArgsDefaultTypeInternal _RenameCode_Args_default_instance_;
class RenameCode_Args_SourceCodesEntry_DoNotUse;
struct RenameCode_Args_SourceCodesEntry_DoNotUseDefaultTypeInternal;
extern RenameCode_Args_SourceCodesEntry_DoNotUseDefaultTypeInternal _RenameCode_Args_SourceCodesEntry_DoNotUse_default_instance_;
class RenameCode_Result;
struct RenameCode_ResultDefaultTypeInternal;
extern RenameCode_ResultDefaultTypeInternal _RenameCode_Result_default_instance_;
class RenameCode_Result_ChangedCodesEntry_DoNotUse;
struct RenameCode_Result_ChangedCodesEntry_DoNotUseDefaultTypeInternal;
extern RenameCode_Result_ChangedCodesEntry_DoNotUseDefaultTypeInternal _RenameCode_Result_ChangedCodesEntry_DoNotUse_default_instance_;
class Rename_Args;
struct Rename_ArgsDefaultTypeInternal;
extern Rename_ArgsDefaultTypeInternal _Rename_Args_default_instance_;
class Rename_Result;
struct Rename_ResultDefaultTypeInternal;
extern Rename_ResultDefaultTypeInternal _Rename_Result_default_instance_;
class ResetPlugin_Args;
struct ResetPlugin_ArgsDefaultTypeInternal;
extern ResetPlugin_ArgsDefaultTypeInternal _ResetPlugin_Args_default_instance_;
class ResetPlugin_Result;
struct ResetPlugin_ResultDefaultTypeInternal;
extern ResetPlugin_ResultDefaultTypeInternal _ResetPlugin_Result_default_instance_;
class Scope;
struct ScopeDefaultTypeInternal;
extern ScopeDefaultTypeInternal _Scope_default_instance_;
class ScopeIndex;
struct ScopeIndexDefaultTypeInternal;
extern ScopeIndexDefaultTypeInternal _ScopeIndex_default_instance_;
class Symbol;
struct SymbolDefaultTypeInternal;
extern SymbolDefaultTypeInternal _Symbol_default_instance_;
class SymbolIndex;
struct SymbolIndexDefaultTypeInternal;
extern SymbolIndexDefaultTypeInternal _SymbolIndex_default_instance_;
class TestCaseInfo;
struct TestCaseInfoDefaultTypeInternal;
extern TestCaseInfoDefaultTypeInternal _TestCaseInfo_default_instance_;
class Test_Args;
struct Test_ArgsDefaultTypeInternal;
extern Test_ArgsDefaultTypeInternal _Test_Args_default_instance_;
class Test_Result;
struct Test_ResultDefaultTypeInternal;
extern Test_ResultDefaultTypeInternal _Test_Result_default_instance_;
class UpdateDependencies_Args;
struct UpdateDependencies_ArgsDefaultTypeInternal;
extern UpdateDependencies_ArgsDefaultTypeInternal _UpdateDependencies_Args_default_instance_;
class UpdateDependencies_Result;
struct UpdateDependencies_ResultDefaultTypeInternal;
extern UpdateDependencies_ResultDefaultTypeInternal _UpdateDependencies_Result_default_instance_;
class ValidateCode_Args;
struct ValidateCode_ArgsDefaultTypeInternal;
extern ValidateCode_ArgsDefaultTypeInternal _ValidateCode_Args_default_instance_;
class ValidateCode_Result;
struct ValidateCode_ResultDefaultTypeInternal;
extern ValidateCode_ResultDefaultTypeInternal _ValidateCode_Result_default_instance_;
class Variable;
struct VariableDefaultTypeInternal;
extern VariableDefaultTypeInternal _Variable_default_instance_;
class VariableList;
struct VariableListDefaultTypeInternal;
extern VariableListDefaultTypeInternal _VariableList_default_instance_;
}  // namespace api
}  // namespace kcl
}  // namespace com
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace com {
namespace kcl {
namespace api {

// ===================================================================


// -------------------------------------------------------------------

class ValidateCode_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ValidateCode_Result) */ {
 public:
  inline ValidateCode_Result() : ValidateCode_Result(nullptr) {}
  ~ValidateCode_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateCode_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidateCode_Result(const ValidateCode_Result& from) : ValidateCode_Result(nullptr, from) {}
  inline ValidateCode_Result(ValidateCode_Result&& from) noexcept
      : ValidateCode_Result(nullptr, std::move(from)) {}
  inline ValidateCode_Result& operator=(const ValidateCode_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateCode_Result& operator=(ValidateCode_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateCode_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidateCode_Result* internal_default_instance() {
    return reinterpret_cast<const ValidateCode_Result*>(
        &_ValidateCode_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 54;
  friend void swap(ValidateCode_Result& a, ValidateCode_Result& b) { a.Swap(&b); }
  inline void Swap(ValidateCode_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateCode_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateCode_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ValidateCode_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateCode_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidateCode_Result& from) { ValidateCode_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ValidateCode_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ValidateCode_Result"; }

 protected:
  explicit ValidateCode_Result(::google::protobuf::Arena* arena);
  ValidateCode_Result(::google::protobuf::Arena* arena, const ValidateCode_Result& from);
  ValidateCode_Result(::google::protobuf::Arena* arena, ValidateCode_Result&& from) noexcept
      : ValidateCode_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kErrMessageFieldNumber = 2,
    kSuccessFieldNumber = 1,
  };
  // string err_message = 2;
  void clear_err_message() ;
  const std::string& err_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_err_message(Arg_&& arg, Args_... args);
  std::string* mutable_err_message();
  PROTOBUF_NODISCARD std::string* release_err_message();
  void set_allocated_err_message(std::string* value);

  private:
  const std::string& _internal_err_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_err_message(
      const std::string& value);
  std::string* _internal_mutable_err_message();

  public:
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ValidateCode_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ValidateCode_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidateCode_Result& from_msg);
    ::google::protobuf::internal::ArenaStringPtr err_message_;
    bool success_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ValidateCode_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ValidateCode_Args) */ {
 public:
  inline ValidateCode_Args() : ValidateCode_Args(nullptr) {}
  ~ValidateCode_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateCode_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline ValidateCode_Args(const ValidateCode_Args& from) : ValidateCode_Args(nullptr, from) {}
  inline ValidateCode_Args(ValidateCode_Args&& from) noexcept
      : ValidateCode_Args(nullptr, std::move(from)) {}
  inline ValidateCode_Args& operator=(const ValidateCode_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateCode_Args& operator=(ValidateCode_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateCode_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const ValidateCode_Args* internal_default_instance() {
    return reinterpret_cast<const ValidateCode_Args*>(
        &_ValidateCode_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 53;
  friend void swap(ValidateCode_Args& a, ValidateCode_Args& b) { a.Swap(&b); }
  inline void Swap(ValidateCode_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateCode_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateCode_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ValidateCode_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateCode_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidateCode_Args& from) { ValidateCode_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ValidateCode_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ValidateCode_Args"; }

 protected:
  explicit ValidateCode_Args(::google::protobuf::Arena* arena);
  ValidateCode_Args(::google::protobuf::Arena* arena, const ValidateCode_Args& from);
  ValidateCode_Args(::google::protobuf::Arena* arena, ValidateCode_Args&& from) noexcept
      : ValidateCode_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDatafileFieldNumber = 1,
    kDataFieldNumber = 2,
    kFileFieldNumber = 3,
    kCodeFieldNumber = 4,
    kSchemaFieldNumber = 5,
    kAttributeNameFieldNumber = 6,
    kFormatFieldNumber = 7,
  };
  // string datafile = 1;
  void clear_datafile() ;
  const std::string& datafile() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_datafile(Arg_&& arg, Args_... args);
  std::string* mutable_datafile();
  PROTOBUF_NODISCARD std::string* release_datafile();
  void set_allocated_datafile(std::string* value);

  private:
  const std::string& _internal_datafile() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_datafile(
      const std::string& value);
  std::string* _internal_mutable_datafile();

  public:
  // string data = 2;
  void clear_data() ;
  const std::string& data() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_data(Arg_&& arg, Args_... args);
  std::string* mutable_data();
  PROTOBUF_NODISCARD std::string* release_data();
  void set_allocated_data(std::string* value);

  private:
  const std::string& _internal_data() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_data(
      const std::string& value);
  std::string* _internal_mutable_data();

  public:
  // string file = 3;
  void clear_file() ;
  const std::string& file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file(Arg_&& arg, Args_... args);
  std::string* mutable_file();
  PROTOBUF_NODISCARD std::string* release_file();
  void set_allocated_file(std::string* value);

  private:
  const std::string& _internal_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file(
      const std::string& value);
  std::string* _internal_mutable_file();

  public:
  // string code = 4;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // string schema = 5;
  void clear_schema() ;
  const std::string& schema() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_schema(Arg_&& arg, Args_... args);
  std::string* mutable_schema();
  PROTOBUF_NODISCARD std::string* release_schema();
  void set_allocated_schema(std::string* value);

  private:
  const std::string& _internal_schema() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_schema(
      const std::string& value);
  std::string* _internal_mutable_schema();

  public:
  // string attribute_name = 6;
  void clear_attribute_name() ;
  const std::string& attribute_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_attribute_name(Arg_&& arg, Args_... args);
  std::string* mutable_attribute_name();
  PROTOBUF_NODISCARD std::string* release_attribute_name();
  void set_allocated_attribute_name(std::string* value);

  private:
  const std::string& _internal_attribute_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_attribute_name(
      const std::string& value);
  std::string* _internal_mutable_attribute_name();

  public:
  // string format = 7;
  void clear_format() ;
  const std::string& format() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_format(Arg_&& arg, Args_... args);
  std::string* mutable_format();
  PROTOBUF_NODISCARD std::string* release_format();
  void set_allocated_format(std::string* value);

  private:
  const std::string& _internal_format() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_format(
      const std::string& value);
  std::string* _internal_mutable_format();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ValidateCode_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 7, 0,
      84, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ValidateCode_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ValidateCode_Args& from_msg);
    ::google::protobuf::internal::ArenaStringPtr datafile_;
    ::google::protobuf::internal::ArenaStringPtr data_;
    ::google::protobuf::internal::ArenaStringPtr file_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    ::google::protobuf::internal::ArenaStringPtr schema_;
    ::google::protobuf::internal::ArenaStringPtr attribute_name_;
    ::google::protobuf::internal::ArenaStringPtr format_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class UpdateDependencies_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.UpdateDependencies_Args) */ {
 public:
  inline UpdateDependencies_Args() : UpdateDependencies_Args(nullptr) {}
  ~UpdateDependencies_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDependencies_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDependencies_Args(const UpdateDependencies_Args& from) : UpdateDependencies_Args(nullptr, from) {}
  inline UpdateDependencies_Args(UpdateDependencies_Args&& from) noexcept
      : UpdateDependencies_Args(nullptr, std::move(from)) {}
  inline UpdateDependencies_Args& operator=(const UpdateDependencies_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDependencies_Args& operator=(UpdateDependencies_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDependencies_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDependencies_Args* internal_default_instance() {
    return reinterpret_cast<const UpdateDependencies_Args*>(
        &_UpdateDependencies_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 71;
  friend void swap(UpdateDependencies_Args& a, UpdateDependencies_Args& b) { a.Swap(&b); }
  inline void Swap(UpdateDependencies_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDependencies_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDependencies_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDependencies_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDependencies_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDependencies_Args& from) { UpdateDependencies_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateDependencies_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.UpdateDependencies_Args"; }

 protected:
  explicit UpdateDependencies_Args(::google::protobuf::Arena* arena);
  UpdateDependencies_Args(::google::protobuf::Arena* arena, const UpdateDependencies_Args& from);
  UpdateDependencies_Args(::google::protobuf::Arena* arena, UpdateDependencies_Args&& from) noexcept
      : UpdateDependencies_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kManifestPathFieldNumber = 1,
    kVendorFieldNumber = 2,
  };
  // string manifest_path = 1;
  void clear_manifest_path() ;
  const std::string& manifest_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_manifest_path(Arg_&& arg, Args_... args);
  std::string* mutable_manifest_path();
  PROTOBUF_NODISCARD std::string* release_manifest_path();
  void set_allocated_manifest_path(std::string* value);

  private:
  const std::string& _internal_manifest_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_manifest_path(
      const std::string& value);
  std::string* _internal_mutable_manifest_path();

  public:
  // bool vendor = 2;
  void clear_vendor() ;
  bool vendor() const;
  void set_vendor(bool value);

  private:
  bool _internal_vendor() const;
  void _internal_set_vendor(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.UpdateDependencies_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateDependencies_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDependencies_Args& from_msg);
    ::google::protobuf::internal::ArenaStringPtr manifest_path_;
    bool vendor_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class TestCaseInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.TestCaseInfo) */ {
 public:
  inline TestCaseInfo() : TestCaseInfo(nullptr) {}
  ~TestCaseInfo() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TestCaseInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline TestCaseInfo(const TestCaseInfo& from) : TestCaseInfo(nullptr, from) {}
  inline TestCaseInfo(TestCaseInfo&& from) noexcept
      : TestCaseInfo(nullptr, std::move(from)) {}
  inline TestCaseInfo& operator=(const TestCaseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline TestCaseInfo& operator=(TestCaseInfo&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TestCaseInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const TestCaseInfo* internal_default_instance() {
    return reinterpret_cast<const TestCaseInfo*>(
        &_TestCaseInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 70;
  friend void swap(TestCaseInfo& a, TestCaseInfo& b) { a.Swap(&b); }
  inline void Swap(TestCaseInfo* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TestCaseInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TestCaseInfo* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<TestCaseInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TestCaseInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TestCaseInfo& from) { TestCaseInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(TestCaseInfo* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.TestCaseInfo"; }

 protected:
  explicit TestCaseInfo(::google::protobuf::Arena* arena);
  TestCaseInfo(::google::protobuf::Arena* arena, const TestCaseInfo& from);
  TestCaseInfo(::google::protobuf::Arena* arena, TestCaseInfo&& from) noexcept
      : TestCaseInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kErrorFieldNumber = 2,
    kLogMessageFieldNumber = 4,
    kDurationFieldNumber = 3,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string error = 2;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* value);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // string log_message = 4;
  void clear_log_message() ;
  const std::string& log_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log_message(Arg_&& arg, Args_... args);
  std::string* mutable_log_message();
  PROTOBUF_NODISCARD std::string* release_log_message();
  void set_allocated_log_message(std::string* value);

  private:
  const std::string& _internal_log_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_log_message(
      const std::string& value);
  std::string* _internal_mutable_log_message();

  public:
  // uint64 duration = 3;
  void clear_duration() ;
  ::uint64_t duration() const;
  void set_duration(::uint64_t value);

  private:
  ::uint64_t _internal_duration() const;
  void _internal_set_duration(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.TestCaseInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      53, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_TestCaseInfo_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const TestCaseInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    ::google::protobuf::internal::ArenaStringPtr log_message_;
    ::uint64_t duration_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class SymbolIndex final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.SymbolIndex) */ {
 public:
  inline SymbolIndex() : SymbolIndex(nullptr) {}
  ~SymbolIndex() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR SymbolIndex(
      ::google::protobuf::internal::ConstantInitialized);

  inline SymbolIndex(const SymbolIndex& from) : SymbolIndex(nullptr, from) {}
  inline SymbolIndex(SymbolIndex&& from) noexcept
      : SymbolIndex(nullptr, std::move(from)) {}
  inline SymbolIndex& operator=(const SymbolIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline SymbolIndex& operator=(SymbolIndex&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SymbolIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const SymbolIndex* internal_default_instance() {
    return reinterpret_cast<const SymbolIndex*>(
        &_SymbolIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 26;
  friend void swap(SymbolIndex& a, SymbolIndex& b) { a.Swap(&b); }
  inline void Swap(SymbolIndex* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SymbolIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SymbolIndex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<SymbolIndex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const SymbolIndex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const SymbolIndex& from) { SymbolIndex::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(SymbolIndex* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.SymbolIndex"; }

 protected:
  explicit SymbolIndex(::google::protobuf::Arena* arena);
  SymbolIndex(::google::protobuf::Arena* arena, const SymbolIndex& from);
  SymbolIndex(::google::protobuf::Arena* arena, SymbolIndex&& from) noexcept
      : SymbolIndex(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKindFieldNumber = 3,
    kIFieldNumber = 1,
    kGFieldNumber = 2,
  };
  // string kind = 3;
  void clear_kind() ;
  const std::string& kind() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kind(Arg_&& arg, Args_... args);
  std::string* mutable_kind();
  PROTOBUF_NODISCARD std::string* release_kind();
  void set_allocated_kind(std::string* value);

  private:
  const std::string& _internal_kind() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_kind(
      const std::string& value);
  std::string* _internal_mutable_kind();

  public:
  // uint64 i = 1;
  void clear_i() ;
  ::uint64_t i() const;
  void set_i(::uint64_t value);

  private:
  ::uint64_t _internal_i() const;
  void _internal_set_i(::uint64_t value);

  public:
  // uint64 g = 2;
  void clear_g() ;
  ::uint64_t g() const;
  void set_g(::uint64_t value);

  private:
  ::uint64_t _internal_g() const;
  void _internal_set_g(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.SymbolIndex)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      36, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_SymbolIndex_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const SymbolIndex& from_msg);
    ::google::protobuf::internal::ArenaStringPtr kind_;
    ::uint64_t i_;
    ::uint64_t g_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ScopeIndex final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ScopeIndex) */ {
 public:
  inline ScopeIndex() : ScopeIndex(nullptr) {}
  ~ScopeIndex() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ScopeIndex(
      ::google::protobuf::internal::ConstantInitialized);

  inline ScopeIndex(const ScopeIndex& from) : ScopeIndex(nullptr, from) {}
  inline ScopeIndex(ScopeIndex&& from) noexcept
      : ScopeIndex(nullptr, std::move(from)) {}
  inline ScopeIndex& operator=(const ScopeIndex& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScopeIndex& operator=(ScopeIndex&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ScopeIndex& default_instance() {
    return *internal_default_instance();
  }
  static inline const ScopeIndex* internal_default_instance() {
    return reinterpret_cast<const ScopeIndex*>(
        &_ScopeIndex_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 27;
  friend void swap(ScopeIndex& a, ScopeIndex& b) { a.Swap(&b); }
  inline void Swap(ScopeIndex* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScopeIndex* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ScopeIndex* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ScopeIndex>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ScopeIndex& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ScopeIndex& from) { ScopeIndex::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ScopeIndex* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ScopeIndex"; }

 protected:
  explicit ScopeIndex(::google::protobuf::Arena* arena);
  ScopeIndex(::google::protobuf::Arena* arena, const ScopeIndex& from);
  ScopeIndex(::google::protobuf::Arena* arena, ScopeIndex&& from) noexcept
      : ScopeIndex(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKindFieldNumber = 3,
    kIFieldNumber = 1,
    kGFieldNumber = 2,
  };
  // string kind = 3;
  void clear_kind() ;
  const std::string& kind() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kind(Arg_&& arg, Args_... args);
  std::string* mutable_kind();
  PROTOBUF_NODISCARD std::string* release_kind();
  void set_allocated_kind(std::string* value);

  private:
  const std::string& _internal_kind() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_kind(
      const std::string& value);
  std::string* _internal_mutable_kind();

  public:
  // uint64 i = 1;
  void clear_i() ;
  ::uint64_t i() const;
  void set_i(::uint64_t value);

  private:
  ::uint64_t _internal_i() const;
  void _internal_set_i(::uint64_t value);

  public:
  // uint64 g = 2;
  void clear_g() ;
  ::uint64_t g() const;
  void set_g(::uint64_t value);

  private:
  ::uint64_t _internal_g() const;
  void _internal_set_g(::uint64_t value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ScopeIndex)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ScopeIndex_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ScopeIndex& from_msg);
    ::google::protobuf::internal::ArenaStringPtr kind_;
    ::uint64_t i_;
    ::uint64_t g_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ResetPlugin_Result final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:com.kcl.api.ResetPlugin_Result) */ {
 public:
  inline ResetPlugin_Result() : ResetPlugin_Result(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResetPlugin_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResetPlugin_Result(const ResetPlugin_Result& from) : ResetPlugin_Result(nullptr, from) {}
  inline ResetPlugin_Result(ResetPlugin_Result&& from) noexcept
      : ResetPlugin_Result(nullptr, std::move(from)) {}
  inline ResetPlugin_Result& operator=(const ResetPlugin_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetPlugin_Result& operator=(ResetPlugin_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetPlugin_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetPlugin_Result* internal_default_instance() {
    return reinterpret_cast<const ResetPlugin_Result*>(
        &_ResetPlugin_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 34;
  friend void swap(ResetPlugin_Result& a, ResetPlugin_Result& b) { a.Swap(&b); }
  inline void Swap(ResetPlugin_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetPlugin_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResetPlugin_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ResetPlugin_Result>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ResetPlugin_Result& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ResetPlugin_Result& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ResetPlugin_Result"; }

 protected:
  explicit ResetPlugin_Result(::google::protobuf::Arena* arena);
  ResetPlugin_Result(::google::protobuf::Arena* arena, const ResetPlugin_Result& from);
  ResetPlugin_Result(::google::protobuf::Arena* arena, ResetPlugin_Result&& from) noexcept
      : ResetPlugin_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:com.kcl.api.ResetPlugin_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResetPlugin_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResetPlugin_Result& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ResetPlugin_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ResetPlugin_Args) */ {
 public:
  inline ResetPlugin_Args() : ResetPlugin_Args(nullptr) {}
  ~ResetPlugin_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ResetPlugin_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline ResetPlugin_Args(const ResetPlugin_Args& from) : ResetPlugin_Args(nullptr, from) {}
  inline ResetPlugin_Args(ResetPlugin_Args&& from) noexcept
      : ResetPlugin_Args(nullptr, std::move(from)) {}
  inline ResetPlugin_Args& operator=(const ResetPlugin_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline ResetPlugin_Args& operator=(ResetPlugin_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ResetPlugin_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const ResetPlugin_Args* internal_default_instance() {
    return reinterpret_cast<const ResetPlugin_Args*>(
        &_ResetPlugin_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 33;
  friend void swap(ResetPlugin_Args& a, ResetPlugin_Args& b) { a.Swap(&b); }
  inline void Swap(ResetPlugin_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ResetPlugin_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ResetPlugin_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ResetPlugin_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ResetPlugin_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ResetPlugin_Args& from) { ResetPlugin_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ResetPlugin_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ResetPlugin_Args"; }

 protected:
  explicit ResetPlugin_Args(::google::protobuf::Arena* arena);
  ResetPlugin_Args(::google::protobuf::Arena* arena, const ResetPlugin_Args& from);
  ResetPlugin_Args(::google::protobuf::Arena* arena, ResetPlugin_Args&& from) noexcept
      : ResetPlugin_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPluginRootFieldNumber = 1,
  };
  // string plugin_root = 1;
  void clear_plugin_root() ;
  const std::string& plugin_root() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_plugin_root(Arg_&& arg, Args_... args);
  std::string* mutable_plugin_root();
  PROTOBUF_NODISCARD std::string* release_plugin_root();
  void set_allocated_plugin_root(std::string* value);

  private:
  const std::string& _internal_plugin_root() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_plugin_root(
      const std::string& value);
  std::string* _internal_mutable_plugin_root();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ResetPlugin_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ResetPlugin_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ResetPlugin_Args& from_msg);
    ::google::protobuf::internal::ArenaStringPtr plugin_root_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Rename_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Rename_Result) */ {
 public:
  inline Rename_Result() : Rename_Result(nullptr) {}
  ~Rename_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Rename_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline Rename_Result(const Rename_Result& from) : Rename_Result(nullptr, from) {}
  inline Rename_Result(Rename_Result&& from) noexcept
      : Rename_Result(nullptr, std::move(from)) {}
  inline Rename_Result& operator=(const Rename_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline Rename_Result& operator=(Rename_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Rename_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const Rename_Result* internal_default_instance() {
    return reinterpret_cast<const Rename_Result*>(
        &_Rename_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 63;
  friend void swap(Rename_Result& a, Rename_Result& b) { a.Swap(&b); }
  inline void Swap(Rename_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Rename_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Rename_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Rename_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Rename_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Rename_Result& from) { Rename_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Rename_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Rename_Result"; }

 protected:
  explicit Rename_Result(::google::protobuf::Arena* arena);
  Rename_Result(::google::protobuf::Arena* arena, const Rename_Result& from);
  Rename_Result(::google::protobuf::Arena* arena, Rename_Result&& from) noexcept
      : Rename_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChangedFilesFieldNumber = 1,
  };
  // repeated string changed_files = 1;
  int changed_files_size() const;
  private:
  int _internal_changed_files_size() const;

  public:
  void clear_changed_files() ;
  const std::string& changed_files(int index) const;
  std::string* mutable_changed_files(int index);
  void set_changed_files(int index, const std::string& value);
  void set_changed_files(int index, std::string&& value);
  void set_changed_files(int index, const char* value);
  void set_changed_files(int index, const char* value, std::size_t size);
  void set_changed_files(int index, absl::string_view value);
  std::string* add_changed_files();
  void add_changed_files(const std::string& value);
  void add_changed_files(std::string&& value);
  void add_changed_files(const char* value);
  void add_changed_files(const char* value, std::size_t size);
  void add_changed_files(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& changed_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_changed_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_changed_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_changed_files();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Rename_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Rename_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Rename_Result& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> changed_files_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Rename_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Rename_Args) */ {
 public:
  inline Rename_Args() : Rename_Args(nullptr) {}
  ~Rename_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Rename_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline Rename_Args(const Rename_Args& from) : Rename_Args(nullptr, from) {}
  inline Rename_Args(Rename_Args&& from) noexcept
      : Rename_Args(nullptr, std::move(from)) {}
  inline Rename_Args& operator=(const Rename_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline Rename_Args& operator=(Rename_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Rename_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const Rename_Args* internal_default_instance() {
    return reinterpret_cast<const Rename_Args*>(
        &_Rename_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 62;
  friend void swap(Rename_Args& a, Rename_Args& b) { a.Swap(&b); }
  inline void Swap(Rename_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Rename_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Rename_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Rename_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Rename_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Rename_Args& from) { Rename_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Rename_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Rename_Args"; }

 protected:
  explicit Rename_Args(::google::protobuf::Arena* arena);
  Rename_Args(::google::protobuf::Arena* arena, const Rename_Args& from);
  Rename_Args(::google::protobuf::Arena* arena, Rename_Args&& from) noexcept
      : Rename_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilePathsFieldNumber = 3,
    kPackageRootFieldNumber = 1,
    kSymbolPathFieldNumber = 2,
    kNewNameFieldNumber = 4,
  };
  // repeated string file_paths = 3;
  int file_paths_size() const;
  private:
  int _internal_file_paths_size() const;

  public:
  void clear_file_paths() ;
  const std::string& file_paths(int index) const;
  std::string* mutable_file_paths(int index);
  void set_file_paths(int index, const std::string& value);
  void set_file_paths(int index, std::string&& value);
  void set_file_paths(int index, const char* value);
  void set_file_paths(int index, const char* value, std::size_t size);
  void set_file_paths(int index, absl::string_view value);
  std::string* add_file_paths();
  void add_file_paths(const std::string& value);
  void add_file_paths(std::string&& value);
  void add_file_paths(const char* value);
  void add_file_paths(const char* value, std::size_t size);
  void add_file_paths(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& file_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_file_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_file_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_file_paths();

  public:
  // string package_root = 1;
  void clear_package_root() ;
  const std::string& package_root() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_package_root(Arg_&& arg, Args_... args);
  std::string* mutable_package_root();
  PROTOBUF_NODISCARD std::string* release_package_root();
  void set_allocated_package_root(std::string* value);

  private:
  const std::string& _internal_package_root() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_package_root(
      const std::string& value);
  std::string* _internal_mutable_package_root();

  public:
  // string symbol_path = 2;
  void clear_symbol_path() ;
  const std::string& symbol_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_symbol_path(Arg_&& arg, Args_... args);
  std::string* mutable_symbol_path();
  PROTOBUF_NODISCARD std::string* release_symbol_path();
  void set_allocated_symbol_path(std::string* value);

  private:
  const std::string& _internal_symbol_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_symbol_path(
      const std::string& value);
  std::string* _internal_mutable_symbol_path();

  public:
  // string new_name = 4;
  void clear_new_name() ;
  const std::string& new_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_name(Arg_&& arg, Args_... args);
  std::string* mutable_new_name();
  PROTOBUF_NODISCARD std::string* release_new_name();
  void set_allocated_new_name(std::string* value);

  private:
  const std::string& _internal_new_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_name(
      const std::string& value);
  std::string* _internal_mutable_new_name();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Rename_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      73, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Rename_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Rename_Args& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> file_paths_;
    ::google::protobuf::internal::ArenaStringPtr package_root_;
    ::google::protobuf::internal::ArenaStringPtr symbol_path_;
    ::google::protobuf::internal::ArenaStringPtr new_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class RenameCode_Result_ChangedCodesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          RenameCode_Result_ChangedCodesEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      RenameCode_Result_ChangedCodesEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  RenameCode_Result_ChangedCodesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RenameCode_Result_ChangedCodesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit RenameCode_Result_ChangedCodesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const RenameCode_Result_ChangedCodesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const RenameCode_Result_ChangedCodesEntry_DoNotUse*>(
        &_RenameCode_Result_ChangedCodesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class RenameCode_Args_SourceCodesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          RenameCode_Args_SourceCodesEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      RenameCode_Args_SourceCodesEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  RenameCode_Args_SourceCodesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RenameCode_Args_SourceCodesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit RenameCode_Args_SourceCodesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const RenameCode_Args_SourceCodesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const RenameCode_Args_SourceCodesEntry_DoNotUse*>(
        &_RenameCode_Args_SourceCodesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Position final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Position) */ {
 public:
  inline Position() : Position(nullptr) {}
  ~Position() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Position(
      ::google::protobuf::internal::ConstantInitialized);

  inline Position(const Position& from) : Position(nullptr, from) {}
  inline Position(Position&& from) noexcept
      : Position(nullptr, std::move(from)) {}
  inline Position& operator=(const Position& from) {
    CopyFrom(from);
    return *this;
  }
  inline Position& operator=(Position&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Position& default_instance() {
    return *internal_default_instance();
  }
  static inline const Position* internal_default_instance() {
    return reinterpret_cast<const Position*>(
        &_Position_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 55;
  friend void swap(Position& a, Position& b) { a.Swap(&b); }
  inline void Swap(Position* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Position* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Position* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Position>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Position& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Position& from) { Position::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Position* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Position"; }

 protected:
  explicit Position(::google::protobuf::Arena* arena);
  Position(::google::protobuf::Arena* arena, const Position& from);
  Position(::google::protobuf::Arena* arena, Position&& from) noexcept
      : Position(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilenameFieldNumber = 3,
    kLineFieldNumber = 1,
    kColumnFieldNumber = 2,
  };
  // string filename = 3;
  void clear_filename() ;
  const std::string& filename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* value);

  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(
      const std::string& value);
  std::string* _internal_mutable_filename();

  public:
  // int64 line = 1;
  void clear_line() ;
  ::int64_t line() const;
  void set_line(::int64_t value);

  private:
  ::int64_t _internal_line() const;
  void _internal_set_line(::int64_t value);

  public:
  // int64 column = 2;
  void clear_column() ;
  ::int64_t column() const;
  void set_column(::int64_t value);

  private:
  ::int64_t _internal_column() const;
  void _internal_set_column(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Position)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      37, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Position_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Position& from_msg);
    ::google::protobuf::internal::ArenaStringPtr filename_;
    ::int64_t line_;
    ::int64_t column_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Ping_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Ping_Result) */ {
 public:
  inline Ping_Result() : Ping_Result(nullptr) {}
  ~Ping_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Ping_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline Ping_Result(const Ping_Result& from) : Ping_Result(nullptr, from) {}
  inline Ping_Result(Ping_Result&& from) noexcept
      : Ping_Result(nullptr, std::move(from)) {}
  inline Ping_Result& operator=(const Ping_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ping_Result& operator=(Ping_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ping_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ping_Result* internal_default_instance() {
    return reinterpret_cast<const Ping_Result*>(
        &_Ping_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(Ping_Result& a, Ping_Result& b) { a.Swap(&b); }
  inline void Swap(Ping_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ping_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ping_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Ping_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Ping_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Ping_Result& from) { Ping_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Ping_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Ping_Result"; }

 protected:
  explicit Ping_Result(::google::protobuf::Arena* arena);
  Ping_Result(::google::protobuf::Arena* arena, const Ping_Result& from);
  Ping_Result(::google::protobuf::Arena* arena, Ping_Result&& from) noexcept
      : Ping_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // string value = 1;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Ping_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      37, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Ping_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Ping_Result& from_msg);
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Ping_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Ping_Args) */ {
 public:
  inline Ping_Args() : Ping_Args(nullptr) {}
  ~Ping_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Ping_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline Ping_Args(const Ping_Args& from) : Ping_Args(nullptr, from) {}
  inline Ping_Args(Ping_Args&& from) noexcept
      : Ping_Args(nullptr, std::move(from)) {}
  inline Ping_Args& operator=(const Ping_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline Ping_Args& operator=(Ping_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Ping_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const Ping_Args* internal_default_instance() {
    return reinterpret_cast<const Ping_Args*>(
        &_Ping_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(Ping_Args& a, Ping_Args& b) { a.Swap(&b); }
  inline void Swap(Ping_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Ping_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Ping_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Ping_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Ping_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Ping_Args& from) { Ping_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Ping_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Ping_Args"; }

 protected:
  explicit Ping_Args(::google::protobuf::Arena* arena);
  Ping_Args(::google::protobuf::Arena* arena, const Ping_Args& from);
  Ping_Args(::google::protobuf::Arena* arena, Ping_Args&& from) noexcept
      : Ping_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kValueFieldNumber = 1,
  };
  // string value = 1;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Ping_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Ping_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Ping_Args& from_msg);
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class OverrideFile_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.OverrideFile_Args) */ {
 public:
  inline OverrideFile_Args() : OverrideFile_Args(nullptr) {}
  ~OverrideFile_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OverrideFile_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline OverrideFile_Args(const OverrideFile_Args& from) : OverrideFile_Args(nullptr, from) {}
  inline OverrideFile_Args(OverrideFile_Args&& from) noexcept
      : OverrideFile_Args(nullptr, std::move(from)) {}
  inline OverrideFile_Args& operator=(const OverrideFile_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline OverrideFile_Args& operator=(OverrideFile_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OverrideFile_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const OverrideFile_Args* internal_default_instance() {
    return reinterpret_cast<const OverrideFile_Args*>(
        &_OverrideFile_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 41;
  friend void swap(OverrideFile_Args& a, OverrideFile_Args& b) { a.Swap(&b); }
  inline void Swap(OverrideFile_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OverrideFile_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OverrideFile_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OverrideFile_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OverrideFile_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OverrideFile_Args& from) { OverrideFile_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OverrideFile_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.OverrideFile_Args"; }

 protected:
  explicit OverrideFile_Args(::google::protobuf::Arena* arena);
  OverrideFile_Args(::google::protobuf::Arena* arena, const OverrideFile_Args& from);
  OverrideFile_Args(::google::protobuf::Arena* arena, OverrideFile_Args&& from) noexcept
      : OverrideFile_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpecsFieldNumber = 2,
    kImportPathsFieldNumber = 3,
    kFileFieldNumber = 1,
  };
  // repeated string specs = 2;
  int specs_size() const;
  private:
  int _internal_specs_size() const;

  public:
  void clear_specs() ;
  const std::string& specs(int index) const;
  std::string* mutable_specs(int index);
  void set_specs(int index, const std::string& value);
  void set_specs(int index, std::string&& value);
  void set_specs(int index, const char* value);
  void set_specs(int index, const char* value, std::size_t size);
  void set_specs(int index, absl::string_view value);
  std::string* add_specs();
  void add_specs(const std::string& value);
  void add_specs(std::string&& value);
  void add_specs(const char* value);
  void add_specs(const char* value, std::size_t size);
  void add_specs(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& specs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_specs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_specs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_specs();

  public:
  // repeated string import_paths = 3;
  int import_paths_size() const;
  private:
  int _internal_import_paths_size() const;

  public:
  void clear_import_paths() ;
  const std::string& import_paths(int index) const;
  std::string* mutable_import_paths(int index);
  void set_import_paths(int index, const std::string& value);
  void set_import_paths(int index, std::string&& value);
  void set_import_paths(int index, const char* value);
  void set_import_paths(int index, const char* value, std::size_t size);
  void set_import_paths(int index, absl::string_view value);
  std::string* add_import_paths();
  void add_import_paths(const std::string& value);
  void add_import_paths(std::string&& value);
  void add_import_paths(const char* value);
  void add_import_paths(const char* value, std::size_t size);
  void add_import_paths(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& import_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_import_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_import_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_import_paths();

  public:
  // string file = 1;
  void clear_file() ;
  const std::string& file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file(Arg_&& arg, Args_... args);
  std::string* mutable_file();
  PROTOBUF_NODISCARD std::string* release_file();
  void set_allocated_file(std::string* value);

  private:
  const std::string& _internal_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file(
      const std::string& value);
  std::string* _internal_mutable_file();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.OverrideFile_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OverrideFile_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OverrideFile_Args& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> specs_;
    ::google::protobuf::RepeatedPtrField<std::string> import_paths_;
    ::google::protobuf::internal::ArenaStringPtr file_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class OptionHelp final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.OptionHelp) */ {
 public:
  inline OptionHelp() : OptionHelp(nullptr) {}
  ~OptionHelp() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OptionHelp(
      ::google::protobuf::internal::ConstantInitialized);

  inline OptionHelp(const OptionHelp& from) : OptionHelp(nullptr, from) {}
  inline OptionHelp(OptionHelp&& from) noexcept
      : OptionHelp(nullptr, std::move(from)) {}
  inline OptionHelp& operator=(const OptionHelp& from) {
    CopyFrom(from);
    return *this;
  }
  inline OptionHelp& operator=(OptionHelp&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OptionHelp& default_instance() {
    return *internal_default_instance();
  }
  static inline const OptionHelp* internal_default_instance() {
    return reinterpret_cast<const OptionHelp*>(
        &_OptionHelp_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 23;
  friend void swap(OptionHelp& a, OptionHelp& b) { a.Swap(&b); }
  inline void Swap(OptionHelp* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OptionHelp* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OptionHelp* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OptionHelp>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OptionHelp& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OptionHelp& from) { OptionHelp::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OptionHelp* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.OptionHelp"; }

 protected:
  explicit OptionHelp(::google::protobuf::Arena* arena);
  OptionHelp(::google::protobuf::Arena* arena, const OptionHelp& from);
  OptionHelp(::google::protobuf::Arena* arena, OptionHelp&& from) noexcept
      : OptionHelp(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kTypeFieldNumber = 2,
    kDefaultValueFieldNumber = 4,
    kHelpFieldNumber = 5,
    kRequiredFieldNumber = 3,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string type = 2;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string default_value = 4;
  void clear_default_value() ;
  const std::string& default_value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_value(Arg_&& arg, Args_... args);
  std::string* mutable_default_value();
  PROTOBUF_NODISCARD std::string* release_default_value();
  void set_allocated_default_value(std::string* value);

  private:
  const std::string& _internal_default_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_value(
      const std::string& value);
  std::string* _internal_mutable_default_value();

  public:
  // string help = 5;
  void clear_help() ;
  const std::string& help() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_help(Arg_&& arg, Args_... args);
  std::string* mutable_help();
  PROTOBUF_NODISCARD std::string* release_help();
  void set_allocated_help(std::string* value);

  private:
  const std::string& _internal_help() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_help(
      const std::string& value);
  std::string* _internal_mutable_help();

  public:
  // bool required = 3;
  void clear_required() ;
  bool required() const;
  void set_required(bool value);

  private:
  bool _internal_required() const;
  void _internal_set_required(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.OptionHelp)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OptionHelp_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OptionHelp& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr default_value_;
    ::google::protobuf::internal::ArenaStringPtr help_;
    bool required_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class MapEntry final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.MapEntry) */ {
 public:
  inline MapEntry() : MapEntry(nullptr) {}
  ~MapEntry() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MapEntry(
      ::google::protobuf::internal::ConstantInitialized);

  inline MapEntry(const MapEntry& from) : MapEntry(nullptr, from) {}
  inline MapEntry(MapEntry&& from) noexcept
      : MapEntry(nullptr, std::move(from)) {}
  inline MapEntry& operator=(const MapEntry& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapEntry& operator=(MapEntry&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MapEntry& default_instance() {
    return *internal_default_instance();
  }
  static inline const MapEntry* internal_default_instance() {
    return reinterpret_cast<const MapEntry*>(
        &_MapEntry_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 49;
  friend void swap(MapEntry& a, MapEntry& b) { a.Swap(&b); }
  inline void Swap(MapEntry* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapEntry* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MapEntry* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<MapEntry>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MapEntry& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MapEntry& from) { MapEntry::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(MapEntry* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.MapEntry"; }

 protected:
  explicit MapEntry(::google::protobuf::Arena* arena);
  MapEntry(::google::protobuf::Arena* arena, const MapEntry& from);
  MapEntry(::google::protobuf::Arena* arena, MapEntry&& from) noexcept
      : MapEntry(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // .com.kcl.api.Variable value = 2;
  bool has_value() const;
  void clear_value() ;
  const ::com::kcl::api::Variable& value() const;
  PROTOBUF_NODISCARD ::com::kcl::api::Variable* release_value();
  ::com::kcl::api::Variable* mutable_value();
  void set_allocated_value(::com::kcl::api::Variable* value);
  void unsafe_arena_set_allocated_value(::com::kcl::api::Variable* value);
  ::com::kcl::api::Variable* unsafe_arena_release_value();

  private:
  const ::com::kcl::api::Variable& _internal_value() const;
  ::com::kcl::api::Variable* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.MapEntry)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      32, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_MapEntry_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MapEntry& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::com::kcl::api::Variable* value_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Variable final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Variable) */ {
 public:
  inline Variable() : Variable(nullptr) {}
  ~Variable() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Variable(
      ::google::protobuf::internal::ConstantInitialized);

  inline Variable(const Variable& from) : Variable(nullptr, from) {}
  inline Variable(Variable&& from) noexcept
      : Variable(nullptr, std::move(from)) {}
  inline Variable& operator=(const Variable& from) {
    CopyFrom(from);
    return *this;
  }
  inline Variable& operator=(Variable&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Variable& default_instance() {
    return *internal_default_instance();
  }
  static inline const Variable* internal_default_instance() {
    return reinterpret_cast<const Variable*>(
        &_Variable_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 48;
  friend void swap(Variable& a, Variable& b) { a.Swap(&b); }
  inline void Swap(Variable* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Variable* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Variable* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Variable>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Variable& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Variable& from) { Variable::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Variable* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Variable"; }

 protected:
  explicit Variable(::google::protobuf::Arena* arena);
  Variable(::google::protobuf::Arena* arena, const Variable& from);
  Variable(::google::protobuf::Arena* arena, Variable&& from) noexcept
      : Variable(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kListItemsFieldNumber = 4,
    kDictEntriesFieldNumber = 5,
    kValueFieldNumber = 1,
    kTypeNameFieldNumber = 2,
    kOpSymFieldNumber = 3,
  };
  // repeated .com.kcl.api.Variable list_items = 4;
  int list_items_size() const;
  private:
  int _internal_list_items_size() const;

  public:
  void clear_list_items() ;
  ::com::kcl::api::Variable* mutable_list_items(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>* mutable_list_items();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>& _internal_list_items() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>* _internal_mutable_list_items();
  public:
  const ::com::kcl::api::Variable& list_items(int index) const;
  ::com::kcl::api::Variable* add_list_items();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>& list_items() const;
  // repeated .com.kcl.api.MapEntry dict_entries = 5;
  int dict_entries_size() const;
  private:
  int _internal_dict_entries_size() const;

  public:
  void clear_dict_entries() ;
  ::com::kcl::api::MapEntry* mutable_dict_entries(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::MapEntry>* mutable_dict_entries();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::MapEntry>& _internal_dict_entries() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::MapEntry>* _internal_mutable_dict_entries();
  public:
  const ::com::kcl::api::MapEntry& dict_entries(int index) const;
  ::com::kcl::api::MapEntry* add_dict_entries();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::MapEntry>& dict_entries() const;
  // string value = 1;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // string type_name = 2;
  void clear_type_name() ;
  const std::string& type_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type_name(Arg_&& arg, Args_... args);
  std::string* mutable_type_name();
  PROTOBUF_NODISCARD std::string* release_type_name();
  void set_allocated_type_name(std::string* value);

  private:
  const std::string& _internal_type_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type_name(
      const std::string& value);
  std::string* _internal_mutable_type_name();

  public:
  // string op_sym = 3;
  void clear_op_sym() ;
  const std::string& op_sym() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_op_sym(Arg_&& arg, Args_... args);
  std::string* mutable_op_sym();
  PROTOBUF_NODISCARD std::string* release_op_sym();
  void set_allocated_op_sym(std::string* value);

  private:
  const std::string& _internal_op_sym() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_op_sym(
      const std::string& value);
  std::string* _internal_mutable_op_sym();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Variable)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 2,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Variable_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Variable& from_msg);
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Variable > list_items_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::MapEntry > dict_entries_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    ::google::protobuf::internal::ArenaStringPtr type_name_;
    ::google::protobuf::internal::ArenaStringPtr op_sym_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadSettingsFiles_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.LoadSettingsFiles_Args) */ {
 public:
  inline LoadSettingsFiles_Args() : LoadSettingsFiles_Args(nullptr) {}
  ~LoadSettingsFiles_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadSettingsFiles_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoadSettingsFiles_Args(const LoadSettingsFiles_Args& from) : LoadSettingsFiles_Args(nullptr, from) {}
  inline LoadSettingsFiles_Args(LoadSettingsFiles_Args&& from) noexcept
      : LoadSettingsFiles_Args(nullptr, std::move(from)) {}
  inline LoadSettingsFiles_Args& operator=(const LoadSettingsFiles_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadSettingsFiles_Args& operator=(LoadSettingsFiles_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadSettingsFiles_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadSettingsFiles_Args* internal_default_instance() {
    return reinterpret_cast<const LoadSettingsFiles_Args*>(
        &_LoadSettingsFiles_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 58;
  friend void swap(LoadSettingsFiles_Args& a, LoadSettingsFiles_Args& b) { a.Swap(&b); }
  inline void Swap(LoadSettingsFiles_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadSettingsFiles_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadSettingsFiles_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LoadSettingsFiles_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadSettingsFiles_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoadSettingsFiles_Args& from) { LoadSettingsFiles_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoadSettingsFiles_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.LoadSettingsFiles_Args"; }

 protected:
  explicit LoadSettingsFiles_Args(::google::protobuf::Arena* arena);
  LoadSettingsFiles_Args(::google::protobuf::Arena* arena, const LoadSettingsFiles_Args& from);
  LoadSettingsFiles_Args(::google::protobuf::Arena* arena, LoadSettingsFiles_Args&& from) noexcept
      : LoadSettingsFiles_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilesFieldNumber = 2,
    kWorkDirFieldNumber = 1,
  };
  // repeated string files = 2;
  int files_size() const;
  private:
  int _internal_files_size() const;

  public:
  void clear_files() ;
  const std::string& files(int index) const;
  std::string* mutable_files(int index);
  void set_files(int index, const std::string& value);
  void set_files(int index, std::string&& value);
  void set_files(int index, const char* value);
  void set_files(int index, const char* value, std::size_t size);
  void set_files(int index, absl::string_view value);
  std::string* add_files();
  void add_files(const std::string& value);
  void add_files(std::string&& value);
  void add_files(const char* value);
  void add_files(const char* value, std::size_t size);
  void add_files(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_files();

  public:
  // string work_dir = 1;
  void clear_work_dir() ;
  const std::string& work_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_work_dir(Arg_&& arg, Args_... args);
  std::string* mutable_work_dir();
  PROTOBUF_NODISCARD std::string* release_work_dir();
  void set_allocated_work_dir(std::string* value);

  private:
  const std::string& _internal_work_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_work_dir(
      const std::string& value);
  std::string* _internal_mutable_work_dir();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.LoadSettingsFiles_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      56, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LoadSettingsFiles_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoadSettingsFiles_Args& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> files_;
    ::google::protobuf::internal::ArenaStringPtr work_dir_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadPackage_Result_SymbolNodeMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LoadPackage_Result_SymbolNodeMapEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LoadPackage_Result_SymbolNodeMapEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  LoadPackage_Result_SymbolNodeMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPackage_Result_SymbolNodeMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LoadPackage_Result_SymbolNodeMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LoadPackage_Result_SymbolNodeMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LoadPackage_Result_SymbolNodeMapEntry_DoNotUse*>(
        &_LoadPackage_Result_SymbolNodeMapEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ListVariables_Options final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ListVariables_Options) */ {
 public:
  inline ListVariables_Options() : ListVariables_Options(nullptr) {}
  ~ListVariables_Options() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListVariables_Options(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListVariables_Options(const ListVariables_Options& from) : ListVariables_Options(nullptr, from) {}
  inline ListVariables_Options(ListVariables_Options&& from) noexcept
      : ListVariables_Options(nullptr, std::move(from)) {}
  inline ListVariables_Options& operator=(const ListVariables_Options& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListVariables_Options& operator=(ListVariables_Options&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListVariables_Options& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListVariables_Options* internal_default_instance() {
    return reinterpret_cast<const ListVariables_Options*>(
        &_ListVariables_Options_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 43;
  friend void swap(ListVariables_Options& a, ListVariables_Options& b) { a.Swap(&b); }
  inline void Swap(ListVariables_Options* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListVariables_Options* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListVariables_Options* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListVariables_Options>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListVariables_Options& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListVariables_Options& from) { ListVariables_Options::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListVariables_Options* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ListVariables_Options"; }

 protected:
  explicit ListVariables_Options(::google::protobuf::Arena* arena);
  ListVariables_Options(::google::protobuf::Arena* arena, const ListVariables_Options& from);
  ListVariables_Options(::google::protobuf::Arena* arena, ListVariables_Options&& from) noexcept
      : ListVariables_Options(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMergeProgramFieldNumber = 1,
  };
  // bool merge_program = 1;
  void clear_merge_program() ;
  bool merge_program() const;
  void set_merge_program(bool value);

  private:
  bool _internal_merge_program() const;
  void _internal_set_merge_program(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ListVariables_Options)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListVariables_Options_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListVariables_Options& from_msg);
    bool merge_program_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ListMethod_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ListMethod_Result) */ {
 public:
  inline ListMethod_Result() : ListMethod_Result(nullptr) {}
  ~ListMethod_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMethod_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMethod_Result(const ListMethod_Result& from) : ListMethod_Result(nullptr, from) {}
  inline ListMethod_Result(ListMethod_Result&& from) noexcept
      : ListMethod_Result(nullptr, std::move(from)) {}
  inline ListMethod_Result& operator=(const ListMethod_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMethod_Result& operator=(ListMethod_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMethod_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMethod_Result* internal_default_instance() {
    return reinterpret_cast<const ListMethod_Result*>(
        &_ListMethod_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 9;
  friend void swap(ListMethod_Result& a, ListMethod_Result& b) { a.Swap(&b); }
  inline void Swap(ListMethod_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMethod_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMethod_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListMethod_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListMethod_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListMethod_Result& from) { ListMethod_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListMethod_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ListMethod_Result"; }

 protected:
  explicit ListMethod_Result(::google::protobuf::Arena* arena);
  ListMethod_Result(::google::protobuf::Arena* arena, const ListMethod_Result& from);
  ListMethod_Result(::google::protobuf::Arena* arena, ListMethod_Result&& from) noexcept
      : ListMethod_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMethodNameListFieldNumber = 1,
  };
  // repeated string method_name_list = 1;
  int method_name_list_size() const;
  private:
  int _internal_method_name_list_size() const;

  public:
  void clear_method_name_list() ;
  const std::string& method_name_list(int index) const;
  std::string* mutable_method_name_list(int index);
  void set_method_name_list(int index, const std::string& value);
  void set_method_name_list(int index, std::string&& value);
  void set_method_name_list(int index, const char* value);
  void set_method_name_list(int index, const char* value, std::size_t size);
  void set_method_name_list(int index, absl::string_view value);
  std::string* add_method_name_list();
  void add_method_name_list(const std::string& value);
  void add_method_name_list(std::string&& value);
  void add_method_name_list(const char* value);
  void add_method_name_list(const char* value, std::size_t size);
  void add_method_name_list(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& method_name_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_method_name_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_method_name_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_method_name_list();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ListMethod_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListMethod_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListMethod_Result& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> method_name_list_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ListMethod_Args final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:com.kcl.api.ListMethod_Args) */ {
 public:
  inline ListMethod_Args() : ListMethod_Args(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListMethod_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListMethod_Args(const ListMethod_Args& from) : ListMethod_Args(nullptr, from) {}
  inline ListMethod_Args(ListMethod_Args&& from) noexcept
      : ListMethod_Args(nullptr, std::move(from)) {}
  inline ListMethod_Args& operator=(const ListMethod_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListMethod_Args& operator=(ListMethod_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListMethod_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListMethod_Args* internal_default_instance() {
    return reinterpret_cast<const ListMethod_Args*>(
        &_ListMethod_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 8;
  friend void swap(ListMethod_Args& a, ListMethod_Args& b) { a.Swap(&b); }
  inline void Swap(ListMethod_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListMethod_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListMethod_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<ListMethod_Args>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const ListMethod_Args& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const ListMethod_Args& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ListMethod_Args"; }

 protected:
  explicit ListMethod_Args(::google::protobuf::Arena* arena);
  ListMethod_Args(::google::protobuf::Arena* arena, const ListMethod_Args& from);
  ListMethod_Args(::google::protobuf::Arena* arena, ListMethod_Args&& from) noexcept
      : ListMethod_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:com.kcl.api.ListMethod_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListMethod_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListMethod_Args& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ListDepFiles_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ListDepFiles_Result) */ {
 public:
  inline ListDepFiles_Result() : ListDepFiles_Result(nullptr) {}
  ~ListDepFiles_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListDepFiles_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListDepFiles_Result(const ListDepFiles_Result& from) : ListDepFiles_Result(nullptr, from) {}
  inline ListDepFiles_Result(ListDepFiles_Result&& from) noexcept
      : ListDepFiles_Result(nullptr, std::move(from)) {}
  inline ListDepFiles_Result& operator=(const ListDepFiles_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDepFiles_Result& operator=(ListDepFiles_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListDepFiles_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListDepFiles_Result* internal_default_instance() {
    return reinterpret_cast<const ListDepFiles_Result*>(
        &_ListDepFiles_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 57;
  friend void swap(ListDepFiles_Result& a, ListDepFiles_Result& b) { a.Swap(&b); }
  inline void Swap(ListDepFiles_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListDepFiles_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListDepFiles_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListDepFiles_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListDepFiles_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListDepFiles_Result& from) { ListDepFiles_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListDepFiles_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ListDepFiles_Result"; }

 protected:
  explicit ListDepFiles_Result(::google::protobuf::Arena* arena);
  ListDepFiles_Result(::google::protobuf::Arena* arena, const ListDepFiles_Result& from);
  ListDepFiles_Result(::google::protobuf::Arena* arena, ListDepFiles_Result&& from) noexcept
      : ListDepFiles_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilesFieldNumber = 3,
    kPkgrootFieldNumber = 1,
    kPkgpathFieldNumber = 2,
  };
  // repeated string files = 3;
  int files_size() const;
  private:
  int _internal_files_size() const;

  public:
  void clear_files() ;
  const std::string& files(int index) const;
  std::string* mutable_files(int index);
  void set_files(int index, const std::string& value);
  void set_files(int index, std::string&& value);
  void set_files(int index, const char* value);
  void set_files(int index, const char* value, std::size_t size);
  void set_files(int index, absl::string_view value);
  std::string* add_files();
  void add_files(const std::string& value);
  void add_files(std::string&& value);
  void add_files(const char* value);
  void add_files(const char* value, std::size_t size);
  void add_files(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_files();

  public:
  // string pkgroot = 1;
  void clear_pkgroot() ;
  const std::string& pkgroot() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pkgroot(Arg_&& arg, Args_... args);
  std::string* mutable_pkgroot();
  PROTOBUF_NODISCARD std::string* release_pkgroot();
  void set_allocated_pkgroot(std::string* value);

  private:
  const std::string& _internal_pkgroot() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pkgroot(
      const std::string& value);
  std::string* _internal_mutable_pkgroot();

  public:
  // string pkgpath = 2;
  void clear_pkgpath() ;
  const std::string& pkgpath() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pkgpath(Arg_&& arg, Args_... args);
  std::string* mutable_pkgpath();
  PROTOBUF_NODISCARD std::string* release_pkgpath();
  void set_allocated_pkgpath(std::string* value);

  private:
  const std::string& _internal_pkgpath() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pkgpath(
      const std::string& value);
  std::string* _internal_mutable_pkgpath();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ListDepFiles_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      59, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListDepFiles_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListDepFiles_Result& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> files_;
    ::google::protobuf::internal::ArenaStringPtr pkgroot_;
    ::google::protobuf::internal::ArenaStringPtr pkgpath_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ListDepFiles_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ListDepFiles_Args) */ {
 public:
  inline ListDepFiles_Args() : ListDepFiles_Args(nullptr) {}
  ~ListDepFiles_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListDepFiles_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListDepFiles_Args(const ListDepFiles_Args& from) : ListDepFiles_Args(nullptr, from) {}
  inline ListDepFiles_Args(ListDepFiles_Args&& from) noexcept
      : ListDepFiles_Args(nullptr, std::move(from)) {}
  inline ListDepFiles_Args& operator=(const ListDepFiles_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDepFiles_Args& operator=(ListDepFiles_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListDepFiles_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListDepFiles_Args* internal_default_instance() {
    return reinterpret_cast<const ListDepFiles_Args*>(
        &_ListDepFiles_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 56;
  friend void swap(ListDepFiles_Args& a, ListDepFiles_Args& b) { a.Swap(&b); }
  inline void Swap(ListDepFiles_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListDepFiles_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListDepFiles_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListDepFiles_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListDepFiles_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListDepFiles_Args& from) { ListDepFiles_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListDepFiles_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ListDepFiles_Args"; }

 protected:
  explicit ListDepFiles_Args(::google::protobuf::Arena* arena);
  ListDepFiles_Args(::google::protobuf::Arena* arena, const ListDepFiles_Args& from);
  ListDepFiles_Args(::google::protobuf::Arena* arena, ListDepFiles_Args&& from) noexcept
      : ListDepFiles_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWorkDirFieldNumber = 1,
    kUseAbsPathFieldNumber = 2,
    kIncludeAllFieldNumber = 3,
    kUseFastParserFieldNumber = 4,
  };
  // string work_dir = 1;
  void clear_work_dir() ;
  const std::string& work_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_work_dir(Arg_&& arg, Args_... args);
  std::string* mutable_work_dir();
  PROTOBUF_NODISCARD std::string* release_work_dir();
  void set_allocated_work_dir(std::string* value);

  private:
  const std::string& _internal_work_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_work_dir(
      const std::string& value);
  std::string* _internal_mutable_work_dir();

  public:
  // bool use_abs_path = 2;
  void clear_use_abs_path() ;
  bool use_abs_path() const;
  void set_use_abs_path(bool value);

  private:
  bool _internal_use_abs_path() const;
  void _internal_set_use_abs_path(bool value);

  public:
  // bool include_all = 3;
  void clear_include_all() ;
  bool include_all() const;
  void set_include_all(bool value);

  private:
  bool _internal_include_all() const;
  void _internal_set_include_all(bool value);

  public:
  // bool use_fast_parser = 4;
  void clear_use_fast_parser() ;
  bool use_fast_parser() const;
  void set_use_fast_parser(bool value);

  private:
  bool _internal_use_fast_parser() const;
  void _internal_set_use_fast_parser(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ListDepFiles_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      46, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListDepFiles_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListDepFiles_Args& from_msg);
    ::google::protobuf::internal::ArenaStringPtr work_dir_;
    bool use_abs_path_;
    bool include_all_;
    bool use_fast_parser_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LintPath_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.LintPath_Result) */ {
 public:
  inline LintPath_Result() : LintPath_Result(nullptr) {}
  ~LintPath_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LintPath_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline LintPath_Result(const LintPath_Result& from) : LintPath_Result(nullptr, from) {}
  inline LintPath_Result(LintPath_Result&& from) noexcept
      : LintPath_Result(nullptr, std::move(from)) {}
  inline LintPath_Result& operator=(const LintPath_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline LintPath_Result& operator=(LintPath_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LintPath_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const LintPath_Result* internal_default_instance() {
    return reinterpret_cast<const LintPath_Result*>(
        &_LintPath_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 40;
  friend void swap(LintPath_Result& a, LintPath_Result& b) { a.Swap(&b); }
  inline void Swap(LintPath_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LintPath_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LintPath_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LintPath_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LintPath_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LintPath_Result& from) { LintPath_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LintPath_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.LintPath_Result"; }

 protected:
  explicit LintPath_Result(::google::protobuf::Arena* arena);
  LintPath_Result(::google::protobuf::Arena* arena, const LintPath_Result& from);
  LintPath_Result(::google::protobuf::Arena* arena, LintPath_Result&& from) noexcept
      : LintPath_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kResultsFieldNumber = 1,
  };
  // repeated string results = 1;
  int results_size() const;
  private:
  int _internal_results_size() const;

  public:
  void clear_results() ;
  const std::string& results(int index) const;
  std::string* mutable_results(int index);
  void set_results(int index, const std::string& value);
  void set_results(int index, std::string&& value);
  void set_results(int index, const char* value);
  void set_results(int index, const char* value, std::size_t size);
  void set_results(int index, absl::string_view value);
  std::string* add_results();
  void add_results(const std::string& value);
  void add_results(std::string&& value);
  void add_results(const char* value);
  void add_results(const char* value, std::size_t size);
  void add_results(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& results() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_results();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_results() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_results();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.LintPath_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      43, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LintPath_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LintPath_Result& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> results_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LintPath_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.LintPath_Args) */ {
 public:
  inline LintPath_Args() : LintPath_Args(nullptr) {}
  ~LintPath_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LintPath_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline LintPath_Args(const LintPath_Args& from) : LintPath_Args(nullptr, from) {}
  inline LintPath_Args(LintPath_Args&& from) noexcept
      : LintPath_Args(nullptr, std::move(from)) {}
  inline LintPath_Args& operator=(const LintPath_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline LintPath_Args& operator=(LintPath_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LintPath_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const LintPath_Args* internal_default_instance() {
    return reinterpret_cast<const LintPath_Args*>(
        &_LintPath_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 39;
  friend void swap(LintPath_Args& a, LintPath_Args& b) { a.Swap(&b); }
  inline void Swap(LintPath_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LintPath_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LintPath_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LintPath_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LintPath_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LintPath_Args& from) { LintPath_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LintPath_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.LintPath_Args"; }

 protected:
  explicit LintPath_Args(::google::protobuf::Arena* arena);
  LintPath_Args(::google::protobuf::Arena* arena, const LintPath_Args& from);
  LintPath_Args(::google::protobuf::Arena* arena, LintPath_Args&& from) noexcept
      : LintPath_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathsFieldNumber = 1,
  };
  // repeated string paths = 1;
  int paths_size() const;
  private:
  int _internal_paths_size() const;

  public:
  void clear_paths() ;
  const std::string& paths(int index) const;
  std::string* mutable_paths(int index);
  void set_paths(int index, const std::string& value);
  void set_paths(int index, std::string&& value);
  void set_paths(int index, const char* value);
  void set_paths(int index, const char* value, std::size_t size);
  void set_paths(int index, absl::string_view value);
  std::string* add_paths();
  void add_paths(const std::string& value);
  void add_paths(std::string&& value);
  void add_paths(const char* value);
  void add_paths(const char* value, std::size_t size);
  void add_paths(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_paths();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.LintPath_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      39, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LintPath_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LintPath_Args& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> paths_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class KeyValuePair final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.KeyValuePair) */ {
 public:
  inline KeyValuePair() : KeyValuePair(nullptr) {}
  ~KeyValuePair() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KeyValuePair(
      ::google::protobuf::internal::ConstantInitialized);

  inline KeyValuePair(const KeyValuePair& from) : KeyValuePair(nullptr, from) {}
  inline KeyValuePair(KeyValuePair&& from) noexcept
      : KeyValuePair(nullptr, std::move(from)) {}
  inline KeyValuePair& operator=(const KeyValuePair& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValuePair& operator=(KeyValuePair&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KeyValuePair& default_instance() {
    return *internal_default_instance();
  }
  static inline const KeyValuePair* internal_default_instance() {
    return reinterpret_cast<const KeyValuePair*>(
        &_KeyValuePair_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 61;
  friend void swap(KeyValuePair& a, KeyValuePair& b) { a.Swap(&b); }
  inline void Swap(KeyValuePair* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KeyValuePair* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KeyValuePair* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<KeyValuePair>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KeyValuePair& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KeyValuePair& from) { KeyValuePair::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KeyValuePair* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.KeyValuePair"; }

 protected:
  explicit KeyValuePair(::google::protobuf::Arena* arena);
  KeyValuePair(::google::protobuf::Arena* arena, const KeyValuePair& from);
  KeyValuePair(::google::protobuf::Arena* arena, KeyValuePair&& from) noexcept
      : KeyValuePair(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKeyFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string key = 1;
  void clear_key() ;
  const std::string& key() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_key(Arg_&& arg, Args_... args);
  std::string* mutable_key();
  PROTOBUF_NODISCARD std::string* release_key();
  void set_allocated_key(std::string* value);

  private:
  const std::string& _internal_key() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_key(
      const std::string& value);
  std::string* _internal_mutable_key();

  public:
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.KeyValuePair)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_KeyValuePair_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KeyValuePair& from_msg);
    ::google::protobuf::internal::ArenaStringPtr key_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class GetVersion_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.GetVersion_Result) */ {
 public:
  inline GetVersion_Result() : GetVersion_Result(nullptr) {}
  ~GetVersion_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVersion_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVersion_Result(const GetVersion_Result& from) : GetVersion_Result(nullptr, from) {}
  inline GetVersion_Result(GetVersion_Result&& from) noexcept
      : GetVersion_Result(nullptr, std::move(from)) {}
  inline GetVersion_Result& operator=(const GetVersion_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVersion_Result& operator=(GetVersion_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVersion_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVersion_Result* internal_default_instance() {
    return reinterpret_cast<const GetVersion_Result*>(
        &_GetVersion_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(GetVersion_Result& a, GetVersion_Result& b) { a.Swap(&b); }
  inline void Swap(GetVersion_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVersion_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVersion_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetVersion_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetVersion_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetVersion_Result& from) { GetVersion_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetVersion_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.GetVersion_Result"; }

 protected:
  explicit GetVersion_Result(::google::protobuf::Arena* arena);
  GetVersion_Result(::google::protobuf::Arena* arena, const GetVersion_Result& from);
  GetVersion_Result(::google::protobuf::Arena* arena, GetVersion_Result&& from) noexcept
      : GetVersion_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVersionFieldNumber = 1,
    kChecksumFieldNumber = 2,
    kGitShaFieldNumber = 3,
    kVersionInfoFieldNumber = 4,
  };
  // string version = 1;
  void clear_version() ;
  const std::string& version() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version(Arg_&& arg, Args_... args);
  std::string* mutable_version();
  PROTOBUF_NODISCARD std::string* release_version();
  void set_allocated_version(std::string* value);

  private:
  const std::string& _internal_version() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version(
      const std::string& value);
  std::string* _internal_mutable_version();

  public:
  // string checksum = 2;
  void clear_checksum() ;
  const std::string& checksum() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_checksum(Arg_&& arg, Args_... args);
  std::string* mutable_checksum();
  PROTOBUF_NODISCARD std::string* release_checksum();
  void set_allocated_checksum(std::string* value);

  private:
  const std::string& _internal_checksum() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_checksum(
      const std::string& value);
  std::string* _internal_mutable_checksum();

  public:
  // string git_sha = 3;
  void clear_git_sha() ;
  const std::string& git_sha() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_git_sha(Arg_&& arg, Args_... args);
  std::string* mutable_git_sha();
  PROTOBUF_NODISCARD std::string* release_git_sha();
  void set_allocated_git_sha(std::string* value);

  private:
  const std::string& _internal_git_sha() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_git_sha(
      const std::string& value);
  std::string* _internal_mutable_git_sha();

  public:
  // string version_info = 4;
  void clear_version_info() ;
  const std::string& version_info() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_version_info(Arg_&& arg, Args_... args);
  std::string* mutable_version_info();
  PROTOBUF_NODISCARD std::string* release_version_info();
  void set_allocated_version_info(std::string* value);

  private:
  const std::string& _internal_version_info() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_version_info(
      const std::string& value);
  std::string* _internal_mutable_version_info();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.GetVersion_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetVersion_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVersion_Result& from_msg);
    ::google::protobuf::internal::ArenaStringPtr version_;
    ::google::protobuf::internal::ArenaStringPtr checksum_;
    ::google::protobuf::internal::ArenaStringPtr git_sha_;
    ::google::protobuf::internal::ArenaStringPtr version_info_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class GetVersion_Args final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:com.kcl.api.GetVersion_Args) */ {
 public:
  inline GetVersion_Args() : GetVersion_Args(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetVersion_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetVersion_Args(const GetVersion_Args& from) : GetVersion_Args(nullptr, from) {}
  inline GetVersion_Args(GetVersion_Args&& from) noexcept
      : GetVersion_Args(nullptr, std::move(from)) {}
  inline GetVersion_Args& operator=(const GetVersion_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetVersion_Args& operator=(GetVersion_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetVersion_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetVersion_Args* internal_default_instance() {
    return reinterpret_cast<const GetVersion_Args*>(
        &_GetVersion_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(GetVersion_Args& a, GetVersion_Args& b) { a.Swap(&b); }
  inline void Swap(GetVersion_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetVersion_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetVersion_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetVersion_Args>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetVersion_Args& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetVersion_Args& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.GetVersion_Args"; }

 protected:
  explicit GetVersion_Args(::google::protobuf::Arena* arena);
  GetVersion_Args(::google::protobuf::Arena* arena, const GetVersion_Args& from);
  GetVersion_Args(::google::protobuf::Arena* arena, GetVersion_Args&& from) noexcept
      : GetVersion_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:com.kcl.api.GetVersion_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetVersion_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetVersion_Args& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class FormatPath_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.FormatPath_Result) */ {
 public:
  inline FormatPath_Result() : FormatPath_Result(nullptr) {}
  ~FormatPath_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FormatPath_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline FormatPath_Result(const FormatPath_Result& from) : FormatPath_Result(nullptr, from) {}
  inline FormatPath_Result(FormatPath_Result&& from) noexcept
      : FormatPath_Result(nullptr, std::move(from)) {}
  inline FormatPath_Result& operator=(const FormatPath_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline FormatPath_Result& operator=(FormatPath_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FormatPath_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const FormatPath_Result* internal_default_instance() {
    return reinterpret_cast<const FormatPath_Result*>(
        &_FormatPath_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 38;
  friend void swap(FormatPath_Result& a, FormatPath_Result& b) { a.Swap(&b); }
  inline void Swap(FormatPath_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FormatPath_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FormatPath_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<FormatPath_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FormatPath_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FormatPath_Result& from) { FormatPath_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FormatPath_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.FormatPath_Result"; }

 protected:
  explicit FormatPath_Result(::google::protobuf::Arena* arena);
  FormatPath_Result(::google::protobuf::Arena* arena, const FormatPath_Result& from);
  FormatPath_Result(::google::protobuf::Arena* arena, FormatPath_Result&& from) noexcept
      : FormatPath_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChangedPathsFieldNumber = 1,
  };
  // repeated string changed_paths = 1;
  int changed_paths_size() const;
  private:
  int _internal_changed_paths_size() const;

  public:
  void clear_changed_paths() ;
  const std::string& changed_paths(int index) const;
  std::string* mutable_changed_paths(int index);
  void set_changed_paths(int index, const std::string& value);
  void set_changed_paths(int index, std::string&& value);
  void set_changed_paths(int index, const char* value);
  void set_changed_paths(int index, const char* value, std::size_t size);
  void set_changed_paths(int index, absl::string_view value);
  std::string* add_changed_paths();
  void add_changed_paths(const std::string& value);
  void add_changed_paths(std::string&& value);
  void add_changed_paths(const char* value);
  void add_changed_paths(const char* value, std::size_t size);
  void add_changed_paths(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& changed_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_changed_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_changed_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_changed_paths();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.FormatPath_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FormatPath_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FormatPath_Result& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> changed_paths_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class FormatPath_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.FormatPath_Args) */ {
 public:
  inline FormatPath_Args() : FormatPath_Args(nullptr) {}
  ~FormatPath_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FormatPath_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline FormatPath_Args(const FormatPath_Args& from) : FormatPath_Args(nullptr, from) {}
  inline FormatPath_Args(FormatPath_Args&& from) noexcept
      : FormatPath_Args(nullptr, std::move(from)) {}
  inline FormatPath_Args& operator=(const FormatPath_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline FormatPath_Args& operator=(FormatPath_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FormatPath_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const FormatPath_Args* internal_default_instance() {
    return reinterpret_cast<const FormatPath_Args*>(
        &_FormatPath_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 37;
  friend void swap(FormatPath_Args& a, FormatPath_Args& b) { a.Swap(&b); }
  inline void Swap(FormatPath_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FormatPath_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FormatPath_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<FormatPath_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FormatPath_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FormatPath_Args& from) { FormatPath_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FormatPath_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.FormatPath_Args"; }

 protected:
  explicit FormatPath_Args(::google::protobuf::Arena* arena);
  FormatPath_Args(::google::protobuf::Arena* arena, const FormatPath_Args& from);
  FormatPath_Args(::google::protobuf::Arena* arena, FormatPath_Args&& from) noexcept
      : FormatPath_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 1,
  };
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.FormatPath_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      40, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FormatPath_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FormatPath_Args& from_msg);
    ::google::protobuf::internal::ArenaStringPtr path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class FormatCode_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.FormatCode_Result) */ {
 public:
  inline FormatCode_Result() : FormatCode_Result(nullptr) {}
  ~FormatCode_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FormatCode_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline FormatCode_Result(const FormatCode_Result& from) : FormatCode_Result(nullptr, from) {}
  inline FormatCode_Result(FormatCode_Result&& from) noexcept
      : FormatCode_Result(nullptr, std::move(from)) {}
  inline FormatCode_Result& operator=(const FormatCode_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline FormatCode_Result& operator=(FormatCode_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FormatCode_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const FormatCode_Result* internal_default_instance() {
    return reinterpret_cast<const FormatCode_Result*>(
        &_FormatCode_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 36;
  friend void swap(FormatCode_Result& a, FormatCode_Result& b) { a.Swap(&b); }
  inline void Swap(FormatCode_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FormatCode_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FormatCode_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<FormatCode_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FormatCode_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FormatCode_Result& from) { FormatCode_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FormatCode_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.FormatCode_Result"; }

 protected:
  explicit FormatCode_Result(::google::protobuf::Arena* arena);
  FormatCode_Result(::google::protobuf::Arena* arena, const FormatCode_Result& from);
  FormatCode_Result(::google::protobuf::Arena* arena, FormatCode_Result&& from) noexcept
      : FormatCode_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFormattedFieldNumber = 1,
  };
  // bytes formatted = 1;
  void clear_formatted() ;
  const std::string& formatted() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_formatted(Arg_&& arg, Args_... args);
  std::string* mutable_formatted();
  PROTOBUF_NODISCARD std::string* release_formatted();
  void set_allocated_formatted(std::string* value);

  private:
  const std::string& _internal_formatted() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_formatted(
      const std::string& value);
  std::string* _internal_mutable_formatted();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.FormatCode_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FormatCode_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FormatCode_Result& from_msg);
    ::google::protobuf::internal::ArenaStringPtr formatted_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class FormatCode_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.FormatCode_Args) */ {
 public:
  inline FormatCode_Args() : FormatCode_Args(nullptr) {}
  ~FormatCode_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FormatCode_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline FormatCode_Args(const FormatCode_Args& from) : FormatCode_Args(nullptr, from) {}
  inline FormatCode_Args(FormatCode_Args&& from) noexcept
      : FormatCode_Args(nullptr, std::move(from)) {}
  inline FormatCode_Args& operator=(const FormatCode_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline FormatCode_Args& operator=(FormatCode_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FormatCode_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const FormatCode_Args* internal_default_instance() {
    return reinterpret_cast<const FormatCode_Args*>(
        &_FormatCode_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 35;
  friend void swap(FormatCode_Args& a, FormatCode_Args& b) { a.Swap(&b); }
  inline void Swap(FormatCode_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FormatCode_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FormatCode_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<FormatCode_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FormatCode_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FormatCode_Args& from) { FormatCode_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(FormatCode_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.FormatCode_Args"; }

 protected:
  explicit FormatCode_Args(::google::protobuf::Arena* arena);
  FormatCode_Args(::google::protobuf::Arena* arena, const FormatCode_Args& from);
  FormatCode_Args(::google::protobuf::Arena* arena, FormatCode_Args&& from) noexcept
      : FormatCode_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceFieldNumber = 1,
  };
  // string source = 1;
  void clear_source() ;
  const std::string& source() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  std::string* mutable_source();
  PROTOBUF_NODISCARD std::string* release_source();
  void set_allocated_source(std::string* value);

  private:
  const std::string& _internal_source() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source(
      const std::string& value);
  std::string* _internal_mutable_source();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.FormatCode_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_FormatCode_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const FormatCode_Args& from_msg);
    ::google::protobuf::internal::ArenaStringPtr source_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ExternalPkg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ExternalPkg) */ {
 public:
  inline ExternalPkg() : ExternalPkg(nullptr) {}
  ~ExternalPkg() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExternalPkg(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExternalPkg(const ExternalPkg& from) : ExternalPkg(nullptr, from) {}
  inline ExternalPkg(ExternalPkg&& from) noexcept
      : ExternalPkg(nullptr, std::move(from)) {}
  inline ExternalPkg& operator=(const ExternalPkg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExternalPkg& operator=(ExternalPkg&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExternalPkg& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExternalPkg* internal_default_instance() {
    return reinterpret_cast<const ExternalPkg*>(
        &_ExternalPkg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ExternalPkg& a, ExternalPkg& b) { a.Swap(&b); }
  inline void Swap(ExternalPkg* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExternalPkg* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExternalPkg* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExternalPkg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExternalPkg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExternalPkg& from) { ExternalPkg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExternalPkg* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ExternalPkg"; }

 protected:
  explicit ExternalPkg(::google::protobuf::Arena* arena);
  ExternalPkg(::google::protobuf::Arena* arena, const ExternalPkg& from);
  ExternalPkg(::google::protobuf::Arena* arena, ExternalPkg&& from) noexcept
      : ExternalPkg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPkgNameFieldNumber = 1,
    kPkgPathFieldNumber = 2,
  };
  // string pkg_name = 1;
  void clear_pkg_name() ;
  const std::string& pkg_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pkg_name(Arg_&& arg, Args_... args);
  std::string* mutable_pkg_name();
  PROTOBUF_NODISCARD std::string* release_pkg_name();
  void set_allocated_pkg_name(std::string* value);

  private:
  const std::string& _internal_pkg_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pkg_name(
      const std::string& value);
  std::string* _internal_mutable_pkg_name();

  public:
  // string pkg_path = 2;
  void clear_pkg_path() ;
  const std::string& pkg_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pkg_path(Arg_&& arg, Args_... args);
  std::string* mutable_pkg_path();
  PROTOBUF_NODISCARD std::string* release_pkg_path();
  void set_allocated_pkg_path(std::string* value);

  private:
  const std::string& _internal_pkg_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pkg_path(
      const std::string& value);
  std::string* _internal_mutable_pkg_path();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ExternalPkg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ExternalPkg_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExternalPkg& from_msg);
    ::google::protobuf::internal::ArenaStringPtr pkg_name_;
    ::google::protobuf::internal::ArenaStringPtr pkg_path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ExecProgram_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ExecProgram_Result) */ {
 public:
  inline ExecProgram_Result() : ExecProgram_Result(nullptr) {}
  ~ExecProgram_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExecProgram_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExecProgram_Result(const ExecProgram_Result& from) : ExecProgram_Result(nullptr, from) {}
  inline ExecProgram_Result(ExecProgram_Result&& from) noexcept
      : ExecProgram_Result(nullptr, std::move(from)) {}
  inline ExecProgram_Result& operator=(const ExecProgram_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecProgram_Result& operator=(ExecProgram_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecProgram_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecProgram_Result* internal_default_instance() {
    return reinterpret_cast<const ExecProgram_Result*>(
        &_ExecProgram_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 29;
  friend void swap(ExecProgram_Result& a, ExecProgram_Result& b) { a.Swap(&b); }
  inline void Swap(ExecProgram_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecProgram_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecProgram_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExecProgram_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExecProgram_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExecProgram_Result& from) { ExecProgram_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExecProgram_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ExecProgram_Result"; }

 protected:
  explicit ExecProgram_Result(::google::protobuf::Arena* arena);
  ExecProgram_Result(::google::protobuf::Arena* arena, const ExecProgram_Result& from);
  ExecProgram_Result(::google::protobuf::Arena* arena, ExecProgram_Result&& from) noexcept
      : ExecProgram_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kJsonResultFieldNumber = 1,
    kYamlResultFieldNumber = 2,
    kLogMessageFieldNumber = 3,
    kErrMessageFieldNumber = 4,
  };
  // string json_result = 1;
  void clear_json_result() ;
  const std::string& json_result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_json_result(Arg_&& arg, Args_... args);
  std::string* mutable_json_result();
  PROTOBUF_NODISCARD std::string* release_json_result();
  void set_allocated_json_result(std::string* value);

  private:
  const std::string& _internal_json_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_json_result(
      const std::string& value);
  std::string* _internal_mutable_json_result();

  public:
  // string yaml_result = 2;
  void clear_yaml_result() ;
  const std::string& yaml_result() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_yaml_result(Arg_&& arg, Args_... args);
  std::string* mutable_yaml_result();
  PROTOBUF_NODISCARD std::string* release_yaml_result();
  void set_allocated_yaml_result(std::string* value);

  private:
  const std::string& _internal_yaml_result() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_yaml_result(
      const std::string& value);
  std::string* _internal_mutable_yaml_result();

  public:
  // string log_message = 3;
  void clear_log_message() ;
  const std::string& log_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_log_message(Arg_&& arg, Args_... args);
  std::string* mutable_log_message();
  PROTOBUF_NODISCARD std::string* release_log_message();
  void set_allocated_log_message(std::string* value);

  private:
  const std::string& _internal_log_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_log_message(
      const std::string& value);
  std::string* _internal_mutable_log_message();

  public:
  // string err_message = 4;
  void clear_err_message() ;
  const std::string& err_message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_err_message(Arg_&& arg, Args_... args);
  std::string* mutable_err_message();
  PROTOBUF_NODISCARD std::string* release_err_message();
  void set_allocated_err_message(std::string* value);

  private:
  const std::string& _internal_err_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_err_message(
      const std::string& value);
  std::string* _internal_mutable_err_message();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ExecProgram_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      83, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ExecProgram_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExecProgram_Result& from_msg);
    ::google::protobuf::internal::ArenaStringPtr json_result_;
    ::google::protobuf::internal::ArenaStringPtr yaml_result_;
    ::google::protobuf::internal::ArenaStringPtr log_message_;
    ::google::protobuf::internal::ArenaStringPtr err_message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Example final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Example) */ {
 public:
  inline Example() : Example(nullptr) {}
  ~Example() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Example(
      ::google::protobuf::internal::ConstantInitialized);

  inline Example(const Example& from) : Example(nullptr, from) {}
  inline Example(Example&& from) noexcept
      : Example(nullptr, std::move(from)) {}
  inline Example& operator=(const Example& from) {
    CopyFrom(from);
    return *this;
  }
  inline Example& operator=(Example&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Example& default_instance() {
    return *internal_default_instance();
  }
  static inline const Example* internal_default_instance() {
    return reinterpret_cast<const Example*>(
        &_Example_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 78;
  friend void swap(Example& a, Example& b) { a.Swap(&b); }
  inline void Swap(Example* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Example* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Example* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Example>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Example& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Example& from) { Example::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Example* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Example"; }

 protected:
  explicit Example(::google::protobuf::Arena* arena);
  Example(::google::protobuf::Arena* arena, const Example& from);
  Example(::google::protobuf::Arena* arena, Example&& from) noexcept
      : Example(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSummaryFieldNumber = 1,
    kDescriptionFieldNumber = 2,
    kValueFieldNumber = 3,
  };
  // string summary = 1;
  void clear_summary() ;
  const std::string& summary() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_summary(Arg_&& arg, Args_... args);
  std::string* mutable_summary();
  PROTOBUF_NODISCARD std::string* release_summary();
  void set_allocated_summary(std::string* value);

  private:
  const std::string& _internal_summary() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_summary(
      const std::string& value);
  std::string* _internal_mutable_summary();

  public:
  // string description = 2;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // string value = 3;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Example)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Example_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Example& from_msg);
    ::google::protobuf::internal::ArenaStringPtr summary_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Decorator_KeywordsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          Decorator_KeywordsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      Decorator_KeywordsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  Decorator_KeywordsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Decorator_KeywordsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit Decorator_KeywordsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const Decorator_KeywordsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const Decorator_KeywordsEntry_DoNotUse*>(
        &_Decorator_KeywordsEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class CliConfig final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.CliConfig) */ {
 public:
  inline CliConfig() : CliConfig(nullptr) {}
  ~CliConfig() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR CliConfig(
      ::google::protobuf::internal::ConstantInitialized);

  inline CliConfig(const CliConfig& from) : CliConfig(nullptr, from) {}
  inline CliConfig(CliConfig&& from) noexcept
      : CliConfig(nullptr, std::move(from)) {}
  inline CliConfig& operator=(const CliConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline CliConfig& operator=(CliConfig&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const CliConfig& default_instance() {
    return *internal_default_instance();
  }
  static inline const CliConfig* internal_default_instance() {
    return reinterpret_cast<const CliConfig*>(
        &_CliConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 60;
  friend void swap(CliConfig& a, CliConfig& b) { a.Swap(&b); }
  inline void Swap(CliConfig* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(CliConfig* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  CliConfig* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<CliConfig>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const CliConfig& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const CliConfig& from) { CliConfig::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(CliConfig* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.CliConfig"; }

 protected:
  explicit CliConfig(::google::protobuf::Arena* arena);
  CliConfig(::google::protobuf::Arena* arena, const CliConfig& from);
  CliConfig(::google::protobuf::Arena* arena, CliConfig&& from) noexcept
      : CliConfig(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilesFieldNumber = 1,
    kOverridesFieldNumber = 3,
    kPathSelectorFieldNumber = 4,
    kOutputFieldNumber = 2,
    kVerboseFieldNumber = 7,
    kStrictRangeCheckFieldNumber = 5,
    kDisableNoneFieldNumber = 6,
    kDebugFieldNumber = 8,
    kSortKeysFieldNumber = 9,
    kShowHiddenFieldNumber = 10,
    kIncludeSchemaTypePathFieldNumber = 11,
    kFastEvalFieldNumber = 12,
  };
  // repeated string files = 1;
  int files_size() const;
  private:
  int _internal_files_size() const;

  public:
  void clear_files() ;
  const std::string& files(int index) const;
  std::string* mutable_files(int index);
  void set_files(int index, const std::string& value);
  void set_files(int index, std::string&& value);
  void set_files(int index, const char* value);
  void set_files(int index, const char* value, std::size_t size);
  void set_files(int index, absl::string_view value);
  std::string* add_files();
  void add_files(const std::string& value);
  void add_files(std::string&& value);
  void add_files(const char* value);
  void add_files(const char* value, std::size_t size);
  void add_files(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_files();

  public:
  // repeated string overrides = 3;
  int overrides_size() const;
  private:
  int _internal_overrides_size() const;

  public:
  void clear_overrides() ;
  const std::string& overrides(int index) const;
  std::string* mutable_overrides(int index);
  void set_overrides(int index, const std::string& value);
  void set_overrides(int index, std::string&& value);
  void set_overrides(int index, const char* value);
  void set_overrides(int index, const char* value, std::size_t size);
  void set_overrides(int index, absl::string_view value);
  std::string* add_overrides();
  void add_overrides(const std::string& value);
  void add_overrides(std::string&& value);
  void add_overrides(const char* value);
  void add_overrides(const char* value, std::size_t size);
  void add_overrides(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& overrides() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_overrides();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_overrides() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_overrides();

  public:
  // repeated string path_selector = 4;
  int path_selector_size() const;
  private:
  int _internal_path_selector_size() const;

  public:
  void clear_path_selector() ;
  const std::string& path_selector(int index) const;
  std::string* mutable_path_selector(int index);
  void set_path_selector(int index, const std::string& value);
  void set_path_selector(int index, std::string&& value);
  void set_path_selector(int index, const char* value);
  void set_path_selector(int index, const char* value, std::size_t size);
  void set_path_selector(int index, absl::string_view value);
  std::string* add_path_selector();
  void add_path_selector(const std::string& value);
  void add_path_selector(std::string&& value);
  void add_path_selector(const char* value);
  void add_path_selector(const char* value, std::size_t size);
  void add_path_selector(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& path_selector() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_path_selector();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_path_selector() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_path_selector();

  public:
  // string output = 2;
  void clear_output() ;
  const std::string& output() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_output(Arg_&& arg, Args_... args);
  std::string* mutable_output();
  PROTOBUF_NODISCARD std::string* release_output();
  void set_allocated_output(std::string* value);

  private:
  const std::string& _internal_output() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_output(
      const std::string& value);
  std::string* _internal_mutable_output();

  public:
  // int64 verbose = 7;
  void clear_verbose() ;
  ::int64_t verbose() const;
  void set_verbose(::int64_t value);

  private:
  ::int64_t _internal_verbose() const;
  void _internal_set_verbose(::int64_t value);

  public:
  // bool strict_range_check = 5;
  void clear_strict_range_check() ;
  bool strict_range_check() const;
  void set_strict_range_check(bool value);

  private:
  bool _internal_strict_range_check() const;
  void _internal_set_strict_range_check(bool value);

  public:
  // bool disable_none = 6;
  void clear_disable_none() ;
  bool disable_none() const;
  void set_disable_none(bool value);

  private:
  bool _internal_disable_none() const;
  void _internal_set_disable_none(bool value);

  public:
  // bool debug = 8;
  void clear_debug() ;
  bool debug() const;
  void set_debug(bool value);

  private:
  bool _internal_debug() const;
  void _internal_set_debug(bool value);

  public:
  // bool sort_keys = 9;
  void clear_sort_keys() ;
  bool sort_keys() const;
  void set_sort_keys(bool value);

  private:
  bool _internal_sort_keys() const;
  void _internal_set_sort_keys(bool value);

  public:
  // bool show_hidden = 10;
  void clear_show_hidden() ;
  bool show_hidden() const;
  void set_show_hidden(bool value);

  private:
  bool _internal_show_hidden() const;
  void _internal_set_show_hidden(bool value);

  public:
  // bool include_schema_type_path = 11;
  void clear_include_schema_type_path() ;
  bool include_schema_type_path() const;
  void set_include_schema_type_path(bool value);

  private:
  bool _internal_include_schema_type_path() const;
  void _internal_set_include_schema_type_path(bool value);

  public:
  // bool fast_eval = 12;
  void clear_fast_eval() ;
  bool fast_eval() const;
  void set_fast_eval(bool value);

  private:
  bool _internal_fast_eval() const;
  void _internal_set_fast_eval(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.CliConfig)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 12, 0,
      71, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_CliConfig_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const CliConfig& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> files_;
    ::google::protobuf::RepeatedPtrField<std::string> overrides_;
    ::google::protobuf::RepeatedPtrField<std::string> path_selector_;
    ::google::protobuf::internal::ArenaStringPtr output_;
    ::int64_t verbose_;
    bool strict_range_check_;
    bool disable_none_;
    bool debug_;
    bool sort_keys_;
    bool show_hidden_;
    bool include_schema_type_path_;
    bool fast_eval_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class BuildProgram_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.BuildProgram_Result) */ {
 public:
  inline BuildProgram_Result() : BuildProgram_Result(nullptr) {}
  ~BuildProgram_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuildProgram_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline BuildProgram_Result(const BuildProgram_Result& from) : BuildProgram_Result(nullptr, from) {}
  inline BuildProgram_Result(BuildProgram_Result&& from) noexcept
      : BuildProgram_Result(nullptr, std::move(from)) {}
  inline BuildProgram_Result& operator=(const BuildProgram_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuildProgram_Result& operator=(BuildProgram_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuildProgram_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuildProgram_Result* internal_default_instance() {
    return reinterpret_cast<const BuildProgram_Result*>(
        &_BuildProgram_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 31;
  friend void swap(BuildProgram_Result& a, BuildProgram_Result& b) { a.Swap(&b); }
  inline void Swap(BuildProgram_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuildProgram_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuildProgram_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BuildProgram_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BuildProgram_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BuildProgram_Result& from) { BuildProgram_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BuildProgram_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.BuildProgram_Result"; }

 protected:
  explicit BuildProgram_Result(::google::protobuf::Arena* arena);
  BuildProgram_Result(::google::protobuf::Arena* arena, const BuildProgram_Result& from);
  BuildProgram_Result(::google::protobuf::Arena* arena, BuildProgram_Result&& from) noexcept
      : BuildProgram_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 1,
  };
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.BuildProgram_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BuildProgram_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BuildProgram_Result& from_msg);
    ::google::protobuf::internal::ArenaStringPtr path_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Argument final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Argument) */ {
 public:
  inline Argument() : Argument(nullptr) {}
  ~Argument() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Argument(
      ::google::protobuf::internal::ConstantInitialized);

  inline Argument(const Argument& from) : Argument(nullptr, from) {}
  inline Argument(Argument&& from) noexcept
      : Argument(nullptr, std::move(from)) {}
  inline Argument& operator=(const Argument& from) {
    CopyFrom(from);
    return *this;
  }
  inline Argument& operator=(Argument&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Argument& default_instance() {
    return *internal_default_instance();
  }
  static inline const Argument* internal_default_instance() {
    return reinterpret_cast<const Argument*>(
        &_Argument_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(Argument& a, Argument& b) { a.Swap(&b); }
  inline void Swap(Argument* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Argument* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Argument* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Argument>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Argument& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Argument& from) { Argument::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Argument* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Argument"; }

 protected:
  explicit Argument(::google::protobuf::Arena* arena);
  Argument(::google::protobuf::Arena* arena, const Argument& from);
  Argument(::google::protobuf::Arena* arena, Argument&& from) noexcept
      : Argument(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string value = 2;
  void clear_value() ;
  const std::string& value() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_value(Arg_&& arg, Args_... args);
  std::string* mutable_value();
  PROTOBUF_NODISCARD std::string* release_value();
  void set_allocated_value(std::string* value);

  private:
  const std::string& _internal_value() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_value(
      const std::string& value);
  std::string* _internal_mutable_value();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Argument)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      38, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Argument_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Argument& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr value_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class VariableList final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.VariableList) */ {
 public:
  inline VariableList() : VariableList(nullptr) {}
  ~VariableList() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR VariableList(
      ::google::protobuf::internal::ConstantInitialized);

  inline VariableList(const VariableList& from) : VariableList(nullptr, from) {}
  inline VariableList(VariableList&& from) noexcept
      : VariableList(nullptr, std::move(from)) {}
  inline VariableList& operator=(const VariableList& from) {
    CopyFrom(from);
    return *this;
  }
  inline VariableList& operator=(VariableList&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const VariableList& default_instance() {
    return *internal_default_instance();
  }
  static inline const VariableList* internal_default_instance() {
    return reinterpret_cast<const VariableList*>(
        &_VariableList_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 44;
  friend void swap(VariableList& a, VariableList& b) { a.Swap(&b); }
  inline void Swap(VariableList* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(VariableList* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  VariableList* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<VariableList>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const VariableList& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const VariableList& from) { VariableList::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(VariableList* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.VariableList"; }

 protected:
  explicit VariableList(::google::protobuf::Arena* arena);
  VariableList(::google::protobuf::Arena* arena, const VariableList& from);
  VariableList(::google::protobuf::Arena* arena, VariableList&& from) noexcept
      : VariableList(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVariablesFieldNumber = 1,
  };
  // repeated .com.kcl.api.Variable variables = 1;
  int variables_size() const;
  private:
  int _internal_variables_size() const;

  public:
  void clear_variables() ;
  ::com::kcl::api::Variable* mutable_variables(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>* mutable_variables();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>& _internal_variables() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>* _internal_mutable_variables();
  public:
  const ::com::kcl::api::Variable& variables(int index) const;
  ::com::kcl::api::Variable* add_variables();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>& variables() const;
  // @@protoc_insertion_point(class_scope:com.kcl.api.VariableList)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_VariableList_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const VariableList& from_msg);
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Variable > variables_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class UpdateDependencies_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.UpdateDependencies_Result) */ {
 public:
  inline UpdateDependencies_Result() : UpdateDependencies_Result(nullptr) {}
  ~UpdateDependencies_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateDependencies_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateDependencies_Result(const UpdateDependencies_Result& from) : UpdateDependencies_Result(nullptr, from) {}
  inline UpdateDependencies_Result(UpdateDependencies_Result&& from) noexcept
      : UpdateDependencies_Result(nullptr, std::move(from)) {}
  inline UpdateDependencies_Result& operator=(const UpdateDependencies_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateDependencies_Result& operator=(UpdateDependencies_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateDependencies_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateDependencies_Result* internal_default_instance() {
    return reinterpret_cast<const UpdateDependencies_Result*>(
        &_UpdateDependencies_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 72;
  friend void swap(UpdateDependencies_Result& a, UpdateDependencies_Result& b) { a.Swap(&b); }
  inline void Swap(UpdateDependencies_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateDependencies_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateDependencies_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<UpdateDependencies_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateDependencies_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateDependencies_Result& from) { UpdateDependencies_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(UpdateDependencies_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.UpdateDependencies_Result"; }

 protected:
  explicit UpdateDependencies_Result(::google::protobuf::Arena* arena);
  UpdateDependencies_Result(::google::protobuf::Arena* arena, const UpdateDependencies_Result& from);
  UpdateDependencies_Result(::google::protobuf::Arena* arena, UpdateDependencies_Result&& from) noexcept
      : UpdateDependencies_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExternalPkgsFieldNumber = 3,
  };
  // repeated .com.kcl.api.ExternalPkg external_pkgs = 3;
  int external_pkgs_size() const;
  private:
  int _internal_external_pkgs_size() const;

  public:
  void clear_external_pkgs() ;
  ::com::kcl::api::ExternalPkg* mutable_external_pkgs(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* mutable_external_pkgs();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& _internal_external_pkgs() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* _internal_mutable_external_pkgs();
  public:
  const ::com::kcl::api::ExternalPkg& external_pkgs(int index) const;
  ::com::kcl::api::ExternalPkg* add_external_pkgs();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& external_pkgs() const;
  // @@protoc_insertion_point(class_scope:com.kcl.api.UpdateDependencies_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_UpdateDependencies_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateDependencies_Result& from_msg);
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::ExternalPkg > external_pkgs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Test_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Test_Result) */ {
 public:
  inline Test_Result() : Test_Result(nullptr) {}
  ~Test_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Test_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline Test_Result(const Test_Result& from) : Test_Result(nullptr, from) {}
  inline Test_Result(Test_Result&& from) noexcept
      : Test_Result(nullptr, std::move(from)) {}
  inline Test_Result& operator=(const Test_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test_Result& operator=(Test_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Test_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const Test_Result* internal_default_instance() {
    return reinterpret_cast<const Test_Result*>(
        &_Test_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 69;
  friend void swap(Test_Result& a, Test_Result& b) { a.Swap(&b); }
  inline void Swap(Test_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Test_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Test_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Test_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Test_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Test_Result& from) { Test_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Test_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Test_Result"; }

 protected:
  explicit Test_Result(::google::protobuf::Arena* arena);
  Test_Result(::google::protobuf::Arena* arena, const Test_Result& from);
  Test_Result(::google::protobuf::Arena* arena, Test_Result&& from) noexcept
      : Test_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kInfoFieldNumber = 2,
  };
  // repeated .com.kcl.api.TestCaseInfo info = 2;
  int info_size() const;
  private:
  int _internal_info_size() const;

  public:
  void clear_info() ;
  ::com::kcl::api::TestCaseInfo* mutable_info(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::TestCaseInfo>* mutable_info();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::TestCaseInfo>& _internal_info() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::TestCaseInfo>* _internal_mutable_info();
  public:
  const ::com::kcl::api::TestCaseInfo& info(int index) const;
  ::com::kcl::api::TestCaseInfo* add_info();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::TestCaseInfo>& info() const;
  // @@protoc_insertion_point(class_scope:com.kcl.api.Test_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Test_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Test_Result& from_msg);
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::TestCaseInfo > info_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Scope final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Scope) */ {
 public:
  inline Scope() : Scope(nullptr) {}
  ~Scope() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Scope(
      ::google::protobuf::internal::ConstantInitialized);

  inline Scope(const Scope& from) : Scope(nullptr, from) {}
  inline Scope(Scope&& from) noexcept
      : Scope(nullptr, std::move(from)) {}
  inline Scope& operator=(const Scope& from) {
    CopyFrom(from);
    return *this;
  }
  inline Scope& operator=(Scope&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Scope& default_instance() {
    return *internal_default_instance();
  }
  static inline const Scope* internal_default_instance() {
    return reinterpret_cast<const Scope*>(
        &_Scope_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 25;
  friend void swap(Scope& a, Scope& b) { a.Swap(&b); }
  inline void Swap(Scope* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Scope* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Scope* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Scope>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Scope& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Scope& from) { Scope::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Scope* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Scope"; }

 protected:
  explicit Scope(::google::protobuf::Arena* arena);
  Scope(::google::protobuf::Arena* arena, const Scope& from);
  Scope(::google::protobuf::Arena* arena, Scope&& from) noexcept
      : Scope(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChildrenFieldNumber = 4,
    kDefsFieldNumber = 5,
    kKindFieldNumber = 1,
    kParentFieldNumber = 2,
    kOwnerFieldNumber = 3,
  };
  // repeated .com.kcl.api.ScopeIndex children = 4;
  int children_size() const;
  private:
  int _internal_children_size() const;

  public:
  void clear_children() ;
  ::com::kcl::api::ScopeIndex* mutable_children(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ScopeIndex>* mutable_children();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ScopeIndex>& _internal_children() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ScopeIndex>* _internal_mutable_children();
  public:
  const ::com::kcl::api::ScopeIndex& children(int index) const;
  ::com::kcl::api::ScopeIndex* add_children();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ScopeIndex>& children() const;
  // repeated .com.kcl.api.SymbolIndex defs = 5;
  int defs_size() const;
  private:
  int _internal_defs_size() const;

  public:
  void clear_defs() ;
  ::com::kcl::api::SymbolIndex* mutable_defs(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>* mutable_defs();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>& _internal_defs() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>* _internal_mutable_defs();
  public:
  const ::com::kcl::api::SymbolIndex& defs(int index) const;
  ::com::kcl::api::SymbolIndex* add_defs();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>& defs() const;
  // string kind = 1;
  void clear_kind() ;
  const std::string& kind() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_kind(Arg_&& arg, Args_... args);
  std::string* mutable_kind();
  PROTOBUF_NODISCARD std::string* release_kind();
  void set_allocated_kind(std::string* value);

  private:
  const std::string& _internal_kind() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_kind(
      const std::string& value);
  std::string* _internal_mutable_kind();

  public:
  // .com.kcl.api.ScopeIndex parent = 2;
  bool has_parent() const;
  void clear_parent() ;
  const ::com::kcl::api::ScopeIndex& parent() const;
  PROTOBUF_NODISCARD ::com::kcl::api::ScopeIndex* release_parent();
  ::com::kcl::api::ScopeIndex* mutable_parent();
  void set_allocated_parent(::com::kcl::api::ScopeIndex* value);
  void unsafe_arena_set_allocated_parent(::com::kcl::api::ScopeIndex* value);
  ::com::kcl::api::ScopeIndex* unsafe_arena_release_parent();

  private:
  const ::com::kcl::api::ScopeIndex& _internal_parent() const;
  ::com::kcl::api::ScopeIndex* _internal_mutable_parent();

  public:
  // .com.kcl.api.SymbolIndex owner = 3;
  bool has_owner() const;
  void clear_owner() ;
  const ::com::kcl::api::SymbolIndex& owner() const;
  PROTOBUF_NODISCARD ::com::kcl::api::SymbolIndex* release_owner();
  ::com::kcl::api::SymbolIndex* mutable_owner();
  void set_allocated_owner(::com::kcl::api::SymbolIndex* value);
  void unsafe_arena_set_allocated_owner(::com::kcl::api::SymbolIndex* value);
  ::com::kcl::api::SymbolIndex* unsafe_arena_release_owner();

  private:
  const ::com::kcl::api::SymbolIndex& _internal_owner() const;
  ::com::kcl::api::SymbolIndex* _internal_mutable_owner();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Scope)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 4,
      30, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Scope_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Scope& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::ScopeIndex > children_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::SymbolIndex > defs_;
    ::google::protobuf::internal::ArenaStringPtr kind_;
    ::com::kcl::api::ScopeIndex* parent_;
    ::com::kcl::api::SymbolIndex* owner_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class RenameCode_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.RenameCode_Result) */ {
 public:
  inline RenameCode_Result() : RenameCode_Result(nullptr) {}
  ~RenameCode_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RenameCode_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline RenameCode_Result(const RenameCode_Result& from) : RenameCode_Result(nullptr, from) {}
  inline RenameCode_Result(RenameCode_Result&& from) noexcept
      : RenameCode_Result(nullptr, std::move(from)) {}
  inline RenameCode_Result& operator=(const RenameCode_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline RenameCode_Result& operator=(RenameCode_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RenameCode_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const RenameCode_Result* internal_default_instance() {
    return reinterpret_cast<const RenameCode_Result*>(
        &_RenameCode_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 67;
  friend void swap(RenameCode_Result& a, RenameCode_Result& b) { a.Swap(&b); }
  inline void Swap(RenameCode_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RenameCode_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RenameCode_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RenameCode_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RenameCode_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RenameCode_Result& from) { RenameCode_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RenameCode_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.RenameCode_Result"; }

 protected:
  explicit RenameCode_Result(::google::protobuf::Arena* arena);
  RenameCode_Result(::google::protobuf::Arena* arena, const RenameCode_Result& from);
  RenameCode_Result(::google::protobuf::Arena* arena, RenameCode_Result&& from) noexcept
      : RenameCode_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kChangedCodesFieldNumber = 1,
  };
  // map<string, string> changed_codes = 1;
  int changed_codes_size() const;
  private:
  int _internal_changed_codes_size() const;

  public:
  void clear_changed_codes() ;
  const ::google::protobuf::Map<std::string, std::string>& changed_codes() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_changed_codes();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_changed_codes() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_changed_codes();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.RenameCode_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RenameCode_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RenameCode_Result& from_msg);
    ::google::protobuf::internal::MapField<RenameCode_Result_ChangedCodesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        changed_codes_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class RenameCode_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.RenameCode_Args) */ {
 public:
  inline RenameCode_Args() : RenameCode_Args(nullptr) {}
  ~RenameCode_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RenameCode_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline RenameCode_Args(const RenameCode_Args& from) : RenameCode_Args(nullptr, from) {}
  inline RenameCode_Args(RenameCode_Args&& from) noexcept
      : RenameCode_Args(nullptr, std::move(from)) {}
  inline RenameCode_Args& operator=(const RenameCode_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline RenameCode_Args& operator=(RenameCode_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RenameCode_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const RenameCode_Args* internal_default_instance() {
    return reinterpret_cast<const RenameCode_Args*>(
        &_RenameCode_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 65;
  friend void swap(RenameCode_Args& a, RenameCode_Args& b) { a.Swap(&b); }
  inline void Swap(RenameCode_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RenameCode_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RenameCode_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<RenameCode_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RenameCode_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RenameCode_Args& from) { RenameCode_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(RenameCode_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.RenameCode_Args"; }

 protected:
  explicit RenameCode_Args(::google::protobuf::Arena* arena);
  RenameCode_Args(::google::protobuf::Arena* arena, const RenameCode_Args& from);
  RenameCode_Args(::google::protobuf::Arena* arena, RenameCode_Args&& from) noexcept
      : RenameCode_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSourceCodesFieldNumber = 3,
    kPackageRootFieldNumber = 1,
    kSymbolPathFieldNumber = 2,
    kNewNameFieldNumber = 4,
  };
  // map<string, string> source_codes = 3;
  int source_codes_size() const;
  private:
  int _internal_source_codes_size() const;

  public:
  void clear_source_codes() ;
  const ::google::protobuf::Map<std::string, std::string>& source_codes() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_source_codes();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_source_codes() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_source_codes();

  public:
  // string package_root = 1;
  void clear_package_root() ;
  const std::string& package_root() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_package_root(Arg_&& arg, Args_... args);
  std::string* mutable_package_root();
  PROTOBUF_NODISCARD std::string* release_package_root();
  void set_allocated_package_root(std::string* value);

  private:
  const std::string& _internal_package_root() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_package_root(
      const std::string& value);
  std::string* _internal_mutable_package_root();

  public:
  // string symbol_path = 2;
  void clear_symbol_path() ;
  const std::string& symbol_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_symbol_path(Arg_&& arg, Args_... args);
  std::string* mutable_symbol_path();
  PROTOBUF_NODISCARD std::string* release_symbol_path();
  void set_allocated_symbol_path(std::string* value);

  private:
  const std::string& _internal_symbol_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_symbol_path(
      const std::string& value);
  std::string* _internal_mutable_symbol_path();

  public:
  // string new_name = 4;
  void clear_new_name() ;
  const std::string& new_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_new_name(Arg_&& arg, Args_... args);
  std::string* mutable_new_name();
  PROTOBUF_NODISCARD std::string* release_new_name();
  void set_allocated_new_name(std::string* value);

  private:
  const std::string& _internal_new_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_new_name(
      const std::string& value);
  std::string* _internal_mutable_new_name();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.RenameCode_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      79, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_RenameCode_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RenameCode_Args& from_msg);
    ::google::protobuf::internal::MapField<RenameCode_Args_SourceCodesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        source_codes_;
    ::google::protobuf::internal::ArenaStringPtr package_root_;
    ::google::protobuf::internal::ArenaStringPtr symbol_path_;
    ::google::protobuf::internal::ArenaStringPtr new_name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ParseProgram_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ParseProgram_Args) */ {
 public:
  inline ParseProgram_Args() : ParseProgram_Args(nullptr) {}
  ~ParseProgram_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ParseProgram_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline ParseProgram_Args(const ParseProgram_Args& from) : ParseProgram_Args(nullptr, from) {}
  inline ParseProgram_Args(ParseProgram_Args&& from) noexcept
      : ParseProgram_Args(nullptr, std::move(from)) {}
  inline ParseProgram_Args& operator=(const ParseProgram_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParseProgram_Args& operator=(ParseProgram_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParseProgram_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParseProgram_Args* internal_default_instance() {
    return reinterpret_cast<const ParseProgram_Args*>(
        &_ParseProgram_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 12;
  friend void swap(ParseProgram_Args& a, ParseProgram_Args& b) { a.Swap(&b); }
  inline void Swap(ParseProgram_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParseProgram_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ParseProgram_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ParseProgram_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ParseProgram_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ParseProgram_Args& from) { ParseProgram_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ParseProgram_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ParseProgram_Args"; }

 protected:
  explicit ParseProgram_Args(::google::protobuf::Arena* arena);
  ParseProgram_Args(::google::protobuf::Arena* arena, const ParseProgram_Args& from);
  ParseProgram_Args(::google::protobuf::Arena* arena, ParseProgram_Args&& from) noexcept
      : ParseProgram_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathsFieldNumber = 1,
    kSourcesFieldNumber = 2,
    kExternalPkgsFieldNumber = 3,
  };
  // repeated string paths = 1;
  int paths_size() const;
  private:
  int _internal_paths_size() const;

  public:
  void clear_paths() ;
  const std::string& paths(int index) const;
  std::string* mutable_paths(int index);
  void set_paths(int index, const std::string& value);
  void set_paths(int index, std::string&& value);
  void set_paths(int index, const char* value);
  void set_paths(int index, const char* value, std::size_t size);
  void set_paths(int index, absl::string_view value);
  std::string* add_paths();
  void add_paths(const std::string& value);
  void add_paths(std::string&& value);
  void add_paths(const char* value);
  void add_paths(const char* value, std::size_t size);
  void add_paths(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_paths();

  public:
  // repeated string sources = 2;
  int sources_size() const;
  private:
  int _internal_sources_size() const;

  public:
  void clear_sources() ;
  const std::string& sources(int index) const;
  std::string* mutable_sources(int index);
  void set_sources(int index, const std::string& value);
  void set_sources(int index, std::string&& value);
  void set_sources(int index, const char* value);
  void set_sources(int index, const char* value, std::size_t size);
  void set_sources(int index, absl::string_view value);
  std::string* add_sources();
  void add_sources(const std::string& value);
  void add_sources(std::string&& value);
  void add_sources(const char* value);
  void add_sources(const char* value, std::size_t size);
  void add_sources(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& sources() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_sources();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_sources() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_sources();

  public:
  // repeated .com.kcl.api.ExternalPkg external_pkgs = 3;
  int external_pkgs_size() const;
  private:
  int _internal_external_pkgs_size() const;

  public:
  void clear_external_pkgs() ;
  ::com::kcl::api::ExternalPkg* mutable_external_pkgs(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* mutable_external_pkgs();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& _internal_external_pkgs() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* _internal_mutable_external_pkgs();
  public:
  const ::com::kcl::api::ExternalPkg& external_pkgs(int index) const;
  ::com::kcl::api::ExternalPkg* add_external_pkgs();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& external_pkgs() const;
  // @@protoc_insertion_point(class_scope:com.kcl.api.ParseProgram_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      50, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ParseProgram_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ParseProgram_Args& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> paths_;
    ::google::protobuf::RepeatedPtrField<std::string> sources_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::ExternalPkg > external_pkgs_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ParseFile_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ParseFile_Args) */ {
 public:
  inline ParseFile_Args() : ParseFile_Args(nullptr) {}
  ~ParseFile_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ParseFile_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline ParseFile_Args(const ParseFile_Args& from) : ParseFile_Args(nullptr, from) {}
  inline ParseFile_Args(ParseFile_Args&& from) noexcept
      : ParseFile_Args(nullptr, std::move(from)) {}
  inline ParseFile_Args& operator=(const ParseFile_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParseFile_Args& operator=(ParseFile_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParseFile_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParseFile_Args* internal_default_instance() {
    return reinterpret_cast<const ParseFile_Args*>(
        &_ParseFile_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 10;
  friend void swap(ParseFile_Args& a, ParseFile_Args& b) { a.Swap(&b); }
  inline void Swap(ParseFile_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParseFile_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ParseFile_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ParseFile_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ParseFile_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ParseFile_Args& from) { ParseFile_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ParseFile_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ParseFile_Args"; }

 protected:
  explicit ParseFile_Args(::google::protobuf::Arena* arena);
  ParseFile_Args(::google::protobuf::Arena* arena, const ParseFile_Args& from);
  ParseFile_Args(::google::protobuf::Arena* arena, ParseFile_Args&& from) noexcept
      : ParseFile_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExternalPkgsFieldNumber = 3,
    kPathFieldNumber = 1,
    kSourceFieldNumber = 2,
  };
  // repeated .com.kcl.api.ExternalPkg external_pkgs = 3;
  int external_pkgs_size() const;
  private:
  int _internal_external_pkgs_size() const;

  public:
  void clear_external_pkgs() ;
  ::com::kcl::api::ExternalPkg* mutable_external_pkgs(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* mutable_external_pkgs();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& _internal_external_pkgs() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* _internal_mutable_external_pkgs();
  public:
  const ::com::kcl::api::ExternalPkg& external_pkgs(int index) const;
  ::com::kcl::api::ExternalPkg* add_external_pkgs();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& external_pkgs() const;
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // string source = 2;
  void clear_source() ;
  const std::string& source() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_source(Arg_&& arg, Args_... args);
  std::string* mutable_source();
  PROTOBUF_NODISCARD std::string* release_source();
  void set_allocated_source(std::string* value);

  private:
  const std::string& _internal_source() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_source(
      const std::string& value);
  std::string* _internal_mutable_source();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ParseFile_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      45, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ParseFile_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ParseFile_Args& from_msg);
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::ExternalPkg > external_pkgs_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::google::protobuf::internal::ArenaStringPtr source_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Message final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Message) */ {
 public:
  inline Message() : Message(nullptr) {}
  ~Message() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Message(
      ::google::protobuf::internal::ConstantInitialized);

  inline Message(const Message& from) : Message(nullptr, from) {}
  inline Message(Message&& from) noexcept
      : Message(nullptr, std::move(from)) {}
  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  inline Message& operator=(Message&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Message& default_instance() {
    return *internal_default_instance();
  }
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
        &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(Message& a, Message& b) { a.Swap(&b); }
  inline void Swap(Message* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Message* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Message* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Message>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Message& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Message& from) { Message::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Message* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Message"; }

 protected:
  explicit Message(::google::protobuf::Arena* arena);
  Message(::google::protobuf::Arena* arena, const Message& from);
  Message(::google::protobuf::Arena* arena, Message&& from) noexcept
      : Message(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMsgFieldNumber = 1,
    kPosFieldNumber = 2,
  };
  // string msg = 1;
  void clear_msg() ;
  const std::string& msg() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_msg(Arg_&& arg, Args_... args);
  std::string* mutable_msg();
  PROTOBUF_NODISCARD std::string* release_msg();
  void set_allocated_msg(std::string* value);

  private:
  const std::string& _internal_msg() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_msg(
      const std::string& value);
  std::string* _internal_mutable_msg();

  public:
  // .com.kcl.api.Position pos = 2;
  bool has_pos() const;
  void clear_pos() ;
  const ::com::kcl::api::Position& pos() const;
  PROTOBUF_NODISCARD ::com::kcl::api::Position* release_pos();
  ::com::kcl::api::Position* mutable_pos();
  void set_allocated_pos(::com::kcl::api::Position* value);
  void unsafe_arena_set_allocated_pos(::com::kcl::api::Position* value);
  ::com::kcl::api::Position* unsafe_arena_release_pos();

  private:
  const ::com::kcl::api::Position& _internal_pos() const;
  ::com::kcl::api::Position* _internal_mutable_pos();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Message)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      31, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Message_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Message& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr msg_;
    ::com::kcl::api::Position* pos_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadSettingsFiles_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.LoadSettingsFiles_Result) */ {
 public:
  inline LoadSettingsFiles_Result() : LoadSettingsFiles_Result(nullptr) {}
  ~LoadSettingsFiles_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadSettingsFiles_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoadSettingsFiles_Result(const LoadSettingsFiles_Result& from) : LoadSettingsFiles_Result(nullptr, from) {}
  inline LoadSettingsFiles_Result(LoadSettingsFiles_Result&& from) noexcept
      : LoadSettingsFiles_Result(nullptr, std::move(from)) {}
  inline LoadSettingsFiles_Result& operator=(const LoadSettingsFiles_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadSettingsFiles_Result& operator=(LoadSettingsFiles_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadSettingsFiles_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadSettingsFiles_Result* internal_default_instance() {
    return reinterpret_cast<const LoadSettingsFiles_Result*>(
        &_LoadSettingsFiles_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 59;
  friend void swap(LoadSettingsFiles_Result& a, LoadSettingsFiles_Result& b) { a.Swap(&b); }
  inline void Swap(LoadSettingsFiles_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadSettingsFiles_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadSettingsFiles_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LoadSettingsFiles_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadSettingsFiles_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoadSettingsFiles_Result& from) { LoadSettingsFiles_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoadSettingsFiles_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.LoadSettingsFiles_Result"; }

 protected:
  explicit LoadSettingsFiles_Result(::google::protobuf::Arena* arena);
  LoadSettingsFiles_Result(::google::protobuf::Arena* arena, const LoadSettingsFiles_Result& from);
  LoadSettingsFiles_Result(::google::protobuf::Arena* arena, LoadSettingsFiles_Result&& from) noexcept
      : LoadSettingsFiles_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKclOptionsFieldNumber = 2,
    kKclCliConfigsFieldNumber = 1,
  };
  // repeated .com.kcl.api.KeyValuePair kcl_options = 2;
  int kcl_options_size() const;
  private:
  int _internal_kcl_options_size() const;

  public:
  void clear_kcl_options() ;
  ::com::kcl::api::KeyValuePair* mutable_kcl_options(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::KeyValuePair>* mutable_kcl_options();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::KeyValuePair>& _internal_kcl_options() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::KeyValuePair>* _internal_mutable_kcl_options();
  public:
  const ::com::kcl::api::KeyValuePair& kcl_options(int index) const;
  ::com::kcl::api::KeyValuePair* add_kcl_options();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::KeyValuePair>& kcl_options() const;
  // .com.kcl.api.CliConfig kcl_cli_configs = 1;
  bool has_kcl_cli_configs() const;
  void clear_kcl_cli_configs() ;
  const ::com::kcl::api::CliConfig& kcl_cli_configs() const;
  PROTOBUF_NODISCARD ::com::kcl::api::CliConfig* release_kcl_cli_configs();
  ::com::kcl::api::CliConfig* mutable_kcl_cli_configs();
  void set_allocated_kcl_cli_configs(::com::kcl::api::CliConfig* value);
  void unsafe_arena_set_allocated_kcl_cli_configs(::com::kcl::api::CliConfig* value);
  ::com::kcl::api::CliConfig* unsafe_arena_release_kcl_cli_configs();

  private:
  const ::com::kcl::api::CliConfig& _internal_kcl_cli_configs() const;
  ::com::kcl::api::CliConfig* _internal_mutable_kcl_cli_configs();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.LoadSettingsFiles_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 2,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LoadSettingsFiles_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoadSettingsFiles_Result& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::KeyValuePair > kcl_options_;
    ::com::kcl::api::CliConfig* kcl_cli_configs_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadPackage_Result_PkgScopeMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LoadPackage_Result_PkgScopeMapEntry_DoNotUse, std::string, ::com::kcl::api::ScopeIndex,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LoadPackage_Result_PkgScopeMapEntry_DoNotUse, std::string, ::com::kcl::api::ScopeIndex,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  LoadPackage_Result_PkgScopeMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPackage_Result_PkgScopeMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LoadPackage_Result_PkgScopeMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LoadPackage_Result_PkgScopeMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LoadPackage_Result_PkgScopeMapEntry_DoNotUse*>(
        &_LoadPackage_Result_PkgScopeMapEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadPackage_Result_NodeSymbolMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LoadPackage_Result_NodeSymbolMapEntry_DoNotUse, std::string, ::com::kcl::api::SymbolIndex,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LoadPackage_Result_NodeSymbolMapEntry_DoNotUse, std::string, ::com::kcl::api::SymbolIndex,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  LoadPackage_Result_NodeSymbolMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPackage_Result_NodeSymbolMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LoadPackage_Result_NodeSymbolMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LoadPackage_Result_NodeSymbolMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LoadPackage_Result_NodeSymbolMapEntry_DoNotUse*>(
        &_LoadPackage_Result_NodeSymbolMapEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse, std::string, ::com::kcl::api::SymbolIndex,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse, std::string, ::com::kcl::api::SymbolIndex,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse*>(
        &_LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ListVariables_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ListVariables_Args) */ {
 public:
  inline ListVariables_Args() : ListVariables_Args(nullptr) {}
  ~ListVariables_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListVariables_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListVariables_Args(const ListVariables_Args& from) : ListVariables_Args(nullptr, from) {}
  inline ListVariables_Args(ListVariables_Args&& from) noexcept
      : ListVariables_Args(nullptr, std::move(from)) {}
  inline ListVariables_Args& operator=(const ListVariables_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListVariables_Args& operator=(ListVariables_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListVariables_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListVariables_Args* internal_default_instance() {
    return reinterpret_cast<const ListVariables_Args*>(
        &_ListVariables_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 45;
  friend void swap(ListVariables_Args& a, ListVariables_Args& b) { a.Swap(&b); }
  inline void Swap(ListVariables_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListVariables_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListVariables_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListVariables_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListVariables_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListVariables_Args& from) { ListVariables_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListVariables_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ListVariables_Args"; }

 protected:
  explicit ListVariables_Args(::google::protobuf::Arena* arena);
  ListVariables_Args(::google::protobuf::Arena* arena, const ListVariables_Args& from);
  ListVariables_Args(::google::protobuf::Arena* arena, ListVariables_Args&& from) noexcept
      : ListVariables_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kFilesFieldNumber = 1,
    kSpecsFieldNumber = 2,
    kOptionsFieldNumber = 3,
  };
  // repeated string files = 1;
  int files_size() const;
  private:
  int _internal_files_size() const;

  public:
  void clear_files() ;
  const std::string& files(int index) const;
  std::string* mutable_files(int index);
  void set_files(int index, const std::string& value);
  void set_files(int index, std::string&& value);
  void set_files(int index, const char* value);
  void set_files(int index, const char* value, std::size_t size);
  void set_files(int index, absl::string_view value);
  std::string* add_files();
  void add_files(const std::string& value);
  void add_files(std::string&& value);
  void add_files(const char* value);
  void add_files(const char* value, std::size_t size);
  void add_files(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_files();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_files() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_files();

  public:
  // repeated string specs = 2;
  int specs_size() const;
  private:
  int _internal_specs_size() const;

  public:
  void clear_specs() ;
  const std::string& specs(int index) const;
  std::string* mutable_specs(int index);
  void set_specs(int index, const std::string& value);
  void set_specs(int index, std::string&& value);
  void set_specs(int index, const char* value);
  void set_specs(int index, const char* value, std::size_t size);
  void set_specs(int index, absl::string_view value);
  std::string* add_specs();
  void add_specs(const std::string& value);
  void add_specs(std::string&& value);
  void add_specs(const char* value);
  void add_specs(const char* value, std::size_t size);
  void add_specs(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& specs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_specs();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_specs() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_specs();

  public:
  // .com.kcl.api.ListVariables_Options options = 3;
  bool has_options() const;
  void clear_options() ;
  const ::com::kcl::api::ListVariables_Options& options() const;
  PROTOBUF_NODISCARD ::com::kcl::api::ListVariables_Options* release_options();
  ::com::kcl::api::ListVariables_Options* mutable_options();
  void set_allocated_options(::com::kcl::api::ListVariables_Options* value);
  void unsafe_arena_set_allocated_options(::com::kcl::api::ListVariables_Options* value);
  ::com::kcl::api::ListVariables_Options* unsafe_arena_release_options();

  private:
  const ::com::kcl::api::ListVariables_Options& _internal_options() const;
  ::com::kcl::api::ListVariables_Options* _internal_mutable_options();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ListVariables_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListVariables_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListVariables_Args& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> files_;
    ::google::protobuf::RepeatedPtrField<std::string> specs_;
    ::com::kcl::api::ListVariables_Options* options_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ListOptions_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ListOptions_Result) */ {
 public:
  inline ListOptions_Result() : ListOptions_Result(nullptr) {}
  ~ListOptions_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListOptions_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListOptions_Result(const ListOptions_Result& from) : ListOptions_Result(nullptr, from) {}
  inline ListOptions_Result(ListOptions_Result&& from) noexcept
      : ListOptions_Result(nullptr, std::move(from)) {}
  inline ListOptions_Result& operator=(const ListOptions_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListOptions_Result& operator=(ListOptions_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListOptions_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListOptions_Result* internal_default_instance() {
    return reinterpret_cast<const ListOptions_Result*>(
        &_ListOptions_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 22;
  friend void swap(ListOptions_Result& a, ListOptions_Result& b) { a.Swap(&b); }
  inline void Swap(ListOptions_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListOptions_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListOptions_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListOptions_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListOptions_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListOptions_Result& from) { ListOptions_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListOptions_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ListOptions_Result"; }

 protected:
  explicit ListOptions_Result(::google::protobuf::Arena* arena);
  ListOptions_Result(::google::protobuf::Arena* arena, const ListOptions_Result& from);
  ListOptions_Result(::google::protobuf::Arena* arena, ListOptions_Result&& from) noexcept
      : ListOptions_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOptionsFieldNumber = 2,
  };
  // repeated .com.kcl.api.OptionHelp options = 2;
  int options_size() const;
  private:
  int _internal_options_size() const;

  public:
  void clear_options() ;
  ::com::kcl::api::OptionHelp* mutable_options(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::OptionHelp>* mutable_options();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::OptionHelp>& _internal_options() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::OptionHelp>* _internal_mutable_options();
  public:
  const ::com::kcl::api::OptionHelp& options(int index) const;
  ::com::kcl::api::OptionHelp* add_options();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::OptionHelp>& options() const;
  // @@protoc_insertion_point(class_scope:com.kcl.api.ListOptions_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListOptions_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListOptions_Result& from_msg);
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::OptionHelp > options_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class KclType_ExamplesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          KclType_ExamplesEntry_DoNotUse, std::string, ::com::kcl::api::Example,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      KclType_ExamplesEntry_DoNotUse, std::string, ::com::kcl::api::Example,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  KclType_ExamplesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KclType_ExamplesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit KclType_ExamplesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const KclType_ExamplesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const KclType_ExamplesEntry_DoNotUse*>(
        &_KclType_ExamplesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ExecProgram_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ExecProgram_Args) */ {
 public:
  inline ExecProgram_Args() : ExecProgram_Args(nullptr) {}
  ~ExecProgram_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExecProgram_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExecProgram_Args(const ExecProgram_Args& from) : ExecProgram_Args(nullptr, from) {}
  inline ExecProgram_Args(ExecProgram_Args&& from) noexcept
      : ExecProgram_Args(nullptr, std::move(from)) {}
  inline ExecProgram_Args& operator=(const ExecProgram_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecProgram_Args& operator=(ExecProgram_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecProgram_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecProgram_Args* internal_default_instance() {
    return reinterpret_cast<const ExecProgram_Args*>(
        &_ExecProgram_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 28;
  friend void swap(ExecProgram_Args& a, ExecProgram_Args& b) { a.Swap(&b); }
  inline void Swap(ExecProgram_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecProgram_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecProgram_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExecProgram_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExecProgram_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExecProgram_Args& from) { ExecProgram_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExecProgram_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ExecProgram_Args"; }

 protected:
  explicit ExecProgram_Args(::google::protobuf::Arena* arena);
  ExecProgram_Args(::google::protobuf::Arena* arena, const ExecProgram_Args& from);
  ExecProgram_Args(::google::protobuf::Arena* arena, ExecProgram_Args&& from) noexcept
      : ExecProgram_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kKFilenameListFieldNumber = 2,
    kKCodeListFieldNumber = 3,
    kArgsFieldNumber = 4,
    kOverridesFieldNumber = 5,
    kExternalPkgsFieldNumber = 13,
    kPathSelectorFieldNumber = 17,
    kWorkDirFieldNumber = 1,
    kDisableYamlResultFieldNumber = 6,
    kPrintOverrideAstFieldNumber = 7,
    kStrictRangeCheckFieldNumber = 8,
    kDisableNoneFieldNumber = 9,
    kVerboseFieldNumber = 10,
    kDebugFieldNumber = 11,
    kSortKeysFieldNumber = 12,
    kIncludeSchemaTypePathFieldNumber = 14,
    kCompileOnlyFieldNumber = 15,
    kShowHiddenFieldNumber = 16,
    kFastEvalFieldNumber = 18,
  };
  // repeated string k_filename_list = 2;
  int k_filename_list_size() const;
  private:
  int _internal_k_filename_list_size() const;

  public:
  void clear_k_filename_list() ;
  const std::string& k_filename_list(int index) const;
  std::string* mutable_k_filename_list(int index);
  void set_k_filename_list(int index, const std::string& value);
  void set_k_filename_list(int index, std::string&& value);
  void set_k_filename_list(int index, const char* value);
  void set_k_filename_list(int index, const char* value, std::size_t size);
  void set_k_filename_list(int index, absl::string_view value);
  std::string* add_k_filename_list();
  void add_k_filename_list(const std::string& value);
  void add_k_filename_list(std::string&& value);
  void add_k_filename_list(const char* value);
  void add_k_filename_list(const char* value, std::size_t size);
  void add_k_filename_list(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& k_filename_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_k_filename_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_k_filename_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_k_filename_list();

  public:
  // repeated string k_code_list = 3;
  int k_code_list_size() const;
  private:
  int _internal_k_code_list_size() const;

  public:
  void clear_k_code_list() ;
  const std::string& k_code_list(int index) const;
  std::string* mutable_k_code_list(int index);
  void set_k_code_list(int index, const std::string& value);
  void set_k_code_list(int index, std::string&& value);
  void set_k_code_list(int index, const char* value);
  void set_k_code_list(int index, const char* value, std::size_t size);
  void set_k_code_list(int index, absl::string_view value);
  std::string* add_k_code_list();
  void add_k_code_list(const std::string& value);
  void add_k_code_list(std::string&& value);
  void add_k_code_list(const char* value);
  void add_k_code_list(const char* value, std::size_t size);
  void add_k_code_list(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& k_code_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_k_code_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_k_code_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_k_code_list();

  public:
  // repeated .com.kcl.api.Argument args = 4;
  int args_size() const;
  private:
  int _internal_args_size() const;

  public:
  void clear_args() ;
  ::com::kcl::api::Argument* mutable_args(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Argument>* mutable_args();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Argument>& _internal_args() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Argument>* _internal_mutable_args();
  public:
  const ::com::kcl::api::Argument& args(int index) const;
  ::com::kcl::api::Argument* add_args();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Argument>& args() const;
  // repeated string overrides = 5;
  int overrides_size() const;
  private:
  int _internal_overrides_size() const;

  public:
  void clear_overrides() ;
  const std::string& overrides(int index) const;
  std::string* mutable_overrides(int index);
  void set_overrides(int index, const std::string& value);
  void set_overrides(int index, std::string&& value);
  void set_overrides(int index, const char* value);
  void set_overrides(int index, const char* value, std::size_t size);
  void set_overrides(int index, absl::string_view value);
  std::string* add_overrides();
  void add_overrides(const std::string& value);
  void add_overrides(std::string&& value);
  void add_overrides(const char* value);
  void add_overrides(const char* value, std::size_t size);
  void add_overrides(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& overrides() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_overrides();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_overrides() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_overrides();

  public:
  // repeated .com.kcl.api.ExternalPkg external_pkgs = 13;
  int external_pkgs_size() const;
  private:
  int _internal_external_pkgs_size() const;

  public:
  void clear_external_pkgs() ;
  ::com::kcl::api::ExternalPkg* mutable_external_pkgs(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* mutable_external_pkgs();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& _internal_external_pkgs() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* _internal_mutable_external_pkgs();
  public:
  const ::com::kcl::api::ExternalPkg& external_pkgs(int index) const;
  ::com::kcl::api::ExternalPkg* add_external_pkgs();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& external_pkgs() const;
  // repeated string path_selector = 17;
  int path_selector_size() const;
  private:
  int _internal_path_selector_size() const;

  public:
  void clear_path_selector() ;
  const std::string& path_selector(int index) const;
  std::string* mutable_path_selector(int index);
  void set_path_selector(int index, const std::string& value);
  void set_path_selector(int index, std::string&& value);
  void set_path_selector(int index, const char* value);
  void set_path_selector(int index, const char* value, std::size_t size);
  void set_path_selector(int index, absl::string_view value);
  std::string* add_path_selector();
  void add_path_selector(const std::string& value);
  void add_path_selector(std::string&& value);
  void add_path_selector(const char* value);
  void add_path_selector(const char* value, std::size_t size);
  void add_path_selector(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& path_selector() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_path_selector();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_path_selector() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_path_selector();

  public:
  // string work_dir = 1;
  void clear_work_dir() ;
  const std::string& work_dir() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_work_dir(Arg_&& arg, Args_... args);
  std::string* mutable_work_dir();
  PROTOBUF_NODISCARD std::string* release_work_dir();
  void set_allocated_work_dir(std::string* value);

  private:
  const std::string& _internal_work_dir() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_work_dir(
      const std::string& value);
  std::string* _internal_mutable_work_dir();

  public:
  // bool disable_yaml_result = 6;
  void clear_disable_yaml_result() ;
  bool disable_yaml_result() const;
  void set_disable_yaml_result(bool value);

  private:
  bool _internal_disable_yaml_result() const;
  void _internal_set_disable_yaml_result(bool value);

  public:
  // bool print_override_ast = 7;
  void clear_print_override_ast() ;
  bool print_override_ast() const;
  void set_print_override_ast(bool value);

  private:
  bool _internal_print_override_ast() const;
  void _internal_set_print_override_ast(bool value);

  public:
  // bool strict_range_check = 8;
  void clear_strict_range_check() ;
  bool strict_range_check() const;
  void set_strict_range_check(bool value);

  private:
  bool _internal_strict_range_check() const;
  void _internal_set_strict_range_check(bool value);

  public:
  // bool disable_none = 9;
  void clear_disable_none() ;
  bool disable_none() const;
  void set_disable_none(bool value);

  private:
  bool _internal_disable_none() const;
  void _internal_set_disable_none(bool value);

  public:
  // int32 verbose = 10;
  void clear_verbose() ;
  ::int32_t verbose() const;
  void set_verbose(::int32_t value);

  private:
  ::int32_t _internal_verbose() const;
  void _internal_set_verbose(::int32_t value);

  public:
  // int32 debug = 11;
  void clear_debug() ;
  ::int32_t debug() const;
  void set_debug(::int32_t value);

  private:
  ::int32_t _internal_debug() const;
  void _internal_set_debug(::int32_t value);

  public:
  // bool sort_keys = 12;
  void clear_sort_keys() ;
  bool sort_keys() const;
  void set_sort_keys(bool value);

  private:
  bool _internal_sort_keys() const;
  void _internal_set_sort_keys(bool value);

  public:
  // bool include_schema_type_path = 14;
  void clear_include_schema_type_path() ;
  bool include_schema_type_path() const;
  void set_include_schema_type_path(bool value);

  private:
  bool _internal_include_schema_type_path() const;
  void _internal_set_include_schema_type_path(bool value);

  public:
  // bool compile_only = 15;
  void clear_compile_only() ;
  bool compile_only() const;
  void set_compile_only(bool value);

  private:
  bool _internal_compile_only() const;
  void _internal_set_compile_only(bool value);

  public:
  // bool show_hidden = 16;
  void clear_show_hidden() ;
  bool show_hidden() const;
  void set_show_hidden(bool value);

  private:
  bool _internal_show_hidden() const;
  void _internal_set_show_hidden(bool value);

  public:
  // bool fast_eval = 18;
  void clear_fast_eval() ;
  bool fast_eval() const;
  void set_fast_eval(bool value);

  private:
  bool _internal_fast_eval() const;
  void _internal_set_fast_eval(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ExecProgram_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 18, 2,
      109, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ExecProgram_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExecProgram_Args& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> k_filename_list_;
    ::google::protobuf::RepeatedPtrField<std::string> k_code_list_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Argument > args_;
    ::google::protobuf::RepeatedPtrField<std::string> overrides_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::ExternalPkg > external_pkgs_;
    ::google::protobuf::RepeatedPtrField<std::string> path_selector_;
    ::google::protobuf::internal::ArenaStringPtr work_dir_;
    bool disable_yaml_result_;
    bool print_override_ast_;
    bool strict_range_check_;
    bool disable_none_;
    ::int32_t verbose_;
    ::int32_t debug_;
    bool sort_keys_;
    bool include_schema_type_path_;
    bool compile_only_;
    bool show_hidden_;
    bool fast_eval_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Decorator final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Decorator) */ {
 public:
  inline Decorator() : Decorator(nullptr) {}
  ~Decorator() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Decorator(
      ::google::protobuf::internal::ConstantInitialized);

  inline Decorator(const Decorator& from) : Decorator(nullptr, from) {}
  inline Decorator(Decorator&& from) noexcept
      : Decorator(nullptr, std::move(from)) {}
  inline Decorator& operator=(const Decorator& from) {
    CopyFrom(from);
    return *this;
  }
  inline Decorator& operator=(Decorator&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Decorator& default_instance() {
    return *internal_default_instance();
  }
  static inline const Decorator* internal_default_instance() {
    return reinterpret_cast<const Decorator*>(
        &_Decorator_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 77;
  friend void swap(Decorator& a, Decorator& b) { a.Swap(&b); }
  inline void Swap(Decorator* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Decorator* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Decorator* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Decorator>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Decorator& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Decorator& from) { Decorator::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Decorator* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Decorator"; }

 protected:
  explicit Decorator(::google::protobuf::Arena* arena);
  Decorator(::google::protobuf::Arena* arena, const Decorator& from);
  Decorator(::google::protobuf::Arena* arena, Decorator&& from) noexcept
      : Decorator(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kArgumentsFieldNumber = 2,
    kKeywordsFieldNumber = 3,
    kNameFieldNumber = 1,
  };
  // repeated string arguments = 2;
  int arguments_size() const;
  private:
  int _internal_arguments_size() const;

  public:
  void clear_arguments() ;
  const std::string& arguments(int index) const;
  std::string* mutable_arguments(int index);
  void set_arguments(int index, const std::string& value);
  void set_arguments(int index, std::string&& value);
  void set_arguments(int index, const char* value);
  void set_arguments(int index, const char* value, std::size_t size);
  void set_arguments(int index, absl::string_view value);
  std::string* add_arguments();
  void add_arguments(const std::string& value);
  void add_arguments(std::string&& value);
  void add_arguments(const char* value);
  void add_arguments(const char* value, std::size_t size);
  void add_arguments(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& arguments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_arguments();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_arguments() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_arguments();

  public:
  // map<string, string> keywords = 3;
  int keywords_size() const;
  private:
  int _internal_keywords_size() const;

  public:
  void clear_keywords() ;
  const ::google::protobuf::Map<std::string, std::string>& keywords() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_keywords();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_keywords() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_keywords();

  public:
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Decorator)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 1,
      51, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Decorator_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Decorator& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> arguments_;
    ::google::protobuf::internal::MapField<Decorator_KeywordsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        keywords_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Test_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Test_Args) */ {
 public:
  inline Test_Args() : Test_Args(nullptr) {}
  ~Test_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Test_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline Test_Args(const Test_Args& from) : Test_Args(nullptr, from) {}
  inline Test_Args(Test_Args&& from) noexcept
      : Test_Args(nullptr, std::move(from)) {}
  inline Test_Args& operator=(const Test_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline Test_Args& operator=(Test_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Test_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const Test_Args* internal_default_instance() {
    return reinterpret_cast<const Test_Args*>(
        &_Test_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 68;
  friend void swap(Test_Args& a, Test_Args& b) { a.Swap(&b); }
  inline void Swap(Test_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Test_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Test_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Test_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Test_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Test_Args& from) { Test_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Test_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Test_Args"; }

 protected:
  explicit Test_Args(::google::protobuf::Arena* arena);
  Test_Args(::google::protobuf::Arena* arena, const Test_Args& from);
  Test_Args(::google::protobuf::Arena* arena, Test_Args&& from) noexcept
      : Test_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPkgListFieldNumber = 2,
    kRunRegexpFieldNumber = 3,
    kExecArgsFieldNumber = 1,
    kFailFastFieldNumber = 4,
  };
  // repeated string pkg_list = 2;
  int pkg_list_size() const;
  private:
  int _internal_pkg_list_size() const;

  public:
  void clear_pkg_list() ;
  const std::string& pkg_list(int index) const;
  std::string* mutable_pkg_list(int index);
  void set_pkg_list(int index, const std::string& value);
  void set_pkg_list(int index, std::string&& value);
  void set_pkg_list(int index, const char* value);
  void set_pkg_list(int index, const char* value, std::size_t size);
  void set_pkg_list(int index, absl::string_view value);
  std::string* add_pkg_list();
  void add_pkg_list(const std::string& value);
  void add_pkg_list(std::string&& value);
  void add_pkg_list(const char* value);
  void add_pkg_list(const char* value, std::size_t size);
  void add_pkg_list(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& pkg_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_pkg_list();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_pkg_list() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_pkg_list();

  public:
  // string run_regexp = 3;
  void clear_run_regexp() ;
  const std::string& run_regexp() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_run_regexp(Arg_&& arg, Args_... args);
  std::string* mutable_run_regexp();
  PROTOBUF_NODISCARD std::string* release_run_regexp();
  void set_allocated_run_regexp(std::string* value);

  private:
  const std::string& _internal_run_regexp() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_run_regexp(
      const std::string& value);
  std::string* _internal_mutable_run_regexp();

  public:
  // .com.kcl.api.ExecProgram_Args exec_args = 1;
  bool has_exec_args() const;
  void clear_exec_args() ;
  const ::com::kcl::api::ExecProgram_Args& exec_args() const;
  PROTOBUF_NODISCARD ::com::kcl::api::ExecProgram_Args* release_exec_args();
  ::com::kcl::api::ExecProgram_Args* mutable_exec_args();
  void set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value);
  void unsafe_arena_set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value);
  ::com::kcl::api::ExecProgram_Args* unsafe_arena_release_exec_args();

  private:
  const ::com::kcl::api::ExecProgram_Args& _internal_exec_args() const;
  ::com::kcl::api::ExecProgram_Args* _internal_mutable_exec_args();

  public:
  // bool fail_fast = 4;
  void clear_fail_fast() ;
  bool fail_fast() const;
  void set_fail_fast(bool value);

  private:
  bool _internal_fail_fast() const;
  void _internal_set_fail_fast(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Test_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      48, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Test_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Test_Args& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<std::string> pkg_list_;
    ::google::protobuf::internal::ArenaStringPtr run_regexp_;
    ::com::kcl::api::ExecProgram_Args* exec_args_;
    bool fail_fast_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadPackage_Result_ScopesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LoadPackage_Result_ScopesEntry_DoNotUse, std::string, ::com::kcl::api::Scope,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LoadPackage_Result_ScopesEntry_DoNotUse, std::string, ::com::kcl::api::Scope,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  LoadPackage_Result_ScopesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPackage_Result_ScopesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LoadPackage_Result_ScopesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LoadPackage_Result_ScopesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LoadPackage_Result_ScopesEntry_DoNotUse*>(
        &_LoadPackage_Result_ScopesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadPackage_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.LoadPackage_Args) */ {
 public:
  inline LoadPackage_Args() : LoadPackage_Args(nullptr) {}
  ~LoadPackage_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPackage_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoadPackage_Args(const LoadPackage_Args& from) : LoadPackage_Args(nullptr, from) {}
  inline LoadPackage_Args(LoadPackage_Args&& from) noexcept
      : LoadPackage_Args(nullptr, std::move(from)) {}
  inline LoadPackage_Args& operator=(const LoadPackage_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadPackage_Args& operator=(LoadPackage_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadPackage_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadPackage_Args* internal_default_instance() {
    return reinterpret_cast<const LoadPackage_Args*>(
        &_LoadPackage_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 14;
  friend void swap(LoadPackage_Args& a, LoadPackage_Args& b) { a.Swap(&b); }
  inline void Swap(LoadPackage_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadPackage_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadPackage_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LoadPackage_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadPackage_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoadPackage_Args& from) { LoadPackage_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoadPackage_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.LoadPackage_Args"; }

 protected:
  explicit LoadPackage_Args(::google::protobuf::Arena* arena);
  LoadPackage_Args(::google::protobuf::Arena* arena, const LoadPackage_Args& from);
  LoadPackage_Args(::google::protobuf::Arena* arena, LoadPackage_Args&& from) noexcept
      : LoadPackage_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParseArgsFieldNumber = 1,
    kResolveAstFieldNumber = 2,
    kLoadBuiltinFieldNumber = 3,
    kWithAstIndexFieldNumber = 4,
  };
  // .com.kcl.api.ParseProgram_Args parse_args = 1;
  bool has_parse_args() const;
  void clear_parse_args() ;
  const ::com::kcl::api::ParseProgram_Args& parse_args() const;
  PROTOBUF_NODISCARD ::com::kcl::api::ParseProgram_Args* release_parse_args();
  ::com::kcl::api::ParseProgram_Args* mutable_parse_args();
  void set_allocated_parse_args(::com::kcl::api::ParseProgram_Args* value);
  void unsafe_arena_set_allocated_parse_args(::com::kcl::api::ParseProgram_Args* value);
  ::com::kcl::api::ParseProgram_Args* unsafe_arena_release_parse_args();

  private:
  const ::com::kcl::api::ParseProgram_Args& _internal_parse_args() const;
  ::com::kcl::api::ParseProgram_Args* _internal_mutable_parse_args();

  public:
  // bool resolve_ast = 2;
  void clear_resolve_ast() ;
  bool resolve_ast() const;
  void set_resolve_ast(bool value);

  private:
  bool _internal_resolve_ast() const;
  void _internal_set_resolve_ast(bool value);

  public:
  // bool load_builtin = 3;
  void clear_load_builtin() ;
  bool load_builtin() const;
  void set_load_builtin(bool value);

  private:
  bool _internal_load_builtin() const;
  void _internal_set_load_builtin(bool value);

  public:
  // bool with_ast_index = 4;
  void clear_with_ast_index() ;
  bool with_ast_index() const;
  void set_with_ast_index(bool value);

  private:
  bool _internal_with_ast_index() const;
  void _internal_set_with_ast_index(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.LoadPackage_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LoadPackage_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoadPackage_Args& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::com::kcl::api::ParseProgram_Args* parse_args_;
    bool resolve_ast_;
    bool load_builtin_;
    bool with_ast_index_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ListVariables_Result_VariablesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          ListVariables_Result_VariablesEntry_DoNotUse, std::string, ::com::kcl::api::VariableList,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      ListVariables_Result_VariablesEntry_DoNotUse, std::string, ::com::kcl::api::VariableList,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  ListVariables_Result_VariablesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListVariables_Result_VariablesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit ListVariables_Result_VariablesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const ListVariables_Result_VariablesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const ListVariables_Result_VariablesEntry_DoNotUse*>(
        &_ListVariables_Result_VariablesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class KclType final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.KclType) */ {
 public:
  inline KclType() : KclType(nullptr) {}
  ~KclType() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KclType(
      ::google::protobuf::internal::ConstantInitialized);

  inline KclType(const KclType& from) : KclType(nullptr, from) {}
  inline KclType(KclType&& from) noexcept
      : KclType(nullptr, std::move(from)) {}
  inline KclType& operator=(const KclType& from) {
    CopyFrom(from);
    return *this;
  }
  inline KclType& operator=(KclType&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const KclType& default_instance() {
    return *internal_default_instance();
  }
  static inline const KclType* internal_default_instance() {
    return reinterpret_cast<const KclType*>(
        &_KclType_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 75;
  friend void swap(KclType& a, KclType& b) { a.Swap(&b); }
  inline void Swap(KclType* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(KclType* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  KclType* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<KclType>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const KclType& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const KclType& from) { KclType::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(KclType* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.KclType"; }

 protected:
  explicit KclType(::google::protobuf::Arena* arena);
  KclType(::google::protobuf::Arena* arena, const KclType& from);
  KclType(::google::protobuf::Arena* arena, KclType&& from) noexcept
      : KclType(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUnionTypesFieldNumber = 2,
    kPropertiesFieldNumber = 6,
    kRequiredFieldNumber = 7,
    kDecoratorsFieldNumber = 11,
    kExamplesFieldNumber = 15,
    kTypeFieldNumber = 1,
    kDefaultFieldNumber = 3,
    kSchemaNameFieldNumber = 4,
    kSchemaDocFieldNumber = 5,
    kFilenameFieldNumber = 12,
    kPkgPathFieldNumber = 13,
    kDescriptionFieldNumber = 14,
    kKeyFieldNumber = 8,
    kItemFieldNumber = 9,
    kBaseSchemaFieldNumber = 16,
    kLineFieldNumber = 10,
  };
  // repeated .com.kcl.api.KclType union_types = 2;
  int union_types_size() const;
  private:
  int _internal_union_types_size() const;

  public:
  void clear_union_types() ;
  ::com::kcl::api::KclType* mutable_union_types(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::KclType>* mutable_union_types();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::KclType>& _internal_union_types() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::KclType>* _internal_mutable_union_types();
  public:
  const ::com::kcl::api::KclType& union_types(int index) const;
  ::com::kcl::api::KclType* add_union_types();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::KclType>& union_types() const;
  // map<string, .com.kcl.api.KclType> properties = 6;
  int properties_size() const;
  private:
  int _internal_properties_size() const;

  public:
  void clear_properties() ;
  const ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>& properties() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>* mutable_properties();

  private:
  const ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>& _internal_properties() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>* _internal_mutable_properties();

  public:
  // repeated string required = 7;
  int required_size() const;
  private:
  int _internal_required_size() const;

  public:
  void clear_required() ;
  const std::string& required(int index) const;
  std::string* mutable_required(int index);
  void set_required(int index, const std::string& value);
  void set_required(int index, std::string&& value);
  void set_required(int index, const char* value);
  void set_required(int index, const char* value, std::size_t size);
  void set_required(int index, absl::string_view value);
  std::string* add_required();
  void add_required(const std::string& value);
  void add_required(std::string&& value);
  void add_required(const char* value);
  void add_required(const char* value, std::size_t size);
  void add_required(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& required() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_required();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_required() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_required();

  public:
  // repeated .com.kcl.api.Decorator decorators = 11;
  int decorators_size() const;
  private:
  int _internal_decorators_size() const;

  public:
  void clear_decorators() ;
  ::com::kcl::api::Decorator* mutable_decorators(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Decorator>* mutable_decorators();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Decorator>& _internal_decorators() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Decorator>* _internal_mutable_decorators();
  public:
  const ::com::kcl::api::Decorator& decorators(int index) const;
  ::com::kcl::api::Decorator* add_decorators();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Decorator>& decorators() const;
  // map<string, .com.kcl.api.Example> examples = 15;
  int examples_size() const;
  private:
  int _internal_examples_size() const;

  public:
  void clear_examples() ;
  const ::google::protobuf::Map<std::string, ::com::kcl::api::Example>& examples() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::Example>* mutable_examples();

  private:
  const ::google::protobuf::Map<std::string, ::com::kcl::api::Example>& _internal_examples() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::Example>* _internal_mutable_examples();

  public:
  // string type = 1;
  void clear_type() ;
  const std::string& type() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_type(Arg_&& arg, Args_... args);
  std::string* mutable_type();
  PROTOBUF_NODISCARD std::string* release_type();
  void set_allocated_type(std::string* value);

  private:
  const std::string& _internal_type() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_type(
      const std::string& value);
  std::string* _internal_mutable_type();

  public:
  // string default = 3;
  void clear_default_() ;
  const std::string& default_() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_default_(Arg_&& arg, Args_... args);
  std::string* mutable_default_();
  PROTOBUF_NODISCARD std::string* release_default_();
  void set_allocated_default_(std::string* value);

  private:
  const std::string& _internal_default_() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_default_(
      const std::string& value);
  std::string* _internal_mutable_default_();

  public:
  // string schema_name = 4;
  void clear_schema_name() ;
  const std::string& schema_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_schema_name(Arg_&& arg, Args_... args);
  std::string* mutable_schema_name();
  PROTOBUF_NODISCARD std::string* release_schema_name();
  void set_allocated_schema_name(std::string* value);

  private:
  const std::string& _internal_schema_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_schema_name(
      const std::string& value);
  std::string* _internal_mutable_schema_name();

  public:
  // string schema_doc = 5;
  void clear_schema_doc() ;
  const std::string& schema_doc() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_schema_doc(Arg_&& arg, Args_... args);
  std::string* mutable_schema_doc();
  PROTOBUF_NODISCARD std::string* release_schema_doc();
  void set_allocated_schema_doc(std::string* value);

  private:
  const std::string& _internal_schema_doc() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_schema_doc(
      const std::string& value);
  std::string* _internal_mutable_schema_doc();

  public:
  // string filename = 12;
  void clear_filename() ;
  const std::string& filename() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filename(Arg_&& arg, Args_... args);
  std::string* mutable_filename();
  PROTOBUF_NODISCARD std::string* release_filename();
  void set_allocated_filename(std::string* value);

  private:
  const std::string& _internal_filename() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filename(
      const std::string& value);
  std::string* _internal_mutable_filename();

  public:
  // string pkg_path = 13;
  void clear_pkg_path() ;
  const std::string& pkg_path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_pkg_path(Arg_&& arg, Args_... args);
  std::string* mutable_pkg_path();
  PROTOBUF_NODISCARD std::string* release_pkg_path();
  void set_allocated_pkg_path(std::string* value);

  private:
  const std::string& _internal_pkg_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_pkg_path(
      const std::string& value);
  std::string* _internal_mutable_pkg_path();

  public:
  // string description = 14;
  void clear_description() ;
  const std::string& description() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_description(Arg_&& arg, Args_... args);
  std::string* mutable_description();
  PROTOBUF_NODISCARD std::string* release_description();
  void set_allocated_description(std::string* value);

  private:
  const std::string& _internal_description() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_description(
      const std::string& value);
  std::string* _internal_mutable_description();

  public:
  // .com.kcl.api.KclType key = 8;
  bool has_key() const;
  void clear_key() ;
  const ::com::kcl::api::KclType& key() const;
  PROTOBUF_NODISCARD ::com::kcl::api::KclType* release_key();
  ::com::kcl::api::KclType* mutable_key();
  void set_allocated_key(::com::kcl::api::KclType* value);
  void unsafe_arena_set_allocated_key(::com::kcl::api::KclType* value);
  ::com::kcl::api::KclType* unsafe_arena_release_key();

  private:
  const ::com::kcl::api::KclType& _internal_key() const;
  ::com::kcl::api::KclType* _internal_mutable_key();

  public:
  // .com.kcl.api.KclType item = 9;
  bool has_item() const;
  void clear_item() ;
  const ::com::kcl::api::KclType& item() const;
  PROTOBUF_NODISCARD ::com::kcl::api::KclType* release_item();
  ::com::kcl::api::KclType* mutable_item();
  void set_allocated_item(::com::kcl::api::KclType* value);
  void unsafe_arena_set_allocated_item(::com::kcl::api::KclType* value);
  ::com::kcl::api::KclType* unsafe_arena_release_item();

  private:
  const ::com::kcl::api::KclType& _internal_item() const;
  ::com::kcl::api::KclType* _internal_mutable_item();

  public:
  // .com.kcl.api.KclType base_schema = 16;
  bool has_base_schema() const;
  void clear_base_schema() ;
  const ::com::kcl::api::KclType& base_schema() const;
  PROTOBUF_NODISCARD ::com::kcl::api::KclType* release_base_schema();
  ::com::kcl::api::KclType* mutable_base_schema();
  void set_allocated_base_schema(::com::kcl::api::KclType* value);
  void unsafe_arena_set_allocated_base_schema(::com::kcl::api::KclType* value);
  ::com::kcl::api::KclType* unsafe_arena_release_base_schema();

  private:
  const ::com::kcl::api::KclType& _internal_base_schema() const;
  ::com::kcl::api::KclType* _internal_mutable_base_schema();

  public:
  // int32 line = 10;
  void clear_line() ;
  ::int32_t line() const;
  void set_line(::int32_t value);

  private:
  ::int32_t _internal_line() const;
  void _internal_set_line(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.KclType)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 16, 9,
      129, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_KclType_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const KclType& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::KclType > union_types_;
    ::google::protobuf::internal::MapField<KclType_PropertiesEntry_DoNotUse, std::string, ::com::kcl::api::KclType,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        properties_;
    ::google::protobuf::RepeatedPtrField<std::string> required_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Decorator > decorators_;
    ::google::protobuf::internal::MapField<KclType_ExamplesEntry_DoNotUse, std::string, ::com::kcl::api::Example,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        examples_;
    ::google::protobuf::internal::ArenaStringPtr type_;
    ::google::protobuf::internal::ArenaStringPtr default__;
    ::google::protobuf::internal::ArenaStringPtr schema_name_;
    ::google::protobuf::internal::ArenaStringPtr schema_doc_;
    ::google::protobuf::internal::ArenaStringPtr filename_;
    ::google::protobuf::internal::ArenaStringPtr pkg_path_;
    ::google::protobuf::internal::ArenaStringPtr description_;
    ::com::kcl::api::KclType* key_;
    ::com::kcl::api::KclType* item_;
    ::com::kcl::api::KclType* base_schema_;
    ::int32_t line_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class KclType_PropertiesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          KclType_PropertiesEntry_DoNotUse, std::string, ::com::kcl::api::KclType,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      KclType_PropertiesEntry_DoNotUse, std::string, ::com::kcl::api::KclType,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  KclType_PropertiesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR KclType_PropertiesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit KclType_PropertiesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const KclType_PropertiesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const KclType_PropertiesEntry_DoNotUse*>(
        &_KclType_PropertiesEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class GetSchemaTypeMapping_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.GetSchemaTypeMapping_Args) */ {
 public:
  inline GetSchemaTypeMapping_Args() : GetSchemaTypeMapping_Args(nullptr) {}
  ~GetSchemaTypeMapping_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSchemaTypeMapping_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSchemaTypeMapping_Args(const GetSchemaTypeMapping_Args& from) : GetSchemaTypeMapping_Args(nullptr, from) {}
  inline GetSchemaTypeMapping_Args(GetSchemaTypeMapping_Args&& from) noexcept
      : GetSchemaTypeMapping_Args(nullptr, std::move(from)) {}
  inline GetSchemaTypeMapping_Args& operator=(const GetSchemaTypeMapping_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSchemaTypeMapping_Args& operator=(GetSchemaTypeMapping_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSchemaTypeMapping_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSchemaTypeMapping_Args* internal_default_instance() {
    return reinterpret_cast<const GetSchemaTypeMapping_Args*>(
        &_GetSchemaTypeMapping_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 50;
  friend void swap(GetSchemaTypeMapping_Args& a, GetSchemaTypeMapping_Args& b) { a.Swap(&b); }
  inline void Swap(GetSchemaTypeMapping_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSchemaTypeMapping_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSchemaTypeMapping_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetSchemaTypeMapping_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSchemaTypeMapping_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSchemaTypeMapping_Args& from) { GetSchemaTypeMapping_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSchemaTypeMapping_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.GetSchemaTypeMapping_Args"; }

 protected:
  explicit GetSchemaTypeMapping_Args(::google::protobuf::Arena* arena);
  GetSchemaTypeMapping_Args(::google::protobuf::Arena* arena, const GetSchemaTypeMapping_Args& from);
  GetSchemaTypeMapping_Args(::google::protobuf::Arena* arena, GetSchemaTypeMapping_Args&& from) noexcept
      : GetSchemaTypeMapping_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSchemaNameFieldNumber = 2,
    kExecArgsFieldNumber = 1,
  };
  // string schema_name = 2;
  void clear_schema_name() ;
  const std::string& schema_name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_schema_name(Arg_&& arg, Args_... args);
  std::string* mutable_schema_name();
  PROTOBUF_NODISCARD std::string* release_schema_name();
  void set_allocated_schema_name(std::string* value);

  private:
  const std::string& _internal_schema_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_schema_name(
      const std::string& value);
  std::string* _internal_mutable_schema_name();

  public:
  // .com.kcl.api.ExecProgram_Args exec_args = 1;
  bool has_exec_args() const;
  void clear_exec_args() ;
  const ::com::kcl::api::ExecProgram_Args& exec_args() const;
  PROTOBUF_NODISCARD ::com::kcl::api::ExecProgram_Args* release_exec_args();
  ::com::kcl::api::ExecProgram_Args* mutable_exec_args();
  void set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value);
  void unsafe_arena_set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value);
  ::com::kcl::api::ExecProgram_Args* unsafe_arena_release_exec_args();

  private:
  const ::com::kcl::api::ExecProgram_Args& _internal_exec_args() const;
  ::com::kcl::api::ExecProgram_Args* _internal_mutable_exec_args();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.GetSchemaTypeMapping_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      57, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetSchemaTypeMapping_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSchemaTypeMapping_Args& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr schema_name_;
    ::com::kcl::api::ExecProgram_Args* exec_args_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ExecArtifact_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ExecArtifact_Args) */ {
 public:
  inline ExecArtifact_Args() : ExecArtifact_Args(nullptr) {}
  ~ExecArtifact_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExecArtifact_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline ExecArtifact_Args(const ExecArtifact_Args& from) : ExecArtifact_Args(nullptr, from) {}
  inline ExecArtifact_Args(ExecArtifact_Args&& from) noexcept
      : ExecArtifact_Args(nullptr, std::move(from)) {}
  inline ExecArtifact_Args& operator=(const ExecArtifact_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecArtifact_Args& operator=(ExecArtifact_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecArtifact_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const ExecArtifact_Args* internal_default_instance() {
    return reinterpret_cast<const ExecArtifact_Args*>(
        &_ExecArtifact_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 32;
  friend void swap(ExecArtifact_Args& a, ExecArtifact_Args& b) { a.Swap(&b); }
  inline void Swap(ExecArtifact_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecArtifact_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecArtifact_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ExecArtifact_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExecArtifact_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExecArtifact_Args& from) { ExecArtifact_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ExecArtifact_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ExecArtifact_Args"; }

 protected:
  explicit ExecArtifact_Args(::google::protobuf::Arena* arena);
  ExecArtifact_Args(::google::protobuf::Arena* arena, const ExecArtifact_Args& from);
  ExecArtifact_Args(::google::protobuf::Arena* arena, ExecArtifact_Args&& from) noexcept
      : ExecArtifact_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathFieldNumber = 1,
    kExecArgsFieldNumber = 2,
  };
  // string path = 1;
  void clear_path() ;
  const std::string& path() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_path(Arg_&& arg, Args_... args);
  std::string* mutable_path();
  PROTOBUF_NODISCARD std::string* release_path();
  void set_allocated_path(std::string* value);

  private:
  const std::string& _internal_path() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_path(
      const std::string& value);
  std::string* _internal_mutable_path();

  public:
  // .com.kcl.api.ExecProgram_Args exec_args = 2;
  bool has_exec_args() const;
  void clear_exec_args() ;
  const ::com::kcl::api::ExecProgram_Args& exec_args() const;
  PROTOBUF_NODISCARD ::com::kcl::api::ExecProgram_Args* release_exec_args();
  ::com::kcl::api::ExecProgram_Args* mutable_exec_args();
  void set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value);
  void unsafe_arena_set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value);
  ::com::kcl::api::ExecProgram_Args* unsafe_arena_release_exec_args();

  private:
  const ::com::kcl::api::ExecProgram_Args& _internal_exec_args() const;
  ::com::kcl::api::ExecProgram_Args* _internal_mutable_exec_args();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ExecArtifact_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ExecArtifact_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ExecArtifact_Args& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr path_;
    ::com::kcl::api::ExecProgram_Args* exec_args_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Error final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Error) */ {
 public:
  inline Error() : Error(nullptr) {}
  ~Error() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Error(
      ::google::protobuf::internal::ConstantInitialized);

  inline Error(const Error& from) : Error(nullptr, from) {}
  inline Error(Error&& from) noexcept
      : Error(nullptr, std::move(from)) {}
  inline Error& operator=(const Error& from) {
    CopyFrom(from);
    return *this;
  }
  inline Error& operator=(Error&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Error& default_instance() {
    return *internal_default_instance();
  }
  static inline const Error* internal_default_instance() {
    return reinterpret_cast<const Error*>(
        &_Error_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(Error& a, Error& b) { a.Swap(&b); }
  inline void Swap(Error* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Error* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Error* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Error>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Error& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Error& from) { Error::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Error* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Error"; }

 protected:
  explicit Error(::google::protobuf::Arena* arena);
  Error(::google::protobuf::Arena* arena, const Error& from);
  Error(::google::protobuf::Arena* arena, Error&& from) noexcept
      : Error(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessagesFieldNumber = 3,
    kLevelFieldNumber = 1,
    kCodeFieldNumber = 2,
  };
  // repeated .com.kcl.api.Message messages = 3;
  int messages_size() const;
  private:
  int _internal_messages_size() const;

  public:
  void clear_messages() ;
  ::com::kcl::api::Message* mutable_messages(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Message>* mutable_messages();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Message>& _internal_messages() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Message>* _internal_mutable_messages();
  public:
  const ::com::kcl::api::Message& messages(int index) const;
  ::com::kcl::api::Message* add_messages();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Message>& messages() const;
  // string level = 1;
  void clear_level() ;
  const std::string& level() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_level(Arg_&& arg, Args_... args);
  std::string* mutable_level();
  PROTOBUF_NODISCARD std::string* release_level();
  void set_allocated_level(std::string* value);

  private:
  const std::string& _internal_level() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_level(
      const std::string& value);
  std::string* _internal_mutable_level();

  public:
  // string code = 2;
  void clear_code() ;
  const std::string& code() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_code(Arg_&& arg, Args_... args);
  std::string* mutable_code();
  PROTOBUF_NODISCARD std::string* release_code();
  void set_allocated_code(std::string* value);

  private:
  const std::string& _internal_code() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_code(
      const std::string& value);
  std::string* _internal_mutable_code();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Error)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      35, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Error_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Error& from_msg);
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Message > messages_;
    ::google::protobuf::internal::ArenaStringPtr level_;
    ::google::protobuf::internal::ArenaStringPtr code_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class BuildProgram_Args final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.BuildProgram_Args) */ {
 public:
  inline BuildProgram_Args() : BuildProgram_Args(nullptr) {}
  ~BuildProgram_Args() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BuildProgram_Args(
      ::google::protobuf::internal::ConstantInitialized);

  inline BuildProgram_Args(const BuildProgram_Args& from) : BuildProgram_Args(nullptr, from) {}
  inline BuildProgram_Args(BuildProgram_Args&& from) noexcept
      : BuildProgram_Args(nullptr, std::move(from)) {}
  inline BuildProgram_Args& operator=(const BuildProgram_Args& from) {
    CopyFrom(from);
    return *this;
  }
  inline BuildProgram_Args& operator=(BuildProgram_Args&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BuildProgram_Args& default_instance() {
    return *internal_default_instance();
  }
  static inline const BuildProgram_Args* internal_default_instance() {
    return reinterpret_cast<const BuildProgram_Args*>(
        &_BuildProgram_Args_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 30;
  friend void swap(BuildProgram_Args& a, BuildProgram_Args& b) { a.Swap(&b); }
  inline void Swap(BuildProgram_Args* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BuildProgram_Args* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BuildProgram_Args* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<BuildProgram_Args>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BuildProgram_Args& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BuildProgram_Args& from) { BuildProgram_Args::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(BuildProgram_Args* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.BuildProgram_Args"; }

 protected:
  explicit BuildProgram_Args(::google::protobuf::Arena* arena);
  BuildProgram_Args(::google::protobuf::Arena* arena, const BuildProgram_Args& from);
  BuildProgram_Args(::google::protobuf::Arena* arena, BuildProgram_Args&& from) noexcept
      : BuildProgram_Args(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOutputFieldNumber = 2,
    kExecArgsFieldNumber = 1,
  };
  // string output = 2;
  void clear_output() ;
  const std::string& output() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_output(Arg_&& arg, Args_... args);
  std::string* mutable_output();
  PROTOBUF_NODISCARD std::string* release_output();
  void set_allocated_output(std::string* value);

  private:
  const std::string& _internal_output() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_output(
      const std::string& value);
  std::string* _internal_mutable_output();

  public:
  // .com.kcl.api.ExecProgram_Args exec_args = 1;
  bool has_exec_args() const;
  void clear_exec_args() ;
  const ::com::kcl::api::ExecProgram_Args& exec_args() const;
  PROTOBUF_NODISCARD ::com::kcl::api::ExecProgram_Args* release_exec_args();
  ::com::kcl::api::ExecProgram_Args* mutable_exec_args();
  void set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value);
  void unsafe_arena_set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value);
  ::com::kcl::api::ExecProgram_Args* unsafe_arena_release_exec_args();

  private:
  const ::com::kcl::api::ExecProgram_Args& _internal_exec_args() const;
  ::com::kcl::api::ExecProgram_Args* _internal_mutable_exec_args();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.BuildProgram_Args)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      44, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_BuildProgram_Args_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const BuildProgram_Args& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr output_;
    ::com::kcl::api::ExecProgram_Args* exec_args_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class Symbol final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.Symbol) */ {
 public:
  inline Symbol() : Symbol(nullptr) {}
  ~Symbol() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR Symbol(
      ::google::protobuf::internal::ConstantInitialized);

  inline Symbol(const Symbol& from) : Symbol(nullptr, from) {}
  inline Symbol(Symbol&& from) noexcept
      : Symbol(nullptr, std::move(from)) {}
  inline Symbol& operator=(const Symbol& from) {
    CopyFrom(from);
    return *this;
  }
  inline Symbol& operator=(Symbol&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const Symbol& default_instance() {
    return *internal_default_instance();
  }
  static inline const Symbol* internal_default_instance() {
    return reinterpret_cast<const Symbol*>(
        &_Symbol_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 24;
  friend void swap(Symbol& a, Symbol& b) { a.Swap(&b); }
  inline void Swap(Symbol* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(Symbol* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  Symbol* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<Symbol>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const Symbol& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const Symbol& from) { Symbol::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(Symbol* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.Symbol"; }

 protected:
  explicit Symbol(::google::protobuf::Arena* arena);
  Symbol(::google::protobuf::Arena* arena, const Symbol& from);
  Symbol(::google::protobuf::Arena* arena, Symbol&& from) noexcept
      : Symbol(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAttrsFieldNumber = 5,
    kNameFieldNumber = 2,
    kTyFieldNumber = 1,
    kOwnerFieldNumber = 3,
    kDefFieldNumber = 4,
    kIsGlobalFieldNumber = 6,
  };
  // repeated .com.kcl.api.SymbolIndex attrs = 5;
  int attrs_size() const;
  private:
  int _internal_attrs_size() const;

  public:
  void clear_attrs() ;
  ::com::kcl::api::SymbolIndex* mutable_attrs(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>* mutable_attrs();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>& _internal_attrs() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>* _internal_mutable_attrs();
  public:
  const ::com::kcl::api::SymbolIndex& attrs(int index) const;
  ::com::kcl::api::SymbolIndex* add_attrs();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>& attrs() const;
  // string name = 2;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // .com.kcl.api.KclType ty = 1;
  bool has_ty() const;
  void clear_ty() ;
  const ::com::kcl::api::KclType& ty() const;
  PROTOBUF_NODISCARD ::com::kcl::api::KclType* release_ty();
  ::com::kcl::api::KclType* mutable_ty();
  void set_allocated_ty(::com::kcl::api::KclType* value);
  void unsafe_arena_set_allocated_ty(::com::kcl::api::KclType* value);
  ::com::kcl::api::KclType* unsafe_arena_release_ty();

  private:
  const ::com::kcl::api::KclType& _internal_ty() const;
  ::com::kcl::api::KclType* _internal_mutable_ty();

  public:
  // .com.kcl.api.SymbolIndex owner = 3;
  bool has_owner() const;
  void clear_owner() ;
  const ::com::kcl::api::SymbolIndex& owner() const;
  PROTOBUF_NODISCARD ::com::kcl::api::SymbolIndex* release_owner();
  ::com::kcl::api::SymbolIndex* mutable_owner();
  void set_allocated_owner(::com::kcl::api::SymbolIndex* value);
  void unsafe_arena_set_allocated_owner(::com::kcl::api::SymbolIndex* value);
  ::com::kcl::api::SymbolIndex* unsafe_arena_release_owner();

  private:
  const ::com::kcl::api::SymbolIndex& _internal_owner() const;
  ::com::kcl::api::SymbolIndex* _internal_mutable_owner();

  public:
  // .com.kcl.api.SymbolIndex def = 4;
  bool has_def() const;
  void clear_def() ;
  const ::com::kcl::api::SymbolIndex& def() const;
  PROTOBUF_NODISCARD ::com::kcl::api::SymbolIndex* release_def();
  ::com::kcl::api::SymbolIndex* mutable_def();
  void set_allocated_def(::com::kcl::api::SymbolIndex* value);
  void unsafe_arena_set_allocated_def(::com::kcl::api::SymbolIndex* value);
  ::com::kcl::api::SymbolIndex* unsafe_arena_release_def();

  private:
  const ::com::kcl::api::SymbolIndex& _internal_def() const;
  ::com::kcl::api::SymbolIndex* _internal_mutable_def();

  public:
  // bool is_global = 6;
  void clear_is_global() ;
  bool is_global() const;
  void set_is_global(bool value);

  private:
  bool _internal_is_global() const;
  void _internal_set_is_global(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.Symbol)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 6, 4,
      31, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_Symbol_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const Symbol& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::SymbolIndex > attrs_;
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::com::kcl::api::KclType* ty_;
    ::com::kcl::api::SymbolIndex* owner_;
    ::com::kcl::api::SymbolIndex* def_;
    bool is_global_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ParseProgram_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ParseProgram_Result) */ {
 public:
  inline ParseProgram_Result() : ParseProgram_Result(nullptr) {}
  ~ParseProgram_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ParseProgram_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline ParseProgram_Result(const ParseProgram_Result& from) : ParseProgram_Result(nullptr, from) {}
  inline ParseProgram_Result(ParseProgram_Result&& from) noexcept
      : ParseProgram_Result(nullptr, std::move(from)) {}
  inline ParseProgram_Result& operator=(const ParseProgram_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParseProgram_Result& operator=(ParseProgram_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParseProgram_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParseProgram_Result* internal_default_instance() {
    return reinterpret_cast<const ParseProgram_Result*>(
        &_ParseProgram_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 13;
  friend void swap(ParseProgram_Result& a, ParseProgram_Result& b) { a.Swap(&b); }
  inline void Swap(ParseProgram_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParseProgram_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ParseProgram_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ParseProgram_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ParseProgram_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ParseProgram_Result& from) { ParseProgram_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ParseProgram_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ParseProgram_Result"; }

 protected:
  explicit ParseProgram_Result(::google::protobuf::Arena* arena);
  ParseProgram_Result(::google::protobuf::Arena* arena, const ParseProgram_Result& from);
  ParseProgram_Result(::google::protobuf::Arena* arena, ParseProgram_Result&& from) noexcept
      : ParseProgram_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathsFieldNumber = 2,
    kErrorsFieldNumber = 3,
    kAstJsonFieldNumber = 1,
  };
  // repeated string paths = 2;
  int paths_size() const;
  private:
  int _internal_paths_size() const;

  public:
  void clear_paths() ;
  const std::string& paths(int index) const;
  std::string* mutable_paths(int index);
  void set_paths(int index, const std::string& value);
  void set_paths(int index, std::string&& value);
  void set_paths(int index, const char* value);
  void set_paths(int index, const char* value, std::size_t size);
  void set_paths(int index, absl::string_view value);
  std::string* add_paths();
  void add_paths(const std::string& value);
  void add_paths(std::string&& value);
  void add_paths(const char* value);
  void add_paths(const char* value, std::size_t size);
  void add_paths(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_paths();

  public:
  // repeated .com.kcl.api.Error errors = 3;
  int errors_size() const;
  private:
  int _internal_errors_size() const;

  public:
  void clear_errors() ;
  ::com::kcl::api::Error* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* mutable_errors();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& _internal_errors() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* _internal_mutable_errors();
  public:
  const ::com::kcl::api::Error& errors(int index) const;
  ::com::kcl::api::Error* add_errors();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& errors() const;
  // string ast_json = 1;
  void clear_ast_json() ;
  const std::string& ast_json() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ast_json(Arg_&& arg, Args_... args);
  std::string* mutable_ast_json();
  PROTOBUF_NODISCARD std::string* release_ast_json();
  void set_allocated_ast_json(std::string* value);

  private:
  const std::string& _internal_ast_json() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ast_json(
      const std::string& value);
  std::string* _internal_mutable_ast_json();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ParseProgram_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      53, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ParseProgram_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ParseProgram_Result& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> paths_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Error > errors_;
    ::google::protobuf::internal::ArenaStringPtr ast_json_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ParseFile_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ParseFile_Result) */ {
 public:
  inline ParseFile_Result() : ParseFile_Result(nullptr) {}
  ~ParseFile_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ParseFile_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline ParseFile_Result(const ParseFile_Result& from) : ParseFile_Result(nullptr, from) {}
  inline ParseFile_Result(ParseFile_Result&& from) noexcept
      : ParseFile_Result(nullptr, std::move(from)) {}
  inline ParseFile_Result& operator=(const ParseFile_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParseFile_Result& operator=(ParseFile_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParseFile_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParseFile_Result* internal_default_instance() {
    return reinterpret_cast<const ParseFile_Result*>(
        &_ParseFile_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 11;
  friend void swap(ParseFile_Result& a, ParseFile_Result& b) { a.Swap(&b); }
  inline void Swap(ParseFile_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParseFile_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ParseFile_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ParseFile_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ParseFile_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ParseFile_Result& from) { ParseFile_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ParseFile_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ParseFile_Result"; }

 protected:
  explicit ParseFile_Result(::google::protobuf::Arena* arena);
  ParseFile_Result(::google::protobuf::Arena* arena, const ParseFile_Result& from);
  ParseFile_Result(::google::protobuf::Arena* arena, ParseFile_Result&& from) noexcept
      : ParseFile_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kDepsFieldNumber = 2,
    kErrorsFieldNumber = 3,
    kAstJsonFieldNumber = 1,
  };
  // repeated string deps = 2;
  int deps_size() const;
  private:
  int _internal_deps_size() const;

  public:
  void clear_deps() ;
  const std::string& deps(int index) const;
  std::string* mutable_deps(int index);
  void set_deps(int index, const std::string& value);
  void set_deps(int index, std::string&& value);
  void set_deps(int index, const char* value);
  void set_deps(int index, const char* value, std::size_t size);
  void set_deps(int index, absl::string_view value);
  std::string* add_deps();
  void add_deps(const std::string& value);
  void add_deps(std::string&& value);
  void add_deps(const char* value);
  void add_deps(const char* value, std::size_t size);
  void add_deps(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& deps() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_deps();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_deps() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_deps();

  public:
  // repeated .com.kcl.api.Error errors = 3;
  int errors_size() const;
  private:
  int _internal_errors_size() const;

  public:
  void clear_errors() ;
  ::com::kcl::api::Error* mutable_errors(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* mutable_errors();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& _internal_errors() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* _internal_mutable_errors();
  public:
  const ::com::kcl::api::Error& errors(int index) const;
  ::com::kcl::api::Error* add_errors();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& errors() const;
  // string ast_json = 1;
  void clear_ast_json() ;
  const std::string& ast_json() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_ast_json(Arg_&& arg, Args_... args);
  std::string* mutable_ast_json();
  PROTOBUF_NODISCARD std::string* release_ast_json();
  void set_allocated_ast_json(std::string* value);

  private:
  const std::string& _internal_ast_json() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_ast_json(
      const std::string& value);
  std::string* _internal_mutable_ast_json();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.ParseFile_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 1,
      49, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ParseFile_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ParseFile_Result& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> deps_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Error > errors_;
    ::google::protobuf::internal::ArenaStringPtr ast_json_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class OverrideFile_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.OverrideFile_Result) */ {
 public:
  inline OverrideFile_Result() : OverrideFile_Result(nullptr) {}
  ~OverrideFile_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OverrideFile_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline OverrideFile_Result(const OverrideFile_Result& from) : OverrideFile_Result(nullptr, from) {}
  inline OverrideFile_Result(OverrideFile_Result&& from) noexcept
      : OverrideFile_Result(nullptr, std::move(from)) {}
  inline OverrideFile_Result& operator=(const OverrideFile_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline OverrideFile_Result& operator=(OverrideFile_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OverrideFile_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const OverrideFile_Result* internal_default_instance() {
    return reinterpret_cast<const OverrideFile_Result*>(
        &_OverrideFile_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 42;
  friend void swap(OverrideFile_Result& a, OverrideFile_Result& b) { a.Swap(&b); }
  inline void Swap(OverrideFile_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OverrideFile_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OverrideFile_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<OverrideFile_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OverrideFile_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OverrideFile_Result& from) { OverrideFile_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(OverrideFile_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.OverrideFile_Result"; }

 protected:
  explicit OverrideFile_Result(::google::protobuf::Arena* arena);
  OverrideFile_Result(::google::protobuf::Arena* arena, const OverrideFile_Result& from);
  OverrideFile_Result(::google::protobuf::Arena* arena, OverrideFile_Result&& from) noexcept
      : OverrideFile_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParseErrorsFieldNumber = 2,
    kResultFieldNumber = 1,
  };
  // repeated .com.kcl.api.Error parse_errors = 2;
  int parse_errors_size() const;
  private:
  int _internal_parse_errors_size() const;

  public:
  void clear_parse_errors() ;
  ::com::kcl::api::Error* mutable_parse_errors(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* mutable_parse_errors();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& _internal_parse_errors() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* _internal_mutable_parse_errors();
  public:
  const ::com::kcl::api::Error& parse_errors(int index) const;
  ::com::kcl::api::Error* add_parse_errors();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& parse_errors() const;
  // bool result = 1;
  void clear_result() ;
  bool result() const;
  void set_result(bool value);

  private:
  bool _internal_result() const;
  void _internal_set_result(bool value);

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.OverrideFile_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_OverrideFile_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OverrideFile_Result& from_msg);
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Error > parse_errors_;
    bool result_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class ListVariables_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.ListVariables_Result) */ {
 public:
  inline ListVariables_Result() : ListVariables_Result(nullptr) {}
  ~ListVariables_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListVariables_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListVariables_Result(const ListVariables_Result& from) : ListVariables_Result(nullptr, from) {}
  inline ListVariables_Result(ListVariables_Result&& from) noexcept
      : ListVariables_Result(nullptr, std::move(from)) {}
  inline ListVariables_Result& operator=(const ListVariables_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListVariables_Result& operator=(ListVariables_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListVariables_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListVariables_Result* internal_default_instance() {
    return reinterpret_cast<const ListVariables_Result*>(
        &_ListVariables_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 47;
  friend void swap(ListVariables_Result& a, ListVariables_Result& b) { a.Swap(&b); }
  inline void Swap(ListVariables_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListVariables_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListVariables_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<ListVariables_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListVariables_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListVariables_Result& from) { ListVariables_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ListVariables_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.ListVariables_Result"; }

 protected:
  explicit ListVariables_Result(::google::protobuf::Arena* arena);
  ListVariables_Result(::google::protobuf::Arena* arena, const ListVariables_Result& from);
  ListVariables_Result(::google::protobuf::Arena* arena, ListVariables_Result&& from) noexcept
      : ListVariables_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kVariablesFieldNumber = 1,
    kUnsupportedCodesFieldNumber = 2,
    kParseErrorsFieldNumber = 3,
  };
  // map<string, .com.kcl.api.VariableList> variables = 1;
  int variables_size() const;
  private:
  int _internal_variables_size() const;

  public:
  void clear_variables() ;
  const ::google::protobuf::Map<std::string, ::com::kcl::api::VariableList>& variables() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::VariableList>* mutable_variables();

  private:
  const ::google::protobuf::Map<std::string, ::com::kcl::api::VariableList>& _internal_variables() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::VariableList>* _internal_mutable_variables();

  public:
  // repeated string unsupported_codes = 2;
  int unsupported_codes_size() const;
  private:
  int _internal_unsupported_codes_size() const;

  public:
  void clear_unsupported_codes() ;
  const std::string& unsupported_codes(int index) const;
  std::string* mutable_unsupported_codes(int index);
  void set_unsupported_codes(int index, const std::string& value);
  void set_unsupported_codes(int index, std::string&& value);
  void set_unsupported_codes(int index, const char* value);
  void set_unsupported_codes(int index, const char* value, std::size_t size);
  void set_unsupported_codes(int index, absl::string_view value);
  std::string* add_unsupported_codes();
  void add_unsupported_codes(const std::string& value);
  void add_unsupported_codes(std::string&& value);
  void add_unsupported_codes(const char* value);
  void add_unsupported_codes(const char* value, std::size_t size);
  void add_unsupported_codes(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& unsupported_codes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_unsupported_codes();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_unsupported_codes() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_unsupported_codes();

  public:
  // repeated .com.kcl.api.Error parse_errors = 3;
  int parse_errors_size() const;
  private:
  int _internal_parse_errors_size() const;

  public:
  void clear_parse_errors() ;
  ::com::kcl::api::Error* mutable_parse_errors(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* mutable_parse_errors();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& _internal_parse_errors() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* _internal_mutable_parse_errors();
  public:
  const ::com::kcl::api::Error& parse_errors(int index) const;
  ::com::kcl::api::Error* add_parse_errors();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& parse_errors() const;
  // @@protoc_insertion_point(class_scope:com.kcl.api.ListVariables_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 3, 3,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_ListVariables_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListVariables_Result& from_msg);
    ::google::protobuf::internal::MapField<ListVariables_Result_VariablesEntry_DoNotUse, std::string, ::com::kcl::api::VariableList,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        variables_;
    ::google::protobuf::RepeatedPtrField<std::string> unsupported_codes_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Error > parse_errors_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse, std::string, ::com::kcl::api::KclType,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse, std::string, ::com::kcl::api::KclType,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse*>(
        &_GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadPackage_Result_SymbolsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          LoadPackage_Result_SymbolsEntry_DoNotUse, std::string, ::com::kcl::api::Symbol,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      LoadPackage_Result_SymbolsEntry_DoNotUse, std::string, ::com::kcl::api::Symbol,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>;
  LoadPackage_Result_SymbolsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPackage_Result_SymbolsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit LoadPackage_Result_SymbolsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const LoadPackage_Result_SymbolsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const LoadPackage_Result_SymbolsEntry_DoNotUse*>(
        &_LoadPackage_Result_SymbolsEntry_DoNotUse_default_instance_);
  }
const ::google::protobuf::Message::ClassData* GetClassData() const final;
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class GetSchemaTypeMapping_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.GetSchemaTypeMapping_Result) */ {
 public:
  inline GetSchemaTypeMapping_Result() : GetSchemaTypeMapping_Result(nullptr) {}
  ~GetSchemaTypeMapping_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetSchemaTypeMapping_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetSchemaTypeMapping_Result(const GetSchemaTypeMapping_Result& from) : GetSchemaTypeMapping_Result(nullptr, from) {}
  inline GetSchemaTypeMapping_Result(GetSchemaTypeMapping_Result&& from) noexcept
      : GetSchemaTypeMapping_Result(nullptr, std::move(from)) {}
  inline GetSchemaTypeMapping_Result& operator=(const GetSchemaTypeMapping_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetSchemaTypeMapping_Result& operator=(GetSchemaTypeMapping_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetSchemaTypeMapping_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetSchemaTypeMapping_Result* internal_default_instance() {
    return reinterpret_cast<const GetSchemaTypeMapping_Result*>(
        &_GetSchemaTypeMapping_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 52;
  friend void swap(GetSchemaTypeMapping_Result& a, GetSchemaTypeMapping_Result& b) { a.Swap(&b); }
  inline void Swap(GetSchemaTypeMapping_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetSchemaTypeMapping_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetSchemaTypeMapping_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetSchemaTypeMapping_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetSchemaTypeMapping_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetSchemaTypeMapping_Result& from) { GetSchemaTypeMapping_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetSchemaTypeMapping_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.GetSchemaTypeMapping_Result"; }

 protected:
  explicit GetSchemaTypeMapping_Result(::google::protobuf::Arena* arena);
  GetSchemaTypeMapping_Result(::google::protobuf::Arena* arena, const GetSchemaTypeMapping_Result& from);
  GetSchemaTypeMapping_Result(::google::protobuf::Arena* arena, GetSchemaTypeMapping_Result&& from) noexcept
      : GetSchemaTypeMapping_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSchemaTypeMappingFieldNumber = 1,
  };
  // map<string, .com.kcl.api.KclType> schema_type_mapping = 1;
  int schema_type_mapping_size() const;
  private:
  int _internal_schema_type_mapping_size() const;

  public:
  void clear_schema_type_mapping() ;
  const ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>& schema_type_mapping() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>* mutable_schema_type_mapping();

  private:
  const ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>& _internal_schema_type_mapping() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>* _internal_mutable_schema_type_mapping();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.GetSchemaTypeMapping_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 2,
      67, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetSchemaTypeMapping_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetSchemaTypeMapping_Result& from_msg);
    ::google::protobuf::internal::MapField<GetSchemaTypeMapping_Result_SchemaTypeMappingEntry_DoNotUse, std::string, ::com::kcl::api::KclType,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        schema_type_mapping_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};
// -------------------------------------------------------------------

class LoadPackage_Result final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:com.kcl.api.LoadPackage_Result) */ {
 public:
  inline LoadPackage_Result() : LoadPackage_Result(nullptr) {}
  ~LoadPackage_Result() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoadPackage_Result(
      ::google::protobuf::internal::ConstantInitialized);

  inline LoadPackage_Result(const LoadPackage_Result& from) : LoadPackage_Result(nullptr, from) {}
  inline LoadPackage_Result(LoadPackage_Result&& from) noexcept
      : LoadPackage_Result(nullptr, std::move(from)) {}
  inline LoadPackage_Result& operator=(const LoadPackage_Result& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoadPackage_Result& operator=(LoadPackage_Result&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoadPackage_Result& default_instance() {
    return *internal_default_instance();
  }
  static inline const LoadPackage_Result* internal_default_instance() {
    return reinterpret_cast<const LoadPackage_Result*>(
        &_LoadPackage_Result_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 21;
  friend void swap(LoadPackage_Result& a, LoadPackage_Result& b) { a.Swap(&b); }
  inline void Swap(LoadPackage_Result* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoadPackage_Result* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoadPackage_Result* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<LoadPackage_Result>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoadPackage_Result& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoadPackage_Result& from) { LoadPackage_Result::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(LoadPackage_Result* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "com.kcl.api.LoadPackage_Result"; }

 protected:
  explicit LoadPackage_Result(::google::protobuf::Arena* arena);
  LoadPackage_Result(::google::protobuf::Arena* arena, const LoadPackage_Result& from);
  LoadPackage_Result(::google::protobuf::Arena* arena, LoadPackage_Result&& from) noexcept
      : LoadPackage_Result(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPathsFieldNumber = 2,
    kParseErrorsFieldNumber = 3,
    kTypeErrorsFieldNumber = 4,
    kScopesFieldNumber = 5,
    kSymbolsFieldNumber = 6,
    kNodeSymbolMapFieldNumber = 7,
    kSymbolNodeMapFieldNumber = 8,
    kFullyQualifiedNameMapFieldNumber = 9,
    kPkgScopeMapFieldNumber = 10,
    kProgramFieldNumber = 1,
  };
  // repeated string paths = 2;
  int paths_size() const;
  private:
  int _internal_paths_size() const;

  public:
  void clear_paths() ;
  const std::string& paths(int index) const;
  std::string* mutable_paths(int index);
  void set_paths(int index, const std::string& value);
  void set_paths(int index, std::string&& value);
  void set_paths(int index, const char* value);
  void set_paths(int index, const char* value, std::size_t size);
  void set_paths(int index, absl::string_view value);
  std::string* add_paths();
  void add_paths(const std::string& value);
  void add_paths(std::string&& value);
  void add_paths(const char* value);
  void add_paths(const char* value, std::size_t size);
  void add_paths(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_paths();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_paths() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_paths();

  public:
  // repeated .com.kcl.api.Error parse_errors = 3;
  int parse_errors_size() const;
  private:
  int _internal_parse_errors_size() const;

  public:
  void clear_parse_errors() ;
  ::com::kcl::api::Error* mutable_parse_errors(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* mutable_parse_errors();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& _internal_parse_errors() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* _internal_mutable_parse_errors();
  public:
  const ::com::kcl::api::Error& parse_errors(int index) const;
  ::com::kcl::api::Error* add_parse_errors();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& parse_errors() const;
  // repeated .com.kcl.api.Error type_errors = 4;
  int type_errors_size() const;
  private:
  int _internal_type_errors_size() const;

  public:
  void clear_type_errors() ;
  ::com::kcl::api::Error* mutable_type_errors(int index);
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* mutable_type_errors();

  private:
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& _internal_type_errors() const;
  ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* _internal_mutable_type_errors();
  public:
  const ::com::kcl::api::Error& type_errors(int index) const;
  ::com::kcl::api::Error* add_type_errors();
  const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& type_errors() const;
  // map<string, .com.kcl.api.Scope> scopes = 5;
  int scopes_size() const;
  private:
  int _internal_scopes_size() const;

  public:
  void clear_scopes() ;
  const ::google::protobuf::Map<std::string, ::com::kcl::api::Scope>& scopes() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::Scope>* mutable_scopes();

  private:
  const ::google::protobuf::Map<std::string, ::com::kcl::api::Scope>& _internal_scopes() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::Scope>* _internal_mutable_scopes();

  public:
  // map<string, .com.kcl.api.Symbol> symbols = 6;
  int symbols_size() const;
  private:
  int _internal_symbols_size() const;

  public:
  void clear_symbols() ;
  const ::google::protobuf::Map<std::string, ::com::kcl::api::Symbol>& symbols() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::Symbol>* mutable_symbols();

  private:
  const ::google::protobuf::Map<std::string, ::com::kcl::api::Symbol>& _internal_symbols() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::Symbol>* _internal_mutable_symbols();

  public:
  // map<string, .com.kcl.api.SymbolIndex> node_symbol_map = 7;
  int node_symbol_map_size() const;
  private:
  int _internal_node_symbol_map_size() const;

  public:
  void clear_node_symbol_map() ;
  const ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>& node_symbol_map() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>* mutable_node_symbol_map();

  private:
  const ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>& _internal_node_symbol_map() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>* _internal_mutable_node_symbol_map();

  public:
  // map<string, string> symbol_node_map = 8;
  int symbol_node_map_size() const;
  private:
  int _internal_symbol_node_map_size() const;

  public:
  void clear_symbol_node_map() ;
  const ::google::protobuf::Map<std::string, std::string>& symbol_node_map() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_symbol_node_map();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_symbol_node_map() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_symbol_node_map();

  public:
  // map<string, .com.kcl.api.SymbolIndex> fully_qualified_name_map = 9;
  int fully_qualified_name_map_size() const;
  private:
  int _internal_fully_qualified_name_map_size() const;

  public:
  void clear_fully_qualified_name_map() ;
  const ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>& fully_qualified_name_map() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>* mutable_fully_qualified_name_map();

  private:
  const ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>& _internal_fully_qualified_name_map() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>* _internal_mutable_fully_qualified_name_map();

  public:
  // map<string, .com.kcl.api.ScopeIndex> pkg_scope_map = 10;
  int pkg_scope_map_size() const;
  private:
  int _internal_pkg_scope_map_size() const;

  public:
  void clear_pkg_scope_map() ;
  const ::google::protobuf::Map<std::string, ::com::kcl::api::ScopeIndex>& pkg_scope_map() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::ScopeIndex>* mutable_pkg_scope_map();

  private:
  const ::google::protobuf::Map<std::string, ::com::kcl::api::ScopeIndex>& _internal_pkg_scope_map() const;
  ::google::protobuf::Map<std::string, ::com::kcl::api::ScopeIndex>* _internal_mutable_pkg_scope_map();

  public:
  // string program = 1;
  void clear_program() ;
  const std::string& program() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_program(Arg_&& arg, Args_... args);
  std::string* mutable_program();
  PROTOBUF_NODISCARD std::string* release_program();
  void set_allocated_program(std::string* value);

  private:
  const std::string& _internal_program() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_program(
      const std::string& value);
  std::string* _internal_mutable_program();

  public:
  // @@protoc_insertion_point(class_scope:com.kcl.api.LoadPackage_Result)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 10, 13,
      139, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_LoadPackage_Result_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const LoadPackage_Result& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> paths_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Error > parse_errors_;
    ::google::protobuf::RepeatedPtrField< ::com::kcl::api::Error > type_errors_;
    ::google::protobuf::internal::MapField<LoadPackage_Result_ScopesEntry_DoNotUse, std::string, ::com::kcl::api::Scope,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        scopes_;
    ::google::protobuf::internal::MapField<LoadPackage_Result_SymbolsEntry_DoNotUse, std::string, ::com::kcl::api::Symbol,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        symbols_;
    ::google::protobuf::internal::MapField<LoadPackage_Result_NodeSymbolMapEntry_DoNotUse, std::string, ::com::kcl::api::SymbolIndex,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        node_symbol_map_;
    ::google::protobuf::internal::MapField<LoadPackage_Result_SymbolNodeMapEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        symbol_node_map_;
    ::google::protobuf::internal::MapField<LoadPackage_Result_FullyQualifiedNameMapEntry_DoNotUse, std::string, ::com::kcl::api::SymbolIndex,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        fully_qualified_name_map_;
    ::google::protobuf::internal::MapField<LoadPackage_Result_PkgScopeMapEntry_DoNotUse, std::string, ::com::kcl::api::ScopeIndex,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE>
        pkg_scope_map_;
    ::google::protobuf::internal::ArenaStringPtr program_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_spec_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ExternalPkg

// string pkg_name = 1;
inline void ExternalPkg::clear_pkg_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_name_.ClearToEmpty();
}
inline const std::string& ExternalPkg::pkg_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExternalPkg.pkg_name)
  return _internal_pkg_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExternalPkg::set_pkg_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ExternalPkg.pkg_name)
}
inline std::string* ExternalPkg::mutable_pkg_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pkg_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExternalPkg.pkg_name)
  return _s;
}
inline const std::string& ExternalPkg::_internal_pkg_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pkg_name_.Get();
}
inline void ExternalPkg::_internal_set_pkg_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_name_.Set(value, GetArena());
}
inline std::string* ExternalPkg::_internal_mutable_pkg_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pkg_name_.Mutable( GetArena());
}
inline std::string* ExternalPkg::release_pkg_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ExternalPkg.pkg_name)
  return _impl_.pkg_name_.Release();
}
inline void ExternalPkg::set_allocated_pkg_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pkg_name_.IsDefault()) {
          _impl_.pkg_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ExternalPkg.pkg_name)
}

// string pkg_path = 2;
inline void ExternalPkg::clear_pkg_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_path_.ClearToEmpty();
}
inline const std::string& ExternalPkg::pkg_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExternalPkg.pkg_path)
  return _internal_pkg_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExternalPkg::set_pkg_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ExternalPkg.pkg_path)
}
inline std::string* ExternalPkg::mutable_pkg_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pkg_path();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExternalPkg.pkg_path)
  return _s;
}
inline const std::string& ExternalPkg::_internal_pkg_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pkg_path_.Get();
}
inline void ExternalPkg::_internal_set_pkg_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_path_.Set(value, GetArena());
}
inline std::string* ExternalPkg::_internal_mutable_pkg_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pkg_path_.Mutable( GetArena());
}
inline std::string* ExternalPkg::release_pkg_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ExternalPkg.pkg_path)
  return _impl_.pkg_path_.Release();
}
inline void ExternalPkg::set_allocated_pkg_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pkg_path_.IsDefault()) {
          _impl_.pkg_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ExternalPkg.pkg_path)
}

// -------------------------------------------------------------------

// Argument

// string name = 1;
inline void Argument::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Argument::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Argument.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Argument::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Argument.name)
}
inline std::string* Argument::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Argument.name)
  return _s;
}
inline const std::string& Argument::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Argument::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Argument::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Argument::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Argument.name)
  return _impl_.name_.Release();
}
inline void Argument::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Argument.name)
}

// string value = 2;
inline void Argument::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Argument::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Argument.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Argument::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Argument.value)
}
inline std::string* Argument::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Argument.value)
  return _s;
}
inline const std::string& Argument::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Argument::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Argument::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Argument::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Argument.value)
  return _impl_.value_.Release();
}
inline void Argument::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Argument.value)
}

// -------------------------------------------------------------------

// Error

// string level = 1;
inline void Error::clear_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_.ClearToEmpty();
}
inline const std::string& Error::level() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Error.level)
  return _internal_level();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Error::set_level(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Error.level)
}
inline std::string* Error::mutable_level() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_level();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Error.level)
  return _s;
}
inline const std::string& Error::_internal_level() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.level_.Get();
}
inline void Error::_internal_set_level(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_.Set(value, GetArena());
}
inline std::string* Error::_internal_mutable_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.level_.Mutable( GetArena());
}
inline std::string* Error::release_level() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Error.level)
  return _impl_.level_.Release();
}
inline void Error::set_allocated_level(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.level_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.level_.IsDefault()) {
          _impl_.level_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Error.level)
}

// string code = 2;
inline void Error::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& Error::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Error.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Error::set_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Error.code)
}
inline std::string* Error::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Error.code)
  return _s;
}
inline const std::string& Error::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_.Get();
}
inline void Error::_internal_set_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(value, GetArena());
}
inline std::string* Error::_internal_mutable_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* Error::release_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Error.code)
  return _impl_.code_.Release();
}
inline void Error::set_allocated_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Error.code)
}

// repeated .com.kcl.api.Message messages = 3;
inline int Error::_internal_messages_size() const {
  return _internal_messages().size();
}
inline int Error::messages_size() const {
  return _internal_messages_size();
}
inline void Error::clear_messages() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.messages_.Clear();
}
inline ::com::kcl::api::Message* Error::mutable_messages(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Error.messages)
  return _internal_mutable_messages()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Message>* Error::mutable_messages()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Error.messages)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_messages();
}
inline const ::com::kcl::api::Message& Error::messages(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Error.messages)
  return _internal_messages().Get(index);
}
inline ::com::kcl::api::Message* Error::add_messages() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Message* _add = _internal_mutable_messages()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.Error.messages)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Message>& Error::messages() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Error.messages)
  return _internal_messages();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Message>&
Error::_internal_messages() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.messages_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Message>*
Error::_internal_mutable_messages() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.messages_;
}

// -------------------------------------------------------------------

// Message

// string msg = 1;
inline void Message::clear_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.ClearToEmpty();
}
inline const std::string& Message::msg() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Message.msg)
  return _internal_msg();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Message::set_msg(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Message.msg)
}
inline std::string* Message::mutable_msg() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_msg();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Message.msg)
  return _s;
}
inline const std::string& Message::_internal_msg() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.msg_.Get();
}
inline void Message::_internal_set_msg(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.Set(value, GetArena());
}
inline std::string* Message::_internal_mutable_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.msg_.Mutable( GetArena());
}
inline std::string* Message::release_msg() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Message.msg)
  return _impl_.msg_.Release();
}
inline void Message::set_allocated_msg(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.msg_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.msg_.IsDefault()) {
          _impl_.msg_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Message.msg)
}

// .com.kcl.api.Position pos = 2;
inline bool Message::has_pos() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.pos_ != nullptr);
  return value;
}
inline void Message::clear_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ != nullptr) _impl_.pos_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::Position& Message::_internal_pos() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::Position* p = _impl_.pos_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::Position&>(::com::kcl::api::_Position_default_instance_);
}
inline const ::com::kcl::api::Position& Message::pos() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Message.pos)
  return _internal_pos();
}
inline void Message::unsafe_arena_set_allocated_pos(::com::kcl::api::Position* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.pos_);
  }
  _impl_.pos_ = reinterpret_cast<::com::kcl::api::Position*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.Message.pos)
}
inline ::com::kcl::api::Position* Message::release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::Position* released = _impl_.pos_;
  _impl_.pos_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::Position* Message::unsafe_arena_release_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Message.pos)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::Position* temp = _impl_.pos_;
  _impl_.pos_ = nullptr;
  return temp;
}
inline ::com::kcl::api::Position* Message::_internal_mutable_pos() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.pos_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::Position>(GetArena());
    _impl_.pos_ = reinterpret_cast<::com::kcl::api::Position*>(p);
  }
  return _impl_.pos_;
}
inline ::com::kcl::api::Position* Message::mutable_pos() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::Position* _msg = _internal_mutable_pos();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Message.pos)
  return _msg;
}
inline void Message::set_allocated_pos(::com::kcl::api::Position* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.pos_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.pos_ = reinterpret_cast<::com::kcl::api::Position*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Message.pos)
}

// -------------------------------------------------------------------

// Ping_Args

// string value = 1;
inline void Ping_Args::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Ping_Args::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Ping_Args.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Ping_Args::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Ping_Args.value)
}
inline std::string* Ping_Args::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Ping_Args.value)
  return _s;
}
inline const std::string& Ping_Args::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Ping_Args::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Ping_Args::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Ping_Args::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Ping_Args.value)
  return _impl_.value_.Release();
}
inline void Ping_Args::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Ping_Args.value)
}

// -------------------------------------------------------------------

// Ping_Result

// string value = 1;
inline void Ping_Result::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Ping_Result::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Ping_Result.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Ping_Result::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Ping_Result.value)
}
inline std::string* Ping_Result::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Ping_Result.value)
  return _s;
}
inline const std::string& Ping_Result::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Ping_Result::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Ping_Result::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Ping_Result::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Ping_Result.value)
  return _impl_.value_.Release();
}
inline void Ping_Result::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Ping_Result.value)
}

// -------------------------------------------------------------------

// GetVersion_Args

// -------------------------------------------------------------------

// GetVersion_Result

// string version = 1;
inline void GetVersion_Result::clear_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.ClearToEmpty();
}
inline const std::string& GetVersion_Result::version() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.GetVersion_Result.version)
  return _internal_version();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVersion_Result::set_version(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.GetVersion_Result.version)
}
inline std::string* GetVersion_Result::mutable_version() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.GetVersion_Result.version)
  return _s;
}
inline const std::string& GetVersion_Result::_internal_version() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_.Get();
}
inline void GetVersion_Result::_internal_set_version(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.Set(value, GetArena());
}
inline std::string* GetVersion_Result::_internal_mutable_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_.Mutable( GetArena());
}
inline std::string* GetVersion_Result::release_version() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.GetVersion_Result.version)
  return _impl_.version_.Release();
}
inline void GetVersion_Result::set_allocated_version(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_.IsDefault()) {
          _impl_.version_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.GetVersion_Result.version)
}

// string checksum = 2;
inline void GetVersion_Result::clear_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.ClearToEmpty();
}
inline const std::string& GetVersion_Result::checksum() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.GetVersion_Result.checksum)
  return _internal_checksum();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVersion_Result::set_checksum(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.GetVersion_Result.checksum)
}
inline std::string* GetVersion_Result::mutable_checksum() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_checksum();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.GetVersion_Result.checksum)
  return _s;
}
inline const std::string& GetVersion_Result::_internal_checksum() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.checksum_.Get();
}
inline void GetVersion_Result::_internal_set_checksum(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.Set(value, GetArena());
}
inline std::string* GetVersion_Result::_internal_mutable_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.checksum_.Mutable( GetArena());
}
inline std::string* GetVersion_Result::release_checksum() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.GetVersion_Result.checksum)
  return _impl_.checksum_.Release();
}
inline void GetVersion_Result::set_allocated_checksum(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.checksum_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.checksum_.IsDefault()) {
          _impl_.checksum_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.GetVersion_Result.checksum)
}

// string git_sha = 3;
inline void GetVersion_Result::clear_git_sha() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.git_sha_.ClearToEmpty();
}
inline const std::string& GetVersion_Result::git_sha() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.GetVersion_Result.git_sha)
  return _internal_git_sha();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVersion_Result::set_git_sha(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.git_sha_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.GetVersion_Result.git_sha)
}
inline std::string* GetVersion_Result::mutable_git_sha() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_git_sha();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.GetVersion_Result.git_sha)
  return _s;
}
inline const std::string& GetVersion_Result::_internal_git_sha() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.git_sha_.Get();
}
inline void GetVersion_Result::_internal_set_git_sha(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.git_sha_.Set(value, GetArena());
}
inline std::string* GetVersion_Result::_internal_mutable_git_sha() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.git_sha_.Mutable( GetArena());
}
inline std::string* GetVersion_Result::release_git_sha() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.GetVersion_Result.git_sha)
  return _impl_.git_sha_.Release();
}
inline void GetVersion_Result::set_allocated_git_sha(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.git_sha_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.git_sha_.IsDefault()) {
          _impl_.git_sha_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.GetVersion_Result.git_sha)
}

// string version_info = 4;
inline void GetVersion_Result::clear_version_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_info_.ClearToEmpty();
}
inline const std::string& GetVersion_Result::version_info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.GetVersion_Result.version_info)
  return _internal_version_info();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetVersion_Result::set_version_info(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_info_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.GetVersion_Result.version_info)
}
inline std::string* GetVersion_Result::mutable_version_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_version_info();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.GetVersion_Result.version_info)
  return _s;
}
inline const std::string& GetVersion_Result::_internal_version_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.version_info_.Get();
}
inline void GetVersion_Result::_internal_set_version_info(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_info_.Set(value, GetArena());
}
inline std::string* GetVersion_Result::_internal_mutable_version_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.version_info_.Mutable( GetArena());
}
inline std::string* GetVersion_Result::release_version_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.GetVersion_Result.version_info)
  return _impl_.version_info_.Release();
}
inline void GetVersion_Result::set_allocated_version_info(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.version_info_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.version_info_.IsDefault()) {
          _impl_.version_info_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.GetVersion_Result.version_info)
}

// -------------------------------------------------------------------

// ListMethod_Args

// -------------------------------------------------------------------

// ListMethod_Result

// repeated string method_name_list = 1;
inline int ListMethod_Result::_internal_method_name_list_size() const {
  return _internal_method_name_list().size();
}
inline int ListMethod_Result::method_name_list_size() const {
  return _internal_method_name_list_size();
}
inline void ListMethod_Result::clear_method_name_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.method_name_list_.Clear();
}
inline std::string* ListMethod_Result::add_method_name_list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_method_name_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ListMethod_Result.method_name_list)
  return _s;
}
inline const std::string& ListMethod_Result::method_name_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListMethod_Result.method_name_list)
  return _internal_method_name_list().Get(index);
}
inline std::string* ListMethod_Result::mutable_method_name_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListMethod_Result.method_name_list)
  return _internal_mutable_method_name_list()->Mutable(index);
}
inline void ListMethod_Result::set_method_name_list(int index, const std::string& value) {
  _internal_mutable_method_name_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ListMethod_Result.method_name_list)
}
inline void ListMethod_Result::set_method_name_list(int index, std::string&& value) {
  _internal_mutable_method_name_list()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ListMethod_Result.method_name_list)
}
inline void ListMethod_Result::set_method_name_list(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_method_name_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ListMethod_Result.method_name_list)
}
inline void ListMethod_Result::set_method_name_list(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_method_name_list()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ListMethod_Result.method_name_list)
}
inline void ListMethod_Result::set_method_name_list(int index, absl::string_view value) {
  _internal_mutable_method_name_list()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ListMethod_Result.method_name_list)
}
inline void ListMethod_Result::add_method_name_list(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_method_name_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ListMethod_Result.method_name_list)
}
inline void ListMethod_Result::add_method_name_list(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_method_name_list()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ListMethod_Result.method_name_list)
}
inline void ListMethod_Result::add_method_name_list(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_method_name_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ListMethod_Result.method_name_list)
}
inline void ListMethod_Result::add_method_name_list(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_method_name_list()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ListMethod_Result.method_name_list)
}
inline void ListMethod_Result::add_method_name_list(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_method_name_list()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ListMethod_Result.method_name_list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListMethod_Result::method_name_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ListMethod_Result.method_name_list)
  return _internal_method_name_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListMethod_Result::mutable_method_name_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ListMethod_Result.method_name_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_method_name_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListMethod_Result::_internal_method_name_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.method_name_list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListMethod_Result::_internal_mutable_method_name_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.method_name_list_;
}

// -------------------------------------------------------------------

// ParseFile_Args

// string path = 1;
inline void ParseFile_Args::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& ParseFile_Args::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseFile_Args.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ParseFile_Args::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseFile_Args.path)
}
inline std::string* ParseFile_Args::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseFile_Args.path)
  return _s;
}
inline const std::string& ParseFile_Args::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void ParseFile_Args::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* ParseFile_Args::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* ParseFile_Args::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ParseFile_Args.path)
  return _impl_.path_.Release();
}
inline void ParseFile_Args::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_.IsDefault()) {
          _impl_.path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ParseFile_Args.path)
}

// string source = 2;
inline void ParseFile_Args::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.ClearToEmpty();
}
inline const std::string& ParseFile_Args::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseFile_Args.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ParseFile_Args::set_source(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseFile_Args.source)
}
inline std::string* ParseFile_Args::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseFile_Args.source)
  return _s;
}
inline const std::string& ParseFile_Args::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_.Get();
}
inline void ParseFile_Args::_internal_set_source(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.Set(value, GetArena());
}
inline std::string* ParseFile_Args::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_.Mutable( GetArena());
}
inline std::string* ParseFile_Args::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ParseFile_Args.source)
  return _impl_.source_.Release();
}
inline void ParseFile_Args::set_allocated_source(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_.IsDefault()) {
          _impl_.source_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ParseFile_Args.source)
}

// repeated .com.kcl.api.ExternalPkg external_pkgs = 3;
inline int ParseFile_Args::_internal_external_pkgs_size() const {
  return _internal_external_pkgs().size();
}
inline int ParseFile_Args::external_pkgs_size() const {
  return _internal_external_pkgs_size();
}
inline void ParseFile_Args::clear_external_pkgs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_pkgs_.Clear();
}
inline ::com::kcl::api::ExternalPkg* ParseFile_Args::mutable_external_pkgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseFile_Args.external_pkgs)
  return _internal_mutable_external_pkgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* ParseFile_Args::mutable_external_pkgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ParseFile_Args.external_pkgs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_external_pkgs();
}
inline const ::com::kcl::api::ExternalPkg& ParseFile_Args::external_pkgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseFile_Args.external_pkgs)
  return _internal_external_pkgs().Get(index);
}
inline ::com::kcl::api::ExternalPkg* ParseFile_Args::add_external_pkgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::ExternalPkg* _add = _internal_mutable_external_pkgs()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseFile_Args.external_pkgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& ParseFile_Args::external_pkgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ParseFile_Args.external_pkgs)
  return _internal_external_pkgs();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>&
ParseFile_Args::_internal_external_pkgs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_pkgs_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>*
ParseFile_Args::_internal_mutable_external_pkgs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.external_pkgs_;
}

// -------------------------------------------------------------------

// ParseFile_Result

// string ast_json = 1;
inline void ParseFile_Result::clear_ast_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ast_json_.ClearToEmpty();
}
inline const std::string& ParseFile_Result::ast_json() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseFile_Result.ast_json)
  return _internal_ast_json();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ParseFile_Result::set_ast_json(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ast_json_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseFile_Result.ast_json)
}
inline std::string* ParseFile_Result::mutable_ast_json() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ast_json();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseFile_Result.ast_json)
  return _s;
}
inline const std::string& ParseFile_Result::_internal_ast_json() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ast_json_.Get();
}
inline void ParseFile_Result::_internal_set_ast_json(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ast_json_.Set(value, GetArena());
}
inline std::string* ParseFile_Result::_internal_mutable_ast_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ast_json_.Mutable( GetArena());
}
inline std::string* ParseFile_Result::release_ast_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ParseFile_Result.ast_json)
  return _impl_.ast_json_.Release();
}
inline void ParseFile_Result::set_allocated_ast_json(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ast_json_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ast_json_.IsDefault()) {
          _impl_.ast_json_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ParseFile_Result.ast_json)
}

// repeated string deps = 2;
inline int ParseFile_Result::_internal_deps_size() const {
  return _internal_deps().size();
}
inline int ParseFile_Result::deps_size() const {
  return _internal_deps_size();
}
inline void ParseFile_Result::clear_deps() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.deps_.Clear();
}
inline std::string* ParseFile_Result::add_deps()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_deps()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ParseFile_Result.deps)
  return _s;
}
inline const std::string& ParseFile_Result::deps(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseFile_Result.deps)
  return _internal_deps().Get(index);
}
inline std::string* ParseFile_Result::mutable_deps(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseFile_Result.deps)
  return _internal_mutable_deps()->Mutable(index);
}
inline void ParseFile_Result::set_deps(int index, const std::string& value) {
  _internal_mutable_deps()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseFile_Result.deps)
}
inline void ParseFile_Result::set_deps(int index, std::string&& value) {
  _internal_mutable_deps()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseFile_Result.deps)
}
inline void ParseFile_Result::set_deps(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_deps()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ParseFile_Result.deps)
}
inline void ParseFile_Result::set_deps(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_deps()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ParseFile_Result.deps)
}
inline void ParseFile_Result::set_deps(int index, absl::string_view value) {
  _internal_mutable_deps()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ParseFile_Result.deps)
}
inline void ParseFile_Result::add_deps(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deps()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseFile_Result.deps)
}
inline void ParseFile_Result::add_deps(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deps()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseFile_Result.deps)
}
inline void ParseFile_Result::add_deps(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deps()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ParseFile_Result.deps)
}
inline void ParseFile_Result::add_deps(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deps()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ParseFile_Result.deps)
}
inline void ParseFile_Result::add_deps(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_deps()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ParseFile_Result.deps)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ParseFile_Result::deps() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ParseFile_Result.deps)
  return _internal_deps();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ParseFile_Result::mutable_deps() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ParseFile_Result.deps)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_deps();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ParseFile_Result::_internal_deps() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.deps_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ParseFile_Result::_internal_mutable_deps() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.deps_;
}

// repeated .com.kcl.api.Error errors = 3;
inline int ParseFile_Result::_internal_errors_size() const {
  return _internal_errors().size();
}
inline int ParseFile_Result::errors_size() const {
  return _internal_errors_size();
}
inline void ParseFile_Result::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
inline ::com::kcl::api::Error* ParseFile_Result::mutable_errors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseFile_Result.errors)
  return _internal_mutable_errors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* ParseFile_Result::mutable_errors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ParseFile_Result.errors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_errors();
}
inline const ::com::kcl::api::Error& ParseFile_Result::errors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseFile_Result.errors)
  return _internal_errors().Get(index);
}
inline ::com::kcl::api::Error* ParseFile_Result::add_errors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Error* _add = _internal_mutable_errors()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseFile_Result.errors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& ParseFile_Result::errors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ParseFile_Result.errors)
  return _internal_errors();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>&
ParseFile_Result::_internal_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>*
ParseFile_Result::_internal_mutable_errors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.errors_;
}

// -------------------------------------------------------------------

// ParseProgram_Args

// repeated string paths = 1;
inline int ParseProgram_Args::_internal_paths_size() const {
  return _internal_paths().size();
}
inline int ParseProgram_Args::paths_size() const {
  return _internal_paths_size();
}
inline void ParseProgram_Args::clear_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paths_.Clear();
}
inline std::string* ParseProgram_Args::add_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ParseProgram_Args.paths)
  return _s;
}
inline const std::string& ParseProgram_Args::paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseProgram_Args.paths)
  return _internal_paths().Get(index);
}
inline std::string* ParseProgram_Args::mutable_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseProgram_Args.paths)
  return _internal_mutable_paths()->Mutable(index);
}
inline void ParseProgram_Args::set_paths(int index, const std::string& value) {
  _internal_mutable_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseProgram_Args.paths)
}
inline void ParseProgram_Args::set_paths(int index, std::string&& value) {
  _internal_mutable_paths()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseProgram_Args.paths)
}
inline void ParseProgram_Args::set_paths(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ParseProgram_Args.paths)
}
inline void ParseProgram_Args::set_paths(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_paths()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ParseProgram_Args.paths)
}
inline void ParseProgram_Args::set_paths(int index, absl::string_view value) {
  _internal_mutable_paths()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ParseProgram_Args.paths)
}
inline void ParseProgram_Args::add_paths(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseProgram_Args.paths)
}
inline void ParseProgram_Args::add_paths(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseProgram_Args.paths)
}
inline void ParseProgram_Args::add_paths(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ParseProgram_Args.paths)
}
inline void ParseProgram_Args::add_paths(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ParseProgram_Args.paths)
}
inline void ParseProgram_Args::add_paths(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ParseProgram_Args.paths)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ParseProgram_Args::paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ParseProgram_Args.paths)
  return _internal_paths();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ParseProgram_Args::mutable_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ParseProgram_Args.paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_paths();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ParseProgram_Args::_internal_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paths_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ParseProgram_Args::_internal_mutable_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.paths_;
}

// repeated string sources = 2;
inline int ParseProgram_Args::_internal_sources_size() const {
  return _internal_sources().size();
}
inline int ParseProgram_Args::sources_size() const {
  return _internal_sources_size();
}
inline void ParseProgram_Args::clear_sources() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sources_.Clear();
}
inline std::string* ParseProgram_Args::add_sources()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_sources()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ParseProgram_Args.sources)
  return _s;
}
inline const std::string& ParseProgram_Args::sources(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseProgram_Args.sources)
  return _internal_sources().Get(index);
}
inline std::string* ParseProgram_Args::mutable_sources(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseProgram_Args.sources)
  return _internal_mutable_sources()->Mutable(index);
}
inline void ParseProgram_Args::set_sources(int index, const std::string& value) {
  _internal_mutable_sources()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseProgram_Args.sources)
}
inline void ParseProgram_Args::set_sources(int index, std::string&& value) {
  _internal_mutable_sources()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseProgram_Args.sources)
}
inline void ParseProgram_Args::set_sources(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_sources()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ParseProgram_Args.sources)
}
inline void ParseProgram_Args::set_sources(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_sources()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ParseProgram_Args.sources)
}
inline void ParseProgram_Args::set_sources(int index, absl::string_view value) {
  _internal_mutable_sources()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ParseProgram_Args.sources)
}
inline void ParseProgram_Args::add_sources(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_sources()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseProgram_Args.sources)
}
inline void ParseProgram_Args::add_sources(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_sources()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseProgram_Args.sources)
}
inline void ParseProgram_Args::add_sources(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_sources()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ParseProgram_Args.sources)
}
inline void ParseProgram_Args::add_sources(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_sources()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ParseProgram_Args.sources)
}
inline void ParseProgram_Args::add_sources(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_sources()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ParseProgram_Args.sources)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ParseProgram_Args::sources() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ParseProgram_Args.sources)
  return _internal_sources();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ParseProgram_Args::mutable_sources() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ParseProgram_Args.sources)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_sources();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ParseProgram_Args::_internal_sources() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sources_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ParseProgram_Args::_internal_mutable_sources() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.sources_;
}

// repeated .com.kcl.api.ExternalPkg external_pkgs = 3;
inline int ParseProgram_Args::_internal_external_pkgs_size() const {
  return _internal_external_pkgs().size();
}
inline int ParseProgram_Args::external_pkgs_size() const {
  return _internal_external_pkgs_size();
}
inline void ParseProgram_Args::clear_external_pkgs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_pkgs_.Clear();
}
inline ::com::kcl::api::ExternalPkg* ParseProgram_Args::mutable_external_pkgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseProgram_Args.external_pkgs)
  return _internal_mutable_external_pkgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* ParseProgram_Args::mutable_external_pkgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ParseProgram_Args.external_pkgs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_external_pkgs();
}
inline const ::com::kcl::api::ExternalPkg& ParseProgram_Args::external_pkgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseProgram_Args.external_pkgs)
  return _internal_external_pkgs().Get(index);
}
inline ::com::kcl::api::ExternalPkg* ParseProgram_Args::add_external_pkgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::ExternalPkg* _add = _internal_mutable_external_pkgs()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseProgram_Args.external_pkgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& ParseProgram_Args::external_pkgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ParseProgram_Args.external_pkgs)
  return _internal_external_pkgs();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>&
ParseProgram_Args::_internal_external_pkgs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_pkgs_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>*
ParseProgram_Args::_internal_mutable_external_pkgs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.external_pkgs_;
}

// -------------------------------------------------------------------

// ParseProgram_Result

// string ast_json = 1;
inline void ParseProgram_Result::clear_ast_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ast_json_.ClearToEmpty();
}
inline const std::string& ParseProgram_Result::ast_json() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseProgram_Result.ast_json)
  return _internal_ast_json();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ParseProgram_Result::set_ast_json(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ast_json_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseProgram_Result.ast_json)
}
inline std::string* ParseProgram_Result::mutable_ast_json() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_ast_json();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseProgram_Result.ast_json)
  return _s;
}
inline const std::string& ParseProgram_Result::_internal_ast_json() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ast_json_.Get();
}
inline void ParseProgram_Result::_internal_set_ast_json(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ast_json_.Set(value, GetArena());
}
inline std::string* ParseProgram_Result::_internal_mutable_ast_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.ast_json_.Mutable( GetArena());
}
inline std::string* ParseProgram_Result::release_ast_json() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ParseProgram_Result.ast_json)
  return _impl_.ast_json_.Release();
}
inline void ParseProgram_Result::set_allocated_ast_json(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ast_json_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.ast_json_.IsDefault()) {
          _impl_.ast_json_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ParseProgram_Result.ast_json)
}

// repeated string paths = 2;
inline int ParseProgram_Result::_internal_paths_size() const {
  return _internal_paths().size();
}
inline int ParseProgram_Result::paths_size() const {
  return _internal_paths_size();
}
inline void ParseProgram_Result::clear_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paths_.Clear();
}
inline std::string* ParseProgram_Result::add_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ParseProgram_Result.paths)
  return _s;
}
inline const std::string& ParseProgram_Result::paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseProgram_Result.paths)
  return _internal_paths().Get(index);
}
inline std::string* ParseProgram_Result::mutable_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseProgram_Result.paths)
  return _internal_mutable_paths()->Mutable(index);
}
inline void ParseProgram_Result::set_paths(int index, const std::string& value) {
  _internal_mutable_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseProgram_Result.paths)
}
inline void ParseProgram_Result::set_paths(int index, std::string&& value) {
  _internal_mutable_paths()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ParseProgram_Result.paths)
}
inline void ParseProgram_Result::set_paths(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ParseProgram_Result.paths)
}
inline void ParseProgram_Result::set_paths(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_paths()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ParseProgram_Result.paths)
}
inline void ParseProgram_Result::set_paths(int index, absl::string_view value) {
  _internal_mutable_paths()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ParseProgram_Result.paths)
}
inline void ParseProgram_Result::add_paths(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseProgram_Result.paths)
}
inline void ParseProgram_Result::add_paths(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseProgram_Result.paths)
}
inline void ParseProgram_Result::add_paths(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ParseProgram_Result.paths)
}
inline void ParseProgram_Result::add_paths(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ParseProgram_Result.paths)
}
inline void ParseProgram_Result::add_paths(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ParseProgram_Result.paths)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ParseProgram_Result::paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ParseProgram_Result.paths)
  return _internal_paths();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ParseProgram_Result::mutable_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ParseProgram_Result.paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_paths();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ParseProgram_Result::_internal_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paths_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ParseProgram_Result::_internal_mutable_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.paths_;
}

// repeated .com.kcl.api.Error errors = 3;
inline int ParseProgram_Result::_internal_errors_size() const {
  return _internal_errors().size();
}
inline int ParseProgram_Result::errors_size() const {
  return _internal_errors_size();
}
inline void ParseProgram_Result::clear_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.errors_.Clear();
}
inline ::com::kcl::api::Error* ParseProgram_Result::mutable_errors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ParseProgram_Result.errors)
  return _internal_mutable_errors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* ParseProgram_Result::mutable_errors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ParseProgram_Result.errors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_errors();
}
inline const ::com::kcl::api::Error& ParseProgram_Result::errors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ParseProgram_Result.errors)
  return _internal_errors().Get(index);
}
inline ::com::kcl::api::Error* ParseProgram_Result::add_errors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Error* _add = _internal_mutable_errors()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.ParseProgram_Result.errors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& ParseProgram_Result::errors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ParseProgram_Result.errors)
  return _internal_errors();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>&
ParseProgram_Result::_internal_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.errors_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>*
ParseProgram_Result::_internal_mutable_errors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.errors_;
}

// -------------------------------------------------------------------

// LoadPackage_Args

// .com.kcl.api.ParseProgram_Args parse_args = 1;
inline bool LoadPackage_Args::has_parse_args() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parse_args_ != nullptr);
  return value;
}
inline void LoadPackage_Args::clear_parse_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parse_args_ != nullptr) _impl_.parse_args_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::ParseProgram_Args& LoadPackage_Args::_internal_parse_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::ParseProgram_Args* p = _impl_.parse_args_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::ParseProgram_Args&>(::com::kcl::api::_ParseProgram_Args_default_instance_);
}
inline const ::com::kcl::api::ParseProgram_Args& LoadPackage_Args::parse_args() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadPackage_Args.parse_args)
  return _internal_parse_args();
}
inline void LoadPackage_Args::unsafe_arena_set_allocated_parse_args(::com::kcl::api::ParseProgram_Args* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parse_args_);
  }
  _impl_.parse_args_ = reinterpret_cast<::com::kcl::api::ParseProgram_Args*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.LoadPackage_Args.parse_args)
}
inline ::com::kcl::api::ParseProgram_Args* LoadPackage_Args::release_parse_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ParseProgram_Args* released = _impl_.parse_args_;
  _impl_.parse_args_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::ParseProgram_Args* LoadPackage_Args::unsafe_arena_release_parse_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.LoadPackage_Args.parse_args)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ParseProgram_Args* temp = _impl_.parse_args_;
  _impl_.parse_args_ = nullptr;
  return temp;
}
inline ::com::kcl::api::ParseProgram_Args* LoadPackage_Args::_internal_mutable_parse_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parse_args_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::ParseProgram_Args>(GetArena());
    _impl_.parse_args_ = reinterpret_cast<::com::kcl::api::ParseProgram_Args*>(p);
  }
  return _impl_.parse_args_;
}
inline ::com::kcl::api::ParseProgram_Args* LoadPackage_Args::mutable_parse_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::ParseProgram_Args* _msg = _internal_mutable_parse_args();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LoadPackage_Args.parse_args)
  return _msg;
}
inline void LoadPackage_Args::set_allocated_parse_args(::com::kcl::api::ParseProgram_Args* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.parse_args_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.parse_args_ = reinterpret_cast<::com::kcl::api::ParseProgram_Args*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.LoadPackage_Args.parse_args)
}

// bool resolve_ast = 2;
inline void LoadPackage_Args::clear_resolve_ast() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolve_ast_ = false;
}
inline bool LoadPackage_Args::resolve_ast() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadPackage_Args.resolve_ast)
  return _internal_resolve_ast();
}
inline void LoadPackage_Args::set_resolve_ast(bool value) {
  _internal_set_resolve_ast(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.LoadPackage_Args.resolve_ast)
}
inline bool LoadPackage_Args::_internal_resolve_ast() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.resolve_ast_;
}
inline void LoadPackage_Args::_internal_set_resolve_ast(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.resolve_ast_ = value;
}

// bool load_builtin = 3;
inline void LoadPackage_Args::clear_load_builtin() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.load_builtin_ = false;
}
inline bool LoadPackage_Args::load_builtin() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadPackage_Args.load_builtin)
  return _internal_load_builtin();
}
inline void LoadPackage_Args::set_load_builtin(bool value) {
  _internal_set_load_builtin(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.LoadPackage_Args.load_builtin)
}
inline bool LoadPackage_Args::_internal_load_builtin() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.load_builtin_;
}
inline void LoadPackage_Args::_internal_set_load_builtin(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.load_builtin_ = value;
}

// bool with_ast_index = 4;
inline void LoadPackage_Args::clear_with_ast_index() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.with_ast_index_ = false;
}
inline bool LoadPackage_Args::with_ast_index() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadPackage_Args.with_ast_index)
  return _internal_with_ast_index();
}
inline void LoadPackage_Args::set_with_ast_index(bool value) {
  _internal_set_with_ast_index(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.LoadPackage_Args.with_ast_index)
}
inline bool LoadPackage_Args::_internal_with_ast_index() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.with_ast_index_;
}
inline void LoadPackage_Args::_internal_set_with_ast_index(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.with_ast_index_ = value;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// LoadPackage_Result

// string program = 1;
inline void LoadPackage_Result::clear_program() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.program_.ClearToEmpty();
}
inline const std::string& LoadPackage_Result::program() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadPackage_Result.program)
  return _internal_program();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoadPackage_Result::set_program(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.program_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.LoadPackage_Result.program)
}
inline std::string* LoadPackage_Result::mutable_program() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_program();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LoadPackage_Result.program)
  return _s;
}
inline const std::string& LoadPackage_Result::_internal_program() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.program_.Get();
}
inline void LoadPackage_Result::_internal_set_program(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.program_.Set(value, GetArena());
}
inline std::string* LoadPackage_Result::_internal_mutable_program() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.program_.Mutable( GetArena());
}
inline std::string* LoadPackage_Result::release_program() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.LoadPackage_Result.program)
  return _impl_.program_.Release();
}
inline void LoadPackage_Result::set_allocated_program(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.program_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.program_.IsDefault()) {
          _impl_.program_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.LoadPackage_Result.program)
}

// repeated string paths = 2;
inline int LoadPackage_Result::_internal_paths_size() const {
  return _internal_paths().size();
}
inline int LoadPackage_Result::paths_size() const {
  return _internal_paths_size();
}
inline void LoadPackage_Result::clear_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paths_.Clear();
}
inline std::string* LoadPackage_Result::add_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.LoadPackage_Result.paths)
  return _s;
}
inline const std::string& LoadPackage_Result::paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadPackage_Result.paths)
  return _internal_paths().Get(index);
}
inline std::string* LoadPackage_Result::mutable_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LoadPackage_Result.paths)
  return _internal_mutable_paths()->Mutable(index);
}
inline void LoadPackage_Result::set_paths(int index, const std::string& value) {
  _internal_mutable_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.LoadPackage_Result.paths)
}
inline void LoadPackage_Result::set_paths(int index, std::string&& value) {
  _internal_mutable_paths()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.LoadPackage_Result.paths)
}
inline void LoadPackage_Result::set_paths(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.LoadPackage_Result.paths)
}
inline void LoadPackage_Result::set_paths(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_paths()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.LoadPackage_Result.paths)
}
inline void LoadPackage_Result::set_paths(int index, absl::string_view value) {
  _internal_mutable_paths()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.LoadPackage_Result.paths)
}
inline void LoadPackage_Result::add_paths(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.LoadPackage_Result.paths)
}
inline void LoadPackage_Result::add_paths(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.LoadPackage_Result.paths)
}
inline void LoadPackage_Result::add_paths(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.LoadPackage_Result.paths)
}
inline void LoadPackage_Result::add_paths(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.LoadPackage_Result.paths)
}
inline void LoadPackage_Result::add_paths(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.LoadPackage_Result.paths)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LoadPackage_Result::paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.LoadPackage_Result.paths)
  return _internal_paths();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LoadPackage_Result::mutable_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.LoadPackage_Result.paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_paths();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LoadPackage_Result::_internal_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paths_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LoadPackage_Result::_internal_mutable_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.paths_;
}

// repeated .com.kcl.api.Error parse_errors = 3;
inline int LoadPackage_Result::_internal_parse_errors_size() const {
  return _internal_parse_errors().size();
}
inline int LoadPackage_Result::parse_errors_size() const {
  return _internal_parse_errors_size();
}
inline void LoadPackage_Result::clear_parse_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parse_errors_.Clear();
}
inline ::com::kcl::api::Error* LoadPackage_Result::mutable_parse_errors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LoadPackage_Result.parse_errors)
  return _internal_mutable_parse_errors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* LoadPackage_Result::mutable_parse_errors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.LoadPackage_Result.parse_errors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_parse_errors();
}
inline const ::com::kcl::api::Error& LoadPackage_Result::parse_errors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadPackage_Result.parse_errors)
  return _internal_parse_errors().Get(index);
}
inline ::com::kcl::api::Error* LoadPackage_Result::add_parse_errors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Error* _add = _internal_mutable_parse_errors()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.LoadPackage_Result.parse_errors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& LoadPackage_Result::parse_errors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.LoadPackage_Result.parse_errors)
  return _internal_parse_errors();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>&
LoadPackage_Result::_internal_parse_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parse_errors_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>*
LoadPackage_Result::_internal_mutable_parse_errors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.parse_errors_;
}

// repeated .com.kcl.api.Error type_errors = 4;
inline int LoadPackage_Result::_internal_type_errors_size() const {
  return _internal_type_errors().size();
}
inline int LoadPackage_Result::type_errors_size() const {
  return _internal_type_errors_size();
}
inline void LoadPackage_Result::clear_type_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_errors_.Clear();
}
inline ::com::kcl::api::Error* LoadPackage_Result::mutable_type_errors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LoadPackage_Result.type_errors)
  return _internal_mutable_type_errors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* LoadPackage_Result::mutable_type_errors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.LoadPackage_Result.type_errors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_type_errors();
}
inline const ::com::kcl::api::Error& LoadPackage_Result::type_errors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadPackage_Result.type_errors)
  return _internal_type_errors().Get(index);
}
inline ::com::kcl::api::Error* LoadPackage_Result::add_type_errors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Error* _add = _internal_mutable_type_errors()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.LoadPackage_Result.type_errors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& LoadPackage_Result::type_errors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.LoadPackage_Result.type_errors)
  return _internal_type_errors();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>&
LoadPackage_Result::_internal_type_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_errors_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>*
LoadPackage_Result::_internal_mutable_type_errors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.type_errors_;
}

// map<string, .com.kcl.api.Scope> scopes = 5;
inline int LoadPackage_Result::_internal_scopes_size() const {
  return _internal_scopes().size();
}
inline int LoadPackage_Result::scopes_size() const {
  return _internal_scopes_size();
}
inline void LoadPackage_Result::clear_scopes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scopes_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::Scope>& LoadPackage_Result::_internal_scopes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scopes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::Scope>& LoadPackage_Result::scopes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.LoadPackage_Result.scopes)
  return _internal_scopes();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::Scope>* LoadPackage_Result::_internal_mutable_scopes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.scopes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::Scope>* LoadPackage_Result::mutable_scopes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.LoadPackage_Result.scopes)
  return _internal_mutable_scopes();
}

// map<string, .com.kcl.api.Symbol> symbols = 6;
inline int LoadPackage_Result::_internal_symbols_size() const {
  return _internal_symbols().size();
}
inline int LoadPackage_Result::symbols_size() const {
  return _internal_symbols_size();
}
inline void LoadPackage_Result::clear_symbols() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbols_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::Symbol>& LoadPackage_Result::_internal_symbols() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.symbols_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::Symbol>& LoadPackage_Result::symbols() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.LoadPackage_Result.symbols)
  return _internal_symbols();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::Symbol>* LoadPackage_Result::_internal_mutable_symbols() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.symbols_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::Symbol>* LoadPackage_Result::mutable_symbols() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.LoadPackage_Result.symbols)
  return _internal_mutable_symbols();
}

// map<string, .com.kcl.api.SymbolIndex> node_symbol_map = 7;
inline int LoadPackage_Result::_internal_node_symbol_map_size() const {
  return _internal_node_symbol_map().size();
}
inline int LoadPackage_Result::node_symbol_map_size() const {
  return _internal_node_symbol_map_size();
}
inline void LoadPackage_Result::clear_node_symbol_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.node_symbol_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>& LoadPackage_Result::_internal_node_symbol_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.node_symbol_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>& LoadPackage_Result::node_symbol_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.LoadPackage_Result.node_symbol_map)
  return _internal_node_symbol_map();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>* LoadPackage_Result::_internal_mutable_node_symbol_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.node_symbol_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>* LoadPackage_Result::mutable_node_symbol_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.LoadPackage_Result.node_symbol_map)
  return _internal_mutable_node_symbol_map();
}

// map<string, string> symbol_node_map = 8;
inline int LoadPackage_Result::_internal_symbol_node_map_size() const {
  return _internal_symbol_node_map().size();
}
inline int LoadPackage_Result::symbol_node_map_size() const {
  return _internal_symbol_node_map_size();
}
inline void LoadPackage_Result::clear_symbol_node_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_node_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& LoadPackage_Result::_internal_symbol_node_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.symbol_node_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& LoadPackage_Result::symbol_node_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.LoadPackage_Result.symbol_node_map)
  return _internal_symbol_node_map();
}
inline ::google::protobuf::Map<std::string, std::string>* LoadPackage_Result::_internal_mutable_symbol_node_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.symbol_node_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* LoadPackage_Result::mutable_symbol_node_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.LoadPackage_Result.symbol_node_map)
  return _internal_mutable_symbol_node_map();
}

// map<string, .com.kcl.api.SymbolIndex> fully_qualified_name_map = 9;
inline int LoadPackage_Result::_internal_fully_qualified_name_map_size() const {
  return _internal_fully_qualified_name_map().size();
}
inline int LoadPackage_Result::fully_qualified_name_map_size() const {
  return _internal_fully_qualified_name_map_size();
}
inline void LoadPackage_Result::clear_fully_qualified_name_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fully_qualified_name_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>& LoadPackage_Result::_internal_fully_qualified_name_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fully_qualified_name_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>& LoadPackage_Result::fully_qualified_name_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.LoadPackage_Result.fully_qualified_name_map)
  return _internal_fully_qualified_name_map();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>* LoadPackage_Result::_internal_mutable_fully_qualified_name_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.fully_qualified_name_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::SymbolIndex>* LoadPackage_Result::mutable_fully_qualified_name_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.LoadPackage_Result.fully_qualified_name_map)
  return _internal_mutable_fully_qualified_name_map();
}

// map<string, .com.kcl.api.ScopeIndex> pkg_scope_map = 10;
inline int LoadPackage_Result::_internal_pkg_scope_map_size() const {
  return _internal_pkg_scope_map().size();
}
inline int LoadPackage_Result::pkg_scope_map_size() const {
  return _internal_pkg_scope_map_size();
}
inline void LoadPackage_Result::clear_pkg_scope_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_scope_map_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::ScopeIndex>& LoadPackage_Result::_internal_pkg_scope_map() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pkg_scope_map_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::ScopeIndex>& LoadPackage_Result::pkg_scope_map() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.LoadPackage_Result.pkg_scope_map)
  return _internal_pkg_scope_map();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::ScopeIndex>* LoadPackage_Result::_internal_mutable_pkg_scope_map() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pkg_scope_map_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::ScopeIndex>* LoadPackage_Result::mutable_pkg_scope_map() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.LoadPackage_Result.pkg_scope_map)
  return _internal_mutable_pkg_scope_map();
}

// -------------------------------------------------------------------

// ListOptions_Result

// repeated .com.kcl.api.OptionHelp options = 2;
inline int ListOptions_Result::_internal_options_size() const {
  return _internal_options().size();
}
inline int ListOptions_Result::options_size() const {
  return _internal_options_size();
}
inline void ListOptions_Result::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.options_.Clear();
}
inline ::com::kcl::api::OptionHelp* ListOptions_Result::mutable_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListOptions_Result.options)
  return _internal_mutable_options()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::OptionHelp>* ListOptions_Result::mutable_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ListOptions_Result.options)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_options();
}
inline const ::com::kcl::api::OptionHelp& ListOptions_Result::options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListOptions_Result.options)
  return _internal_options().Get(index);
}
inline ::com::kcl::api::OptionHelp* ListOptions_Result::add_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::OptionHelp* _add = _internal_mutable_options()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.ListOptions_Result.options)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::OptionHelp>& ListOptions_Result::options() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ListOptions_Result.options)
  return _internal_options();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::OptionHelp>&
ListOptions_Result::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.options_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::OptionHelp>*
ListOptions_Result::_internal_mutable_options() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.options_;
}

// -------------------------------------------------------------------

// OptionHelp

// string name = 1;
inline void OptionHelp::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& OptionHelp::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.OptionHelp.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OptionHelp::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.OptionHelp.name)
}
inline std::string* OptionHelp::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.OptionHelp.name)
  return _s;
}
inline const std::string& OptionHelp::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void OptionHelp::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* OptionHelp::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* OptionHelp::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.OptionHelp.name)
  return _impl_.name_.Release();
}
inline void OptionHelp::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.OptionHelp.name)
}

// string type = 2;
inline void OptionHelp::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& OptionHelp::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.OptionHelp.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OptionHelp::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.OptionHelp.type)
}
inline std::string* OptionHelp::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.OptionHelp.type)
  return _s;
}
inline const std::string& OptionHelp::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void OptionHelp::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* OptionHelp::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* OptionHelp::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.OptionHelp.type)
  return _impl_.type_.Release();
}
inline void OptionHelp::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.OptionHelp.type)
}

// bool required = 3;
inline void OptionHelp::clear_required() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_ = false;
}
inline bool OptionHelp::required() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.OptionHelp.required)
  return _internal_required();
}
inline void OptionHelp::set_required(bool value) {
  _internal_set_required(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.OptionHelp.required)
}
inline bool OptionHelp::_internal_required() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_;
}
inline void OptionHelp::_internal_set_required(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_ = value;
}

// string default_value = 4;
inline void OptionHelp::clear_default_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_value_.ClearToEmpty();
}
inline const std::string& OptionHelp::default_value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.OptionHelp.default_value)
  return _internal_default_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OptionHelp::set_default_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.OptionHelp.default_value)
}
inline std::string* OptionHelp::mutable_default_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_default_value();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.OptionHelp.default_value)
  return _s;
}
inline const std::string& OptionHelp::_internal_default_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default_value_.Get();
}
inline void OptionHelp::_internal_set_default_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_value_.Set(value, GetArena());
}
inline std::string* OptionHelp::_internal_mutable_default_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.default_value_.Mutable( GetArena());
}
inline std::string* OptionHelp::release_default_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.OptionHelp.default_value)
  return _impl_.default_value_.Release();
}
inline void OptionHelp::set_allocated_default_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default_value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.default_value_.IsDefault()) {
          _impl_.default_value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.OptionHelp.default_value)
}

// string help = 5;
inline void OptionHelp::clear_help() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.help_.ClearToEmpty();
}
inline const std::string& OptionHelp::help() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.OptionHelp.help)
  return _internal_help();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OptionHelp::set_help(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.help_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.OptionHelp.help)
}
inline std::string* OptionHelp::mutable_help() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_help();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.OptionHelp.help)
  return _s;
}
inline const std::string& OptionHelp::_internal_help() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.help_.Get();
}
inline void OptionHelp::_internal_set_help(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.help_.Set(value, GetArena());
}
inline std::string* OptionHelp::_internal_mutable_help() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.help_.Mutable( GetArena());
}
inline std::string* OptionHelp::release_help() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.OptionHelp.help)
  return _impl_.help_.Release();
}
inline void OptionHelp::set_allocated_help(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.help_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.help_.IsDefault()) {
          _impl_.help_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.OptionHelp.help)
}

// -------------------------------------------------------------------

// Symbol

// .com.kcl.api.KclType ty = 1;
inline bool Symbol::has_ty() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ty_ != nullptr);
  return value;
}
inline void Symbol::clear_ty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ty_ != nullptr) _impl_.ty_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::KclType& Symbol::_internal_ty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::KclType* p = _impl_.ty_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::KclType&>(::com::kcl::api::_KclType_default_instance_);
}
inline const ::com::kcl::api::KclType& Symbol::ty() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Symbol.ty)
  return _internal_ty();
}
inline void Symbol::unsafe_arena_set_allocated_ty(::com::kcl::api::KclType* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ty_);
  }
  _impl_.ty_ = reinterpret_cast<::com::kcl::api::KclType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.Symbol.ty)
}
inline ::com::kcl::api::KclType* Symbol::release_ty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::KclType* released = _impl_.ty_;
  _impl_.ty_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::KclType* Symbol::unsafe_arena_release_ty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Symbol.ty)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::KclType* temp = _impl_.ty_;
  _impl_.ty_ = nullptr;
  return temp;
}
inline ::com::kcl::api::KclType* Symbol::_internal_mutable_ty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ty_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::KclType>(GetArena());
    _impl_.ty_ = reinterpret_cast<::com::kcl::api::KclType*>(p);
  }
  return _impl_.ty_;
}
inline ::com::kcl::api::KclType* Symbol::mutable_ty() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::KclType* _msg = _internal_mutable_ty();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Symbol.ty)
  return _msg;
}
inline void Symbol::set_allocated_ty(::com::kcl::api::KclType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.ty_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.ty_ = reinterpret_cast<::com::kcl::api::KclType*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Symbol.ty)
}

// string name = 2;
inline void Symbol::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Symbol::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Symbol.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Symbol::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Symbol.name)
}
inline std::string* Symbol::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Symbol.name)
  return _s;
}
inline const std::string& Symbol::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Symbol::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Symbol::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Symbol::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Symbol.name)
  return _impl_.name_.Release();
}
inline void Symbol::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Symbol.name)
}

// .com.kcl.api.SymbolIndex owner = 3;
inline bool Symbol::has_owner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.owner_ != nullptr);
  return value;
}
inline void Symbol::clear_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.owner_ != nullptr) _impl_.owner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::com::kcl::api::SymbolIndex& Symbol::_internal_owner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::SymbolIndex* p = _impl_.owner_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::SymbolIndex&>(::com::kcl::api::_SymbolIndex_default_instance_);
}
inline const ::com::kcl::api::SymbolIndex& Symbol::owner() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Symbol.owner)
  return _internal_owner();
}
inline void Symbol::unsafe_arena_set_allocated_owner(::com::kcl::api::SymbolIndex* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.owner_);
  }
  _impl_.owner_ = reinterpret_cast<::com::kcl::api::SymbolIndex*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.Symbol.owner)
}
inline ::com::kcl::api::SymbolIndex* Symbol::release_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::com::kcl::api::SymbolIndex* released = _impl_.owner_;
  _impl_.owner_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::SymbolIndex* Symbol::unsafe_arena_release_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Symbol.owner)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::com::kcl::api::SymbolIndex* temp = _impl_.owner_;
  _impl_.owner_ = nullptr;
  return temp;
}
inline ::com::kcl::api::SymbolIndex* Symbol::_internal_mutable_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.owner_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::SymbolIndex>(GetArena());
    _impl_.owner_ = reinterpret_cast<::com::kcl::api::SymbolIndex*>(p);
  }
  return _impl_.owner_;
}
inline ::com::kcl::api::SymbolIndex* Symbol::mutable_owner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::com::kcl::api::SymbolIndex* _msg = _internal_mutable_owner();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Symbol.owner)
  return _msg;
}
inline void Symbol::set_allocated_owner(::com::kcl::api::SymbolIndex* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.owner_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.owner_ = reinterpret_cast<::com::kcl::api::SymbolIndex*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Symbol.owner)
}

// .com.kcl.api.SymbolIndex def = 4;
inline bool Symbol::has_def() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.def_ != nullptr);
  return value;
}
inline void Symbol::clear_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.def_ != nullptr) _impl_.def_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::com::kcl::api::SymbolIndex& Symbol::_internal_def() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::SymbolIndex* p = _impl_.def_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::SymbolIndex&>(::com::kcl::api::_SymbolIndex_default_instance_);
}
inline const ::com::kcl::api::SymbolIndex& Symbol::def() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Symbol.def)
  return _internal_def();
}
inline void Symbol::unsafe_arena_set_allocated_def(::com::kcl::api::SymbolIndex* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.def_);
  }
  _impl_.def_ = reinterpret_cast<::com::kcl::api::SymbolIndex*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.Symbol.def)
}
inline ::com::kcl::api::SymbolIndex* Symbol::release_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::com::kcl::api::SymbolIndex* released = _impl_.def_;
  _impl_.def_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::SymbolIndex* Symbol::unsafe_arena_release_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Symbol.def)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::com::kcl::api::SymbolIndex* temp = _impl_.def_;
  _impl_.def_ = nullptr;
  return temp;
}
inline ::com::kcl::api::SymbolIndex* Symbol::_internal_mutable_def() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.def_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::SymbolIndex>(GetArena());
    _impl_.def_ = reinterpret_cast<::com::kcl::api::SymbolIndex*>(p);
  }
  return _impl_.def_;
}
inline ::com::kcl::api::SymbolIndex* Symbol::mutable_def() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::com::kcl::api::SymbolIndex* _msg = _internal_mutable_def();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Symbol.def)
  return _msg;
}
inline void Symbol::set_allocated_def(::com::kcl::api::SymbolIndex* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.def_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.def_ = reinterpret_cast<::com::kcl::api::SymbolIndex*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Symbol.def)
}

// repeated .com.kcl.api.SymbolIndex attrs = 5;
inline int Symbol::_internal_attrs_size() const {
  return _internal_attrs().size();
}
inline int Symbol::attrs_size() const {
  return _internal_attrs_size();
}
inline void Symbol::clear_attrs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attrs_.Clear();
}
inline ::com::kcl::api::SymbolIndex* Symbol::mutable_attrs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Symbol.attrs)
  return _internal_mutable_attrs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>* Symbol::mutable_attrs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Symbol.attrs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_attrs();
}
inline const ::com::kcl::api::SymbolIndex& Symbol::attrs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Symbol.attrs)
  return _internal_attrs().Get(index);
}
inline ::com::kcl::api::SymbolIndex* Symbol::add_attrs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::SymbolIndex* _add = _internal_mutable_attrs()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.Symbol.attrs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>& Symbol::attrs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Symbol.attrs)
  return _internal_attrs();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>&
Symbol::_internal_attrs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attrs_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>*
Symbol::_internal_mutable_attrs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.attrs_;
}

// bool is_global = 6;
inline void Symbol::clear_is_global() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_global_ = false;
}
inline bool Symbol::is_global() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.Symbol.is_global)
  return _internal_is_global();
}
inline void Symbol::set_is_global(bool value) {
  _internal_set_is_global(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.Symbol.is_global)
}
inline bool Symbol::_internal_is_global() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.is_global_;
}
inline void Symbol::_internal_set_is_global(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.is_global_ = value;
}

// -------------------------------------------------------------------

// Scope

// string kind = 1;
inline void Scope::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.ClearToEmpty();
}
inline const std::string& Scope::kind() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Scope.kind)
  return _internal_kind();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Scope::set_kind(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Scope.kind)
}
inline std::string* Scope::mutable_kind() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kind();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Scope.kind)
  return _s;
}
inline const std::string& Scope::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kind_.Get();
}
inline void Scope::_internal_set_kind(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.Set(value, GetArena());
}
inline std::string* Scope::_internal_mutable_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.kind_.Mutable( GetArena());
}
inline std::string* Scope::release_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Scope.kind)
  return _impl_.kind_.Release();
}
inline void Scope::set_allocated_kind(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.kind_.IsDefault()) {
          _impl_.kind_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Scope.kind)
}

// .com.kcl.api.ScopeIndex parent = 2;
inline bool Scope::has_parent() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.parent_ != nullptr);
  return value;
}
inline void Scope::clear_parent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parent_ != nullptr) _impl_.parent_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::ScopeIndex& Scope::_internal_parent() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::ScopeIndex* p = _impl_.parent_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::ScopeIndex&>(::com::kcl::api::_ScopeIndex_default_instance_);
}
inline const ::com::kcl::api::ScopeIndex& Scope::parent() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Scope.parent)
  return _internal_parent();
}
inline void Scope::unsafe_arena_set_allocated_parent(::com::kcl::api::ScopeIndex* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.parent_);
  }
  _impl_.parent_ = reinterpret_cast<::com::kcl::api::ScopeIndex*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.Scope.parent)
}
inline ::com::kcl::api::ScopeIndex* Scope::release_parent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ScopeIndex* released = _impl_.parent_;
  _impl_.parent_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::ScopeIndex* Scope::unsafe_arena_release_parent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Scope.parent)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ScopeIndex* temp = _impl_.parent_;
  _impl_.parent_ = nullptr;
  return temp;
}
inline ::com::kcl::api::ScopeIndex* Scope::_internal_mutable_parent() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.parent_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::ScopeIndex>(GetArena());
    _impl_.parent_ = reinterpret_cast<::com::kcl::api::ScopeIndex*>(p);
  }
  return _impl_.parent_;
}
inline ::com::kcl::api::ScopeIndex* Scope::mutable_parent() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::ScopeIndex* _msg = _internal_mutable_parent();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Scope.parent)
  return _msg;
}
inline void Scope::set_allocated_parent(::com::kcl::api::ScopeIndex* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.parent_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.parent_ = reinterpret_cast<::com::kcl::api::ScopeIndex*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Scope.parent)
}

// .com.kcl.api.SymbolIndex owner = 3;
inline bool Scope::has_owner() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.owner_ != nullptr);
  return value;
}
inline void Scope::clear_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.owner_ != nullptr) _impl_.owner_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::com::kcl::api::SymbolIndex& Scope::_internal_owner() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::SymbolIndex* p = _impl_.owner_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::SymbolIndex&>(::com::kcl::api::_SymbolIndex_default_instance_);
}
inline const ::com::kcl::api::SymbolIndex& Scope::owner() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Scope.owner)
  return _internal_owner();
}
inline void Scope::unsafe_arena_set_allocated_owner(::com::kcl::api::SymbolIndex* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.owner_);
  }
  _impl_.owner_ = reinterpret_cast<::com::kcl::api::SymbolIndex*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.Scope.owner)
}
inline ::com::kcl::api::SymbolIndex* Scope::release_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::com::kcl::api::SymbolIndex* released = _impl_.owner_;
  _impl_.owner_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::SymbolIndex* Scope::unsafe_arena_release_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Scope.owner)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::com::kcl::api::SymbolIndex* temp = _impl_.owner_;
  _impl_.owner_ = nullptr;
  return temp;
}
inline ::com::kcl::api::SymbolIndex* Scope::_internal_mutable_owner() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.owner_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::SymbolIndex>(GetArena());
    _impl_.owner_ = reinterpret_cast<::com::kcl::api::SymbolIndex*>(p);
  }
  return _impl_.owner_;
}
inline ::com::kcl::api::SymbolIndex* Scope::mutable_owner() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::com::kcl::api::SymbolIndex* _msg = _internal_mutable_owner();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Scope.owner)
  return _msg;
}
inline void Scope::set_allocated_owner(::com::kcl::api::SymbolIndex* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.owner_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.owner_ = reinterpret_cast<::com::kcl::api::SymbolIndex*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Scope.owner)
}

// repeated .com.kcl.api.ScopeIndex children = 4;
inline int Scope::_internal_children_size() const {
  return _internal_children().size();
}
inline int Scope::children_size() const {
  return _internal_children_size();
}
inline void Scope::clear_children() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.children_.Clear();
}
inline ::com::kcl::api::ScopeIndex* Scope::mutable_children(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Scope.children)
  return _internal_mutable_children()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ScopeIndex>* Scope::mutable_children()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Scope.children)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_children();
}
inline const ::com::kcl::api::ScopeIndex& Scope::children(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Scope.children)
  return _internal_children().Get(index);
}
inline ::com::kcl::api::ScopeIndex* Scope::add_children() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::ScopeIndex* _add = _internal_mutable_children()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.Scope.children)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ScopeIndex>& Scope::children() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Scope.children)
  return _internal_children();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ScopeIndex>&
Scope::_internal_children() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.children_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ScopeIndex>*
Scope::_internal_mutable_children() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.children_;
}

// repeated .com.kcl.api.SymbolIndex defs = 5;
inline int Scope::_internal_defs_size() const {
  return _internal_defs().size();
}
inline int Scope::defs_size() const {
  return _internal_defs_size();
}
inline void Scope::clear_defs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.defs_.Clear();
}
inline ::com::kcl::api::SymbolIndex* Scope::mutable_defs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Scope.defs)
  return _internal_mutable_defs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>* Scope::mutable_defs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Scope.defs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_defs();
}
inline const ::com::kcl::api::SymbolIndex& Scope::defs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Scope.defs)
  return _internal_defs().Get(index);
}
inline ::com::kcl::api::SymbolIndex* Scope::add_defs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::SymbolIndex* _add = _internal_mutable_defs()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.Scope.defs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>& Scope::defs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Scope.defs)
  return _internal_defs();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>&
Scope::_internal_defs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.defs_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::SymbolIndex>*
Scope::_internal_mutable_defs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.defs_;
}

// -------------------------------------------------------------------

// SymbolIndex

// uint64 i = 1;
inline void SymbolIndex::clear_i() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_ = ::uint64_t{0u};
}
inline ::uint64_t SymbolIndex::i() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.SymbolIndex.i)
  return _internal_i();
}
inline void SymbolIndex::set_i(::uint64_t value) {
  _internal_set_i(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.SymbolIndex.i)
}
inline ::uint64_t SymbolIndex::_internal_i() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i_;
}
inline void SymbolIndex::_internal_set_i(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_ = value;
}

// uint64 g = 2;
inline void SymbolIndex::clear_g() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.g_ = ::uint64_t{0u};
}
inline ::uint64_t SymbolIndex::g() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.SymbolIndex.g)
  return _internal_g();
}
inline void SymbolIndex::set_g(::uint64_t value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.SymbolIndex.g)
}
inline ::uint64_t SymbolIndex::_internal_g() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.g_;
}
inline void SymbolIndex::_internal_set_g(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.g_ = value;
}

// string kind = 3;
inline void SymbolIndex::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.ClearToEmpty();
}
inline const std::string& SymbolIndex::kind() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.SymbolIndex.kind)
  return _internal_kind();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void SymbolIndex::set_kind(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.SymbolIndex.kind)
}
inline std::string* SymbolIndex::mutable_kind() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kind();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.SymbolIndex.kind)
  return _s;
}
inline const std::string& SymbolIndex::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kind_.Get();
}
inline void SymbolIndex::_internal_set_kind(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.Set(value, GetArena());
}
inline std::string* SymbolIndex::_internal_mutable_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.kind_.Mutable( GetArena());
}
inline std::string* SymbolIndex::release_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.SymbolIndex.kind)
  return _impl_.kind_.Release();
}
inline void SymbolIndex::set_allocated_kind(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.kind_.IsDefault()) {
          _impl_.kind_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.SymbolIndex.kind)
}

// -------------------------------------------------------------------

// ScopeIndex

// uint64 i = 1;
inline void ScopeIndex::clear_i() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_ = ::uint64_t{0u};
}
inline ::uint64_t ScopeIndex::i() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ScopeIndex.i)
  return _internal_i();
}
inline void ScopeIndex::set_i(::uint64_t value) {
  _internal_set_i(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ScopeIndex.i)
}
inline ::uint64_t ScopeIndex::_internal_i() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.i_;
}
inline void ScopeIndex::_internal_set_i(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.i_ = value;
}

// uint64 g = 2;
inline void ScopeIndex::clear_g() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.g_ = ::uint64_t{0u};
}
inline ::uint64_t ScopeIndex::g() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ScopeIndex.g)
  return _internal_g();
}
inline void ScopeIndex::set_g(::uint64_t value) {
  _internal_set_g(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ScopeIndex.g)
}
inline ::uint64_t ScopeIndex::_internal_g() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.g_;
}
inline void ScopeIndex::_internal_set_g(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.g_ = value;
}

// string kind = 3;
inline void ScopeIndex::clear_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.ClearToEmpty();
}
inline const std::string& ScopeIndex::kind() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ScopeIndex.kind)
  return _internal_kind();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ScopeIndex::set_kind(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ScopeIndex.kind)
}
inline std::string* ScopeIndex::mutable_kind() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_kind();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ScopeIndex.kind)
  return _s;
}
inline const std::string& ScopeIndex::_internal_kind() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kind_.Get();
}
inline void ScopeIndex::_internal_set_kind(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.Set(value, GetArena());
}
inline std::string* ScopeIndex::_internal_mutable_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.kind_.Mutable( GetArena());
}
inline std::string* ScopeIndex::release_kind() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ScopeIndex.kind)
  return _impl_.kind_.Release();
}
inline void ScopeIndex::set_allocated_kind(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kind_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.kind_.IsDefault()) {
          _impl_.kind_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ScopeIndex.kind)
}

// -------------------------------------------------------------------

// ExecProgram_Args

// string work_dir = 1;
inline void ExecProgram_Args::clear_work_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.ClearToEmpty();
}
inline const std::string& ExecProgram_Args::work_dir() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.work_dir)
  return _internal_work_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExecProgram_Args::set_work_dir(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.work_dir)
}
inline std::string* ExecProgram_Args::mutable_work_dir() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_work_dir();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Args.work_dir)
  return _s;
}
inline const std::string& ExecProgram_Args::_internal_work_dir() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.work_dir_.Get();
}
inline void ExecProgram_Args::_internal_set_work_dir(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.Set(value, GetArena());
}
inline std::string* ExecProgram_Args::_internal_mutable_work_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.work_dir_.Mutable( GetArena());
}
inline std::string* ExecProgram_Args::release_work_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ExecProgram_Args.work_dir)
  return _impl_.work_dir_.Release();
}
inline void ExecProgram_Args::set_allocated_work_dir(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.work_dir_.IsDefault()) {
          _impl_.work_dir_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ExecProgram_Args.work_dir)
}

// repeated string k_filename_list = 2;
inline int ExecProgram_Args::_internal_k_filename_list_size() const {
  return _internal_k_filename_list().size();
}
inline int ExecProgram_Args::k_filename_list_size() const {
  return _internal_k_filename_list_size();
}
inline void ExecProgram_Args::clear_k_filename_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_filename_list_.Clear();
}
inline std::string* ExecProgram_Args::add_k_filename_list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_k_filename_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ExecProgram_Args.k_filename_list)
  return _s;
}
inline const std::string& ExecProgram_Args::k_filename_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.k_filename_list)
  return _internal_k_filename_list().Get(index);
}
inline std::string* ExecProgram_Args::mutable_k_filename_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Args.k_filename_list)
  return _internal_mutable_k_filename_list()->Mutable(index);
}
inline void ExecProgram_Args::set_k_filename_list(int index, const std::string& value) {
  _internal_mutable_k_filename_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline void ExecProgram_Args::set_k_filename_list(int index, std::string&& value) {
  _internal_mutable_k_filename_list()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline void ExecProgram_Args::set_k_filename_list(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_k_filename_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline void ExecProgram_Args::set_k_filename_list(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_k_filename_list()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline void ExecProgram_Args::set_k_filename_list(int index, absl::string_view value) {
  _internal_mutable_k_filename_list()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline void ExecProgram_Args::add_k_filename_list(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_filename_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline void ExecProgram_Args::add_k_filename_list(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_filename_list()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline void ExecProgram_Args::add_k_filename_list(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_filename_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline void ExecProgram_Args::add_k_filename_list(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_filename_list()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline void ExecProgram_Args::add_k_filename_list(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_filename_list()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ExecProgram_Args.k_filename_list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ExecProgram_Args::k_filename_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ExecProgram_Args.k_filename_list)
  return _internal_k_filename_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ExecProgram_Args::mutable_k_filename_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ExecProgram_Args.k_filename_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_k_filename_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ExecProgram_Args::_internal_k_filename_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.k_filename_list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ExecProgram_Args::_internal_mutable_k_filename_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.k_filename_list_;
}

// repeated string k_code_list = 3;
inline int ExecProgram_Args::_internal_k_code_list_size() const {
  return _internal_k_code_list().size();
}
inline int ExecProgram_Args::k_code_list_size() const {
  return _internal_k_code_list_size();
}
inline void ExecProgram_Args::clear_k_code_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.k_code_list_.Clear();
}
inline std::string* ExecProgram_Args::add_k_code_list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_k_code_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ExecProgram_Args.k_code_list)
  return _s;
}
inline const std::string& ExecProgram_Args::k_code_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.k_code_list)
  return _internal_k_code_list().Get(index);
}
inline std::string* ExecProgram_Args::mutable_k_code_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Args.k_code_list)
  return _internal_mutable_k_code_list()->Mutable(index);
}
inline void ExecProgram_Args::set_k_code_list(int index, const std::string& value) {
  _internal_mutable_k_code_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline void ExecProgram_Args::set_k_code_list(int index, std::string&& value) {
  _internal_mutable_k_code_list()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline void ExecProgram_Args::set_k_code_list(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_k_code_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline void ExecProgram_Args::set_k_code_list(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_k_code_list()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline void ExecProgram_Args::set_k_code_list(int index, absl::string_view value) {
  _internal_mutable_k_code_list()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline void ExecProgram_Args::add_k_code_list(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_code_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline void ExecProgram_Args::add_k_code_list(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_code_list()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline void ExecProgram_Args::add_k_code_list(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_code_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline void ExecProgram_Args::add_k_code_list(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_code_list()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline void ExecProgram_Args::add_k_code_list(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_k_code_list()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ExecProgram_Args.k_code_list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ExecProgram_Args::k_code_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ExecProgram_Args.k_code_list)
  return _internal_k_code_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ExecProgram_Args::mutable_k_code_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ExecProgram_Args.k_code_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_k_code_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ExecProgram_Args::_internal_k_code_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.k_code_list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ExecProgram_Args::_internal_mutable_k_code_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.k_code_list_;
}

// repeated .com.kcl.api.Argument args = 4;
inline int ExecProgram_Args::_internal_args_size() const {
  return _internal_args().size();
}
inline int ExecProgram_Args::args_size() const {
  return _internal_args_size();
}
inline void ExecProgram_Args::clear_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.args_.Clear();
}
inline ::com::kcl::api::Argument* ExecProgram_Args::mutable_args(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Args.args)
  return _internal_mutable_args()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Argument>* ExecProgram_Args::mutable_args()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ExecProgram_Args.args)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_args();
}
inline const ::com::kcl::api::Argument& ExecProgram_Args::args(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.args)
  return _internal_args().Get(index);
}
inline ::com::kcl::api::Argument* ExecProgram_Args::add_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Argument* _add = _internal_mutable_args()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.args)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Argument>& ExecProgram_Args::args() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ExecProgram_Args.args)
  return _internal_args();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Argument>&
ExecProgram_Args::_internal_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.args_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Argument>*
ExecProgram_Args::_internal_mutable_args() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.args_;
}

// repeated string overrides = 5;
inline int ExecProgram_Args::_internal_overrides_size() const {
  return _internal_overrides().size();
}
inline int ExecProgram_Args::overrides_size() const {
  return _internal_overrides_size();
}
inline void ExecProgram_Args::clear_overrides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.overrides_.Clear();
}
inline std::string* ExecProgram_Args::add_overrides()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_overrides()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ExecProgram_Args.overrides)
  return _s;
}
inline const std::string& ExecProgram_Args::overrides(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.overrides)
  return _internal_overrides().Get(index);
}
inline std::string* ExecProgram_Args::mutable_overrides(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Args.overrides)
  return _internal_mutable_overrides()->Mutable(index);
}
inline void ExecProgram_Args::set_overrides(int index, const std::string& value) {
  _internal_mutable_overrides()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.overrides)
}
inline void ExecProgram_Args::set_overrides(int index, std::string&& value) {
  _internal_mutable_overrides()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.overrides)
}
inline void ExecProgram_Args::set_overrides(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_overrides()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ExecProgram_Args.overrides)
}
inline void ExecProgram_Args::set_overrides(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_overrides()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ExecProgram_Args.overrides)
}
inline void ExecProgram_Args::set_overrides(int index, absl::string_view value) {
  _internal_mutable_overrides()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ExecProgram_Args.overrides)
}
inline void ExecProgram_Args::add_overrides(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.overrides)
}
inline void ExecProgram_Args::add_overrides(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.overrides)
}
inline void ExecProgram_Args::add_overrides(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ExecProgram_Args.overrides)
}
inline void ExecProgram_Args::add_overrides(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ExecProgram_Args.overrides)
}
inline void ExecProgram_Args::add_overrides(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ExecProgram_Args.overrides)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ExecProgram_Args::overrides() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ExecProgram_Args.overrides)
  return _internal_overrides();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ExecProgram_Args::mutable_overrides() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ExecProgram_Args.overrides)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_overrides();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ExecProgram_Args::_internal_overrides() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.overrides_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ExecProgram_Args::_internal_mutable_overrides() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.overrides_;
}

// bool disable_yaml_result = 6;
inline void ExecProgram_Args::clear_disable_yaml_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_yaml_result_ = false;
}
inline bool ExecProgram_Args::disable_yaml_result() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.disable_yaml_result)
  return _internal_disable_yaml_result();
}
inline void ExecProgram_Args::set_disable_yaml_result(bool value) {
  _internal_set_disable_yaml_result(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.disable_yaml_result)
}
inline bool ExecProgram_Args::_internal_disable_yaml_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disable_yaml_result_;
}
inline void ExecProgram_Args::_internal_set_disable_yaml_result(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_yaml_result_ = value;
}

// bool print_override_ast = 7;
inline void ExecProgram_Args::clear_print_override_ast() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_override_ast_ = false;
}
inline bool ExecProgram_Args::print_override_ast() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.print_override_ast)
  return _internal_print_override_ast();
}
inline void ExecProgram_Args::set_print_override_ast(bool value) {
  _internal_set_print_override_ast(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.print_override_ast)
}
inline bool ExecProgram_Args::_internal_print_override_ast() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.print_override_ast_;
}
inline void ExecProgram_Args::_internal_set_print_override_ast(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.print_override_ast_ = value;
}

// bool strict_range_check = 8;
inline void ExecProgram_Args::clear_strict_range_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strict_range_check_ = false;
}
inline bool ExecProgram_Args::strict_range_check() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.strict_range_check)
  return _internal_strict_range_check();
}
inline void ExecProgram_Args::set_strict_range_check(bool value) {
  _internal_set_strict_range_check(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.strict_range_check)
}
inline bool ExecProgram_Args::_internal_strict_range_check() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strict_range_check_;
}
inline void ExecProgram_Args::_internal_set_strict_range_check(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strict_range_check_ = value;
}

// bool disable_none = 9;
inline void ExecProgram_Args::clear_disable_none() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_none_ = false;
}
inline bool ExecProgram_Args::disable_none() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.disable_none)
  return _internal_disable_none();
}
inline void ExecProgram_Args::set_disable_none(bool value) {
  _internal_set_disable_none(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.disable_none)
}
inline bool ExecProgram_Args::_internal_disable_none() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disable_none_;
}
inline void ExecProgram_Args::_internal_set_disable_none(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_none_ = value;
}

// int32 verbose = 10;
inline void ExecProgram_Args::clear_verbose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verbose_ = 0;
}
inline ::int32_t ExecProgram_Args::verbose() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.verbose)
  return _internal_verbose();
}
inline void ExecProgram_Args::set_verbose(::int32_t value) {
  _internal_set_verbose(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.verbose)
}
inline ::int32_t ExecProgram_Args::_internal_verbose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verbose_;
}
inline void ExecProgram_Args::_internal_set_verbose(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verbose_ = value;
}

// int32 debug = 11;
inline void ExecProgram_Args::clear_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.debug_ = 0;
}
inline ::int32_t ExecProgram_Args::debug() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.debug)
  return _internal_debug();
}
inline void ExecProgram_Args::set_debug(::int32_t value) {
  _internal_set_debug(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.debug)
}
inline ::int32_t ExecProgram_Args::_internal_debug() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.debug_;
}
inline void ExecProgram_Args::_internal_set_debug(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.debug_ = value;
}

// bool sort_keys = 12;
inline void ExecProgram_Args::clear_sort_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_keys_ = false;
}
inline bool ExecProgram_Args::sort_keys() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.sort_keys)
  return _internal_sort_keys();
}
inline void ExecProgram_Args::set_sort_keys(bool value) {
  _internal_set_sort_keys(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.sort_keys)
}
inline bool ExecProgram_Args::_internal_sort_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sort_keys_;
}
inline void ExecProgram_Args::_internal_set_sort_keys(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_keys_ = value;
}

// repeated .com.kcl.api.ExternalPkg external_pkgs = 13;
inline int ExecProgram_Args::_internal_external_pkgs_size() const {
  return _internal_external_pkgs().size();
}
inline int ExecProgram_Args::external_pkgs_size() const {
  return _internal_external_pkgs_size();
}
inline void ExecProgram_Args::clear_external_pkgs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_pkgs_.Clear();
}
inline ::com::kcl::api::ExternalPkg* ExecProgram_Args::mutable_external_pkgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Args.external_pkgs)
  return _internal_mutable_external_pkgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* ExecProgram_Args::mutable_external_pkgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ExecProgram_Args.external_pkgs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_external_pkgs();
}
inline const ::com::kcl::api::ExternalPkg& ExecProgram_Args::external_pkgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.external_pkgs)
  return _internal_external_pkgs().Get(index);
}
inline ::com::kcl::api::ExternalPkg* ExecProgram_Args::add_external_pkgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::ExternalPkg* _add = _internal_mutable_external_pkgs()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.external_pkgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& ExecProgram_Args::external_pkgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ExecProgram_Args.external_pkgs)
  return _internal_external_pkgs();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>&
ExecProgram_Args::_internal_external_pkgs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_pkgs_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>*
ExecProgram_Args::_internal_mutable_external_pkgs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.external_pkgs_;
}

// bool include_schema_type_path = 14;
inline void ExecProgram_Args::clear_include_schema_type_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_schema_type_path_ = false;
}
inline bool ExecProgram_Args::include_schema_type_path() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.include_schema_type_path)
  return _internal_include_schema_type_path();
}
inline void ExecProgram_Args::set_include_schema_type_path(bool value) {
  _internal_set_include_schema_type_path(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.include_schema_type_path)
}
inline bool ExecProgram_Args::_internal_include_schema_type_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_schema_type_path_;
}
inline void ExecProgram_Args::_internal_set_include_schema_type_path(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_schema_type_path_ = value;
}

// bool compile_only = 15;
inline void ExecProgram_Args::clear_compile_only() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compile_only_ = false;
}
inline bool ExecProgram_Args::compile_only() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.compile_only)
  return _internal_compile_only();
}
inline void ExecProgram_Args::set_compile_only(bool value) {
  _internal_set_compile_only(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.compile_only)
}
inline bool ExecProgram_Args::_internal_compile_only() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.compile_only_;
}
inline void ExecProgram_Args::_internal_set_compile_only(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.compile_only_ = value;
}

// bool show_hidden = 16;
inline void ExecProgram_Args::clear_show_hidden() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_hidden_ = false;
}
inline bool ExecProgram_Args::show_hidden() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.show_hidden)
  return _internal_show_hidden();
}
inline void ExecProgram_Args::set_show_hidden(bool value) {
  _internal_set_show_hidden(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.show_hidden)
}
inline bool ExecProgram_Args::_internal_show_hidden() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_hidden_;
}
inline void ExecProgram_Args::_internal_set_show_hidden(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_hidden_ = value;
}

// repeated string path_selector = 17;
inline int ExecProgram_Args::_internal_path_selector_size() const {
  return _internal_path_selector().size();
}
inline int ExecProgram_Args::path_selector_size() const {
  return _internal_path_selector_size();
}
inline void ExecProgram_Args::clear_path_selector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_selector_.Clear();
}
inline std::string* ExecProgram_Args::add_path_selector()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_path_selector()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ExecProgram_Args.path_selector)
  return _s;
}
inline const std::string& ExecProgram_Args::path_selector(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.path_selector)
  return _internal_path_selector().Get(index);
}
inline std::string* ExecProgram_Args::mutable_path_selector(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Args.path_selector)
  return _internal_mutable_path_selector()->Mutable(index);
}
inline void ExecProgram_Args::set_path_selector(int index, const std::string& value) {
  _internal_mutable_path_selector()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.path_selector)
}
inline void ExecProgram_Args::set_path_selector(int index, std::string&& value) {
  _internal_mutable_path_selector()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.path_selector)
}
inline void ExecProgram_Args::set_path_selector(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_path_selector()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ExecProgram_Args.path_selector)
}
inline void ExecProgram_Args::set_path_selector(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_path_selector()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ExecProgram_Args.path_selector)
}
inline void ExecProgram_Args::set_path_selector(int index, absl::string_view value) {
  _internal_mutable_path_selector()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ExecProgram_Args.path_selector)
}
inline void ExecProgram_Args::add_path_selector(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.path_selector)
}
inline void ExecProgram_Args::add_path_selector(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ExecProgram_Args.path_selector)
}
inline void ExecProgram_Args::add_path_selector(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ExecProgram_Args.path_selector)
}
inline void ExecProgram_Args::add_path_selector(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ExecProgram_Args.path_selector)
}
inline void ExecProgram_Args::add_path_selector(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ExecProgram_Args.path_selector)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ExecProgram_Args::path_selector() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ExecProgram_Args.path_selector)
  return _internal_path_selector();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ExecProgram_Args::mutable_path_selector() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ExecProgram_Args.path_selector)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_path_selector();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ExecProgram_Args::_internal_path_selector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_selector_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ExecProgram_Args::_internal_mutable_path_selector() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.path_selector_;
}

// bool fast_eval = 18;
inline void ExecProgram_Args::clear_fast_eval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_eval_ = false;
}
inline bool ExecProgram_Args::fast_eval() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Args.fast_eval)
  return _internal_fast_eval();
}
inline void ExecProgram_Args::set_fast_eval(bool value) {
  _internal_set_fast_eval(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Args.fast_eval)
}
inline bool ExecProgram_Args::_internal_fast_eval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fast_eval_;
}
inline void ExecProgram_Args::_internal_set_fast_eval(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_eval_ = value;
}

// -------------------------------------------------------------------

// ExecProgram_Result

// string json_result = 1;
inline void ExecProgram_Result::clear_json_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.json_result_.ClearToEmpty();
}
inline const std::string& ExecProgram_Result::json_result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Result.json_result)
  return _internal_json_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExecProgram_Result::set_json_result(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.json_result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Result.json_result)
}
inline std::string* ExecProgram_Result::mutable_json_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_json_result();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Result.json_result)
  return _s;
}
inline const std::string& ExecProgram_Result::_internal_json_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.json_result_.Get();
}
inline void ExecProgram_Result::_internal_set_json_result(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.json_result_.Set(value, GetArena());
}
inline std::string* ExecProgram_Result::_internal_mutable_json_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.json_result_.Mutable( GetArena());
}
inline std::string* ExecProgram_Result::release_json_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ExecProgram_Result.json_result)
  return _impl_.json_result_.Release();
}
inline void ExecProgram_Result::set_allocated_json_result(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.json_result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.json_result_.IsDefault()) {
          _impl_.json_result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ExecProgram_Result.json_result)
}

// string yaml_result = 2;
inline void ExecProgram_Result::clear_yaml_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaml_result_.ClearToEmpty();
}
inline const std::string& ExecProgram_Result::yaml_result() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Result.yaml_result)
  return _internal_yaml_result();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExecProgram_Result::set_yaml_result(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaml_result_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Result.yaml_result)
}
inline std::string* ExecProgram_Result::mutable_yaml_result() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_yaml_result();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Result.yaml_result)
  return _s;
}
inline const std::string& ExecProgram_Result::_internal_yaml_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.yaml_result_.Get();
}
inline void ExecProgram_Result::_internal_set_yaml_result(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaml_result_.Set(value, GetArena());
}
inline std::string* ExecProgram_Result::_internal_mutable_yaml_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.yaml_result_.Mutable( GetArena());
}
inline std::string* ExecProgram_Result::release_yaml_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ExecProgram_Result.yaml_result)
  return _impl_.yaml_result_.Release();
}
inline void ExecProgram_Result::set_allocated_yaml_result(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.yaml_result_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.yaml_result_.IsDefault()) {
          _impl_.yaml_result_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ExecProgram_Result.yaml_result)
}

// string log_message = 3;
inline void ExecProgram_Result::clear_log_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_message_.ClearToEmpty();
}
inline const std::string& ExecProgram_Result::log_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Result.log_message)
  return _internal_log_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExecProgram_Result::set_log_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Result.log_message)
}
inline std::string* ExecProgram_Result::mutable_log_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_log_message();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Result.log_message)
  return _s;
}
inline const std::string& ExecProgram_Result::_internal_log_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_message_.Get();
}
inline void ExecProgram_Result::_internal_set_log_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_message_.Set(value, GetArena());
}
inline std::string* ExecProgram_Result::_internal_mutable_log_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.log_message_.Mutable( GetArena());
}
inline std::string* ExecProgram_Result::release_log_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ExecProgram_Result.log_message)
  return _impl_.log_message_.Release();
}
inline void ExecProgram_Result::set_allocated_log_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.log_message_.IsDefault()) {
          _impl_.log_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ExecProgram_Result.log_message)
}

// string err_message = 4;
inline void ExecProgram_Result::clear_err_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_message_.ClearToEmpty();
}
inline const std::string& ExecProgram_Result::err_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecProgram_Result.err_message)
  return _internal_err_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExecProgram_Result::set_err_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecProgram_Result.err_message)
}
inline std::string* ExecProgram_Result::mutable_err_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_err_message();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecProgram_Result.err_message)
  return _s;
}
inline const std::string& ExecProgram_Result::_internal_err_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.err_message_.Get();
}
inline void ExecProgram_Result::_internal_set_err_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_message_.Set(value, GetArena());
}
inline std::string* ExecProgram_Result::_internal_mutable_err_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.err_message_.Mutable( GetArena());
}
inline std::string* ExecProgram_Result::release_err_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ExecProgram_Result.err_message)
  return _impl_.err_message_.Release();
}
inline void ExecProgram_Result::set_allocated_err_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.err_message_.IsDefault()) {
          _impl_.err_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ExecProgram_Result.err_message)
}

// -------------------------------------------------------------------

// BuildProgram_Args

// .com.kcl.api.ExecProgram_Args exec_args = 1;
inline bool BuildProgram_Args::has_exec_args() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.exec_args_ != nullptr);
  return value;
}
inline void BuildProgram_Args::clear_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_args_ != nullptr) _impl_.exec_args_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::ExecProgram_Args& BuildProgram_Args::_internal_exec_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::ExecProgram_Args* p = _impl_.exec_args_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::ExecProgram_Args&>(::com::kcl::api::_ExecProgram_Args_default_instance_);
}
inline const ::com::kcl::api::ExecProgram_Args& BuildProgram_Args::exec_args() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.BuildProgram_Args.exec_args)
  return _internal_exec_args();
}
inline void BuildProgram_Args::unsafe_arena_set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exec_args_);
  }
  _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.BuildProgram_Args.exec_args)
}
inline ::com::kcl::api::ExecProgram_Args* BuildProgram_Args::release_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ExecProgram_Args* released = _impl_.exec_args_;
  _impl_.exec_args_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::ExecProgram_Args* BuildProgram_Args::unsafe_arena_release_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.BuildProgram_Args.exec_args)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ExecProgram_Args* temp = _impl_.exec_args_;
  _impl_.exec_args_ = nullptr;
  return temp;
}
inline ::com::kcl::api::ExecProgram_Args* BuildProgram_Args::_internal_mutable_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_args_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::ExecProgram_Args>(GetArena());
    _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(p);
  }
  return _impl_.exec_args_;
}
inline ::com::kcl::api::ExecProgram_Args* BuildProgram_Args::mutable_exec_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::ExecProgram_Args* _msg = _internal_mutable_exec_args();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.BuildProgram_Args.exec_args)
  return _msg;
}
inline void BuildProgram_Args::set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.exec_args_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.BuildProgram_Args.exec_args)
}

// string output = 2;
inline void BuildProgram_Args::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.ClearToEmpty();
}
inline const std::string& BuildProgram_Args::output() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.BuildProgram_Args.output)
  return _internal_output();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BuildProgram_Args::set_output(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.BuildProgram_Args.output)
}
inline std::string* BuildProgram_Args::mutable_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_output();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.BuildProgram_Args.output)
  return _s;
}
inline const std::string& BuildProgram_Args::_internal_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_.Get();
}
inline void BuildProgram_Args::_internal_set_output(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.Set(value, GetArena());
}
inline std::string* BuildProgram_Args::_internal_mutable_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.output_.Mutable( GetArena());
}
inline std::string* BuildProgram_Args::release_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.BuildProgram_Args.output)
  return _impl_.output_.Release();
}
inline void BuildProgram_Args::set_allocated_output(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.output_.IsDefault()) {
          _impl_.output_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.BuildProgram_Args.output)
}

// -------------------------------------------------------------------

// BuildProgram_Result

// string path = 1;
inline void BuildProgram_Result::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& BuildProgram_Result::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.BuildProgram_Result.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void BuildProgram_Result::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.BuildProgram_Result.path)
}
inline std::string* BuildProgram_Result::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.BuildProgram_Result.path)
  return _s;
}
inline const std::string& BuildProgram_Result::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void BuildProgram_Result::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* BuildProgram_Result::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* BuildProgram_Result::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.BuildProgram_Result.path)
  return _impl_.path_.Release();
}
inline void BuildProgram_Result::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_.IsDefault()) {
          _impl_.path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.BuildProgram_Result.path)
}

// -------------------------------------------------------------------

// ExecArtifact_Args

// string path = 1;
inline void ExecArtifact_Args::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& ExecArtifact_Args::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecArtifact_Args.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ExecArtifact_Args::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ExecArtifact_Args.path)
}
inline std::string* ExecArtifact_Args::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecArtifact_Args.path)
  return _s;
}
inline const std::string& ExecArtifact_Args::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void ExecArtifact_Args::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* ExecArtifact_Args::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* ExecArtifact_Args::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ExecArtifact_Args.path)
  return _impl_.path_.Release();
}
inline void ExecArtifact_Args::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_.IsDefault()) {
          _impl_.path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ExecArtifact_Args.path)
}

// .com.kcl.api.ExecProgram_Args exec_args = 2;
inline bool ExecArtifact_Args::has_exec_args() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.exec_args_ != nullptr);
  return value;
}
inline void ExecArtifact_Args::clear_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_args_ != nullptr) _impl_.exec_args_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::ExecProgram_Args& ExecArtifact_Args::_internal_exec_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::ExecProgram_Args* p = _impl_.exec_args_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::ExecProgram_Args&>(::com::kcl::api::_ExecProgram_Args_default_instance_);
}
inline const ::com::kcl::api::ExecProgram_Args& ExecArtifact_Args::exec_args() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ExecArtifact_Args.exec_args)
  return _internal_exec_args();
}
inline void ExecArtifact_Args::unsafe_arena_set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exec_args_);
  }
  _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.ExecArtifact_Args.exec_args)
}
inline ::com::kcl::api::ExecProgram_Args* ExecArtifact_Args::release_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ExecProgram_Args* released = _impl_.exec_args_;
  _impl_.exec_args_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::ExecProgram_Args* ExecArtifact_Args::unsafe_arena_release_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ExecArtifact_Args.exec_args)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ExecProgram_Args* temp = _impl_.exec_args_;
  _impl_.exec_args_ = nullptr;
  return temp;
}
inline ::com::kcl::api::ExecProgram_Args* ExecArtifact_Args::_internal_mutable_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_args_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::ExecProgram_Args>(GetArena());
    _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(p);
  }
  return _impl_.exec_args_;
}
inline ::com::kcl::api::ExecProgram_Args* ExecArtifact_Args::mutable_exec_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::ExecProgram_Args* _msg = _internal_mutable_exec_args();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ExecArtifact_Args.exec_args)
  return _msg;
}
inline void ExecArtifact_Args::set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.exec_args_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ExecArtifact_Args.exec_args)
}

// -------------------------------------------------------------------

// ResetPlugin_Args

// string plugin_root = 1;
inline void ResetPlugin_Args::clear_plugin_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plugin_root_.ClearToEmpty();
}
inline const std::string& ResetPlugin_Args::plugin_root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ResetPlugin_Args.plugin_root)
  return _internal_plugin_root();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ResetPlugin_Args::set_plugin_root(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plugin_root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ResetPlugin_Args.plugin_root)
}
inline std::string* ResetPlugin_Args::mutable_plugin_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_plugin_root();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ResetPlugin_Args.plugin_root)
  return _s;
}
inline const std::string& ResetPlugin_Args::_internal_plugin_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.plugin_root_.Get();
}
inline void ResetPlugin_Args::_internal_set_plugin_root(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plugin_root_.Set(value, GetArena());
}
inline std::string* ResetPlugin_Args::_internal_mutable_plugin_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.plugin_root_.Mutable( GetArena());
}
inline std::string* ResetPlugin_Args::release_plugin_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ResetPlugin_Args.plugin_root)
  return _impl_.plugin_root_.Release();
}
inline void ResetPlugin_Args::set_allocated_plugin_root(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.plugin_root_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.plugin_root_.IsDefault()) {
          _impl_.plugin_root_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ResetPlugin_Args.plugin_root)
}

// -------------------------------------------------------------------

// ResetPlugin_Result

// -------------------------------------------------------------------

// FormatCode_Args

// string source = 1;
inline void FormatCode_Args::clear_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.ClearToEmpty();
}
inline const std::string& FormatCode_Args::source() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.FormatCode_Args.source)
  return _internal_source();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FormatCode_Args::set_source(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.FormatCode_Args.source)
}
inline std::string* FormatCode_Args::mutable_source() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_source();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.FormatCode_Args.source)
  return _s;
}
inline const std::string& FormatCode_Args::_internal_source() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_.Get();
}
inline void FormatCode_Args::_internal_set_source(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.Set(value, GetArena());
}
inline std::string* FormatCode_Args::_internal_mutable_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_.Mutable( GetArena());
}
inline std::string* FormatCode_Args::release_source() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.FormatCode_Args.source)
  return _impl_.source_.Release();
}
inline void FormatCode_Args::set_allocated_source(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.source_.IsDefault()) {
          _impl_.source_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.FormatCode_Args.source)
}

// -------------------------------------------------------------------

// FormatCode_Result

// bytes formatted = 1;
inline void FormatCode_Result::clear_formatted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.formatted_.ClearToEmpty();
}
inline const std::string& FormatCode_Result::formatted() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.FormatCode_Result.formatted)
  return _internal_formatted();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FormatCode_Result::set_formatted(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.formatted_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.FormatCode_Result.formatted)
}
inline std::string* FormatCode_Result::mutable_formatted() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_formatted();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.FormatCode_Result.formatted)
  return _s;
}
inline const std::string& FormatCode_Result::_internal_formatted() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.formatted_.Get();
}
inline void FormatCode_Result::_internal_set_formatted(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.formatted_.Set(value, GetArena());
}
inline std::string* FormatCode_Result::_internal_mutable_formatted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.formatted_.Mutable( GetArena());
}
inline std::string* FormatCode_Result::release_formatted() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.FormatCode_Result.formatted)
  return _impl_.formatted_.Release();
}
inline void FormatCode_Result::set_allocated_formatted(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.formatted_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.formatted_.IsDefault()) {
          _impl_.formatted_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.FormatCode_Result.formatted)
}

// -------------------------------------------------------------------

// FormatPath_Args

// string path = 1;
inline void FormatPath_Args::clear_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.ClearToEmpty();
}
inline const std::string& FormatPath_Args::path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.FormatPath_Args.path)
  return _internal_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void FormatPath_Args::set_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.FormatPath_Args.path)
}
inline std::string* FormatPath_Args::mutable_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_path();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.FormatPath_Args.path)
  return _s;
}
inline const std::string& FormatPath_Args::_internal_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_.Get();
}
inline void FormatPath_Args::_internal_set_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.Set(value, GetArena());
}
inline std::string* FormatPath_Args::_internal_mutable_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.path_.Mutable( GetArena());
}
inline std::string* FormatPath_Args::release_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.FormatPath_Args.path)
  return _impl_.path_.Release();
}
inline void FormatPath_Args::set_allocated_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.path_.IsDefault()) {
          _impl_.path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.FormatPath_Args.path)
}

// -------------------------------------------------------------------

// FormatPath_Result

// repeated string changed_paths = 1;
inline int FormatPath_Result::_internal_changed_paths_size() const {
  return _internal_changed_paths().size();
}
inline int FormatPath_Result::changed_paths_size() const {
  return _internal_changed_paths_size();
}
inline void FormatPath_Result::clear_changed_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changed_paths_.Clear();
}
inline std::string* FormatPath_Result::add_changed_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_changed_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.FormatPath_Result.changed_paths)
  return _s;
}
inline const std::string& FormatPath_Result::changed_paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.FormatPath_Result.changed_paths)
  return _internal_changed_paths().Get(index);
}
inline std::string* FormatPath_Result::mutable_changed_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.FormatPath_Result.changed_paths)
  return _internal_mutable_changed_paths()->Mutable(index);
}
inline void FormatPath_Result::set_changed_paths(int index, const std::string& value) {
  _internal_mutable_changed_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.FormatPath_Result.changed_paths)
}
inline void FormatPath_Result::set_changed_paths(int index, std::string&& value) {
  _internal_mutable_changed_paths()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.FormatPath_Result.changed_paths)
}
inline void FormatPath_Result::set_changed_paths(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_changed_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.FormatPath_Result.changed_paths)
}
inline void FormatPath_Result::set_changed_paths(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_changed_paths()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.FormatPath_Result.changed_paths)
}
inline void FormatPath_Result::set_changed_paths(int index, absl::string_view value) {
  _internal_mutable_changed_paths()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.FormatPath_Result.changed_paths)
}
inline void FormatPath_Result::add_changed_paths(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.FormatPath_Result.changed_paths)
}
inline void FormatPath_Result::add_changed_paths(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_paths()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.FormatPath_Result.changed_paths)
}
inline void FormatPath_Result::add_changed_paths(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.FormatPath_Result.changed_paths)
}
inline void FormatPath_Result::add_changed_paths(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_paths()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.FormatPath_Result.changed_paths)
}
inline void FormatPath_Result::add_changed_paths(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_paths()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.FormatPath_Result.changed_paths)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FormatPath_Result::changed_paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.FormatPath_Result.changed_paths)
  return _internal_changed_paths();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FormatPath_Result::mutable_changed_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.FormatPath_Result.changed_paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_changed_paths();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
FormatPath_Result::_internal_changed_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.changed_paths_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
FormatPath_Result::_internal_mutable_changed_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.changed_paths_;
}

// -------------------------------------------------------------------

// LintPath_Args

// repeated string paths = 1;
inline int LintPath_Args::_internal_paths_size() const {
  return _internal_paths().size();
}
inline int LintPath_Args::paths_size() const {
  return _internal_paths_size();
}
inline void LintPath_Args::clear_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.paths_.Clear();
}
inline std::string* LintPath_Args::add_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.LintPath_Args.paths)
  return _s;
}
inline const std::string& LintPath_Args::paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LintPath_Args.paths)
  return _internal_paths().Get(index);
}
inline std::string* LintPath_Args::mutable_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LintPath_Args.paths)
  return _internal_mutable_paths()->Mutable(index);
}
inline void LintPath_Args::set_paths(int index, const std::string& value) {
  _internal_mutable_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.LintPath_Args.paths)
}
inline void LintPath_Args::set_paths(int index, std::string&& value) {
  _internal_mutable_paths()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.LintPath_Args.paths)
}
inline void LintPath_Args::set_paths(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.LintPath_Args.paths)
}
inline void LintPath_Args::set_paths(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_paths()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.LintPath_Args.paths)
}
inline void LintPath_Args::set_paths(int index, absl::string_view value) {
  _internal_mutable_paths()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.LintPath_Args.paths)
}
inline void LintPath_Args::add_paths(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.LintPath_Args.paths)
}
inline void LintPath_Args::add_paths(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.LintPath_Args.paths)
}
inline void LintPath_Args::add_paths(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.LintPath_Args.paths)
}
inline void LintPath_Args::add_paths(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.LintPath_Args.paths)
}
inline void LintPath_Args::add_paths(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_paths()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.LintPath_Args.paths)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LintPath_Args::paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.LintPath_Args.paths)
  return _internal_paths();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LintPath_Args::mutable_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.LintPath_Args.paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_paths();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LintPath_Args::_internal_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.paths_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LintPath_Args::_internal_mutable_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.paths_;
}

// -------------------------------------------------------------------

// LintPath_Result

// repeated string results = 1;
inline int LintPath_Result::_internal_results_size() const {
  return _internal_results().size();
}
inline int LintPath_Result::results_size() const {
  return _internal_results_size();
}
inline void LintPath_Result::clear_results() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.results_.Clear();
}
inline std::string* LintPath_Result::add_results()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_results()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.LintPath_Result.results)
  return _s;
}
inline const std::string& LintPath_Result::results(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LintPath_Result.results)
  return _internal_results().Get(index);
}
inline std::string* LintPath_Result::mutable_results(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LintPath_Result.results)
  return _internal_mutable_results()->Mutable(index);
}
inline void LintPath_Result::set_results(int index, const std::string& value) {
  _internal_mutable_results()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.LintPath_Result.results)
}
inline void LintPath_Result::set_results(int index, std::string&& value) {
  _internal_mutable_results()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.LintPath_Result.results)
}
inline void LintPath_Result::set_results(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_results()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.LintPath_Result.results)
}
inline void LintPath_Result::set_results(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_results()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.LintPath_Result.results)
}
inline void LintPath_Result::set_results(int index, absl::string_view value) {
  _internal_mutable_results()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.LintPath_Result.results)
}
inline void LintPath_Result::add_results(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_results()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.LintPath_Result.results)
}
inline void LintPath_Result::add_results(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_results()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.LintPath_Result.results)
}
inline void LintPath_Result::add_results(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_results()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.LintPath_Result.results)
}
inline void LintPath_Result::add_results(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_results()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.LintPath_Result.results)
}
inline void LintPath_Result::add_results(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_results()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.LintPath_Result.results)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LintPath_Result::results() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.LintPath_Result.results)
  return _internal_results();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LintPath_Result::mutable_results() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.LintPath_Result.results)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_results();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LintPath_Result::_internal_results() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.results_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LintPath_Result::_internal_mutable_results() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.results_;
}

// -------------------------------------------------------------------

// OverrideFile_Args

// string file = 1;
inline void OverrideFile_Args::clear_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.ClearToEmpty();
}
inline const std::string& OverrideFile_Args::file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.OverrideFile_Args.file)
  return _internal_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OverrideFile_Args::set_file(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.OverrideFile_Args.file)
}
inline std::string* OverrideFile_Args::mutable_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.OverrideFile_Args.file)
  return _s;
}
inline const std::string& OverrideFile_Args::_internal_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_.Get();
}
inline void OverrideFile_Args::_internal_set_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.Set(value, GetArena());
}
inline std::string* OverrideFile_Args::_internal_mutable_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.file_.Mutable( GetArena());
}
inline std::string* OverrideFile_Args::release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.OverrideFile_Args.file)
  return _impl_.file_.Release();
}
inline void OverrideFile_Args::set_allocated_file(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_.IsDefault()) {
          _impl_.file_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.OverrideFile_Args.file)
}

// repeated string specs = 2;
inline int OverrideFile_Args::_internal_specs_size() const {
  return _internal_specs().size();
}
inline int OverrideFile_Args::specs_size() const {
  return _internal_specs_size();
}
inline void OverrideFile_Args::clear_specs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.specs_.Clear();
}
inline std::string* OverrideFile_Args::add_specs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_specs()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.OverrideFile_Args.specs)
  return _s;
}
inline const std::string& OverrideFile_Args::specs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.OverrideFile_Args.specs)
  return _internal_specs().Get(index);
}
inline std::string* OverrideFile_Args::mutable_specs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.OverrideFile_Args.specs)
  return _internal_mutable_specs()->Mutable(index);
}
inline void OverrideFile_Args::set_specs(int index, const std::string& value) {
  _internal_mutable_specs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.OverrideFile_Args.specs)
}
inline void OverrideFile_Args::set_specs(int index, std::string&& value) {
  _internal_mutable_specs()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.OverrideFile_Args.specs)
}
inline void OverrideFile_Args::set_specs(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_specs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.OverrideFile_Args.specs)
}
inline void OverrideFile_Args::set_specs(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_specs()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.OverrideFile_Args.specs)
}
inline void OverrideFile_Args::set_specs(int index, absl::string_view value) {
  _internal_mutable_specs()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.OverrideFile_Args.specs)
}
inline void OverrideFile_Args::add_specs(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.OverrideFile_Args.specs)
}
inline void OverrideFile_Args::add_specs(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.OverrideFile_Args.specs)
}
inline void OverrideFile_Args::add_specs(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.OverrideFile_Args.specs)
}
inline void OverrideFile_Args::add_specs(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.OverrideFile_Args.specs)
}
inline void OverrideFile_Args::add_specs(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.OverrideFile_Args.specs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OverrideFile_Args::specs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.OverrideFile_Args.specs)
  return _internal_specs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OverrideFile_Args::mutable_specs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.OverrideFile_Args.specs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_specs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OverrideFile_Args::_internal_specs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.specs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OverrideFile_Args::_internal_mutable_specs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.specs_;
}

// repeated string import_paths = 3;
inline int OverrideFile_Args::_internal_import_paths_size() const {
  return _internal_import_paths().size();
}
inline int OverrideFile_Args::import_paths_size() const {
  return _internal_import_paths_size();
}
inline void OverrideFile_Args::clear_import_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.import_paths_.Clear();
}
inline std::string* OverrideFile_Args::add_import_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_import_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.OverrideFile_Args.import_paths)
  return _s;
}
inline const std::string& OverrideFile_Args::import_paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.OverrideFile_Args.import_paths)
  return _internal_import_paths().Get(index);
}
inline std::string* OverrideFile_Args::mutable_import_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.OverrideFile_Args.import_paths)
  return _internal_mutable_import_paths()->Mutable(index);
}
inline void OverrideFile_Args::set_import_paths(int index, const std::string& value) {
  _internal_mutable_import_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.OverrideFile_Args.import_paths)
}
inline void OverrideFile_Args::set_import_paths(int index, std::string&& value) {
  _internal_mutable_import_paths()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.OverrideFile_Args.import_paths)
}
inline void OverrideFile_Args::set_import_paths(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_import_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.OverrideFile_Args.import_paths)
}
inline void OverrideFile_Args::set_import_paths(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_import_paths()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.OverrideFile_Args.import_paths)
}
inline void OverrideFile_Args::set_import_paths(int index, absl::string_view value) {
  _internal_mutable_import_paths()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.OverrideFile_Args.import_paths)
}
inline void OverrideFile_Args::add_import_paths(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_import_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.OverrideFile_Args.import_paths)
}
inline void OverrideFile_Args::add_import_paths(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_import_paths()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.OverrideFile_Args.import_paths)
}
inline void OverrideFile_Args::add_import_paths(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_import_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.OverrideFile_Args.import_paths)
}
inline void OverrideFile_Args::add_import_paths(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_import_paths()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.OverrideFile_Args.import_paths)
}
inline void OverrideFile_Args::add_import_paths(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_import_paths()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.OverrideFile_Args.import_paths)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OverrideFile_Args::import_paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.OverrideFile_Args.import_paths)
  return _internal_import_paths();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OverrideFile_Args::mutable_import_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.OverrideFile_Args.import_paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_import_paths();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
OverrideFile_Args::_internal_import_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.import_paths_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
OverrideFile_Args::_internal_mutable_import_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.import_paths_;
}

// -------------------------------------------------------------------

// OverrideFile_Result

// bool result = 1;
inline void OverrideFile_Result::clear_result() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = false;
}
inline bool OverrideFile_Result::result() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.OverrideFile_Result.result)
  return _internal_result();
}
inline void OverrideFile_Result::set_result(bool value) {
  _internal_set_result(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.OverrideFile_Result.result)
}
inline bool OverrideFile_Result::_internal_result() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.result_;
}
inline void OverrideFile_Result::_internal_set_result(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.result_ = value;
}

// repeated .com.kcl.api.Error parse_errors = 2;
inline int OverrideFile_Result::_internal_parse_errors_size() const {
  return _internal_parse_errors().size();
}
inline int OverrideFile_Result::parse_errors_size() const {
  return _internal_parse_errors_size();
}
inline void OverrideFile_Result::clear_parse_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parse_errors_.Clear();
}
inline ::com::kcl::api::Error* OverrideFile_Result::mutable_parse_errors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.OverrideFile_Result.parse_errors)
  return _internal_mutable_parse_errors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* OverrideFile_Result::mutable_parse_errors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.OverrideFile_Result.parse_errors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_parse_errors();
}
inline const ::com::kcl::api::Error& OverrideFile_Result::parse_errors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.OverrideFile_Result.parse_errors)
  return _internal_parse_errors().Get(index);
}
inline ::com::kcl::api::Error* OverrideFile_Result::add_parse_errors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Error* _add = _internal_mutable_parse_errors()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.OverrideFile_Result.parse_errors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& OverrideFile_Result::parse_errors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.OverrideFile_Result.parse_errors)
  return _internal_parse_errors();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>&
OverrideFile_Result::_internal_parse_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parse_errors_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>*
OverrideFile_Result::_internal_mutable_parse_errors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.parse_errors_;
}

// -------------------------------------------------------------------

// ListVariables_Options

// bool merge_program = 1;
inline void ListVariables_Options::clear_merge_program() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.merge_program_ = false;
}
inline bool ListVariables_Options::merge_program() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListVariables_Options.merge_program)
  return _internal_merge_program();
}
inline void ListVariables_Options::set_merge_program(bool value) {
  _internal_set_merge_program(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ListVariables_Options.merge_program)
}
inline bool ListVariables_Options::_internal_merge_program() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.merge_program_;
}
inline void ListVariables_Options::_internal_set_merge_program(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.merge_program_ = value;
}

// -------------------------------------------------------------------

// VariableList

// repeated .com.kcl.api.Variable variables = 1;
inline int VariableList::_internal_variables_size() const {
  return _internal_variables().size();
}
inline int VariableList::variables_size() const {
  return _internal_variables_size();
}
inline void VariableList::clear_variables() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variables_.Clear();
}
inline ::com::kcl::api::Variable* VariableList::mutable_variables(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.VariableList.variables)
  return _internal_mutable_variables()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>* VariableList::mutable_variables()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.VariableList.variables)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_variables();
}
inline const ::com::kcl::api::Variable& VariableList::variables(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.VariableList.variables)
  return _internal_variables().Get(index);
}
inline ::com::kcl::api::Variable* VariableList::add_variables() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Variable* _add = _internal_mutable_variables()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.VariableList.variables)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>& VariableList::variables() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.VariableList.variables)
  return _internal_variables();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>&
VariableList::_internal_variables() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.variables_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>*
VariableList::_internal_mutable_variables() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.variables_;
}

// -------------------------------------------------------------------

// ListVariables_Args

// repeated string files = 1;
inline int ListVariables_Args::_internal_files_size() const {
  return _internal_files().size();
}
inline int ListVariables_Args::files_size() const {
  return _internal_files_size();
}
inline void ListVariables_Args::clear_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.files_.Clear();
}
inline std::string* ListVariables_Args::add_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ListVariables_Args.files)
  return _s;
}
inline const std::string& ListVariables_Args::files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListVariables_Args.files)
  return _internal_files().Get(index);
}
inline std::string* ListVariables_Args::mutable_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListVariables_Args.files)
  return _internal_mutable_files()->Mutable(index);
}
inline void ListVariables_Args::set_files(int index, const std::string& value) {
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ListVariables_Args.files)
}
inline void ListVariables_Args::set_files(int index, std::string&& value) {
  _internal_mutable_files()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ListVariables_Args.files)
}
inline void ListVariables_Args::set_files(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ListVariables_Args.files)
}
inline void ListVariables_Args::set_files(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_files()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ListVariables_Args.files)
}
inline void ListVariables_Args::set_files(int index, absl::string_view value) {
  _internal_mutable_files()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ListVariables_Args.files)
}
inline void ListVariables_Args::add_files(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ListVariables_Args.files)
}
inline void ListVariables_Args::add_files(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ListVariables_Args.files)
}
inline void ListVariables_Args::add_files(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ListVariables_Args.files)
}
inline void ListVariables_Args::add_files(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ListVariables_Args.files)
}
inline void ListVariables_Args::add_files(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ListVariables_Args.files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListVariables_Args::files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ListVariables_Args.files)
  return _internal_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListVariables_Args::mutable_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ListVariables_Args.files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListVariables_Args::_internal_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListVariables_Args::_internal_mutable_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.files_;
}

// repeated string specs = 2;
inline int ListVariables_Args::_internal_specs_size() const {
  return _internal_specs().size();
}
inline int ListVariables_Args::specs_size() const {
  return _internal_specs_size();
}
inline void ListVariables_Args::clear_specs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.specs_.Clear();
}
inline std::string* ListVariables_Args::add_specs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_specs()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ListVariables_Args.specs)
  return _s;
}
inline const std::string& ListVariables_Args::specs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListVariables_Args.specs)
  return _internal_specs().Get(index);
}
inline std::string* ListVariables_Args::mutable_specs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListVariables_Args.specs)
  return _internal_mutable_specs()->Mutable(index);
}
inline void ListVariables_Args::set_specs(int index, const std::string& value) {
  _internal_mutable_specs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ListVariables_Args.specs)
}
inline void ListVariables_Args::set_specs(int index, std::string&& value) {
  _internal_mutable_specs()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ListVariables_Args.specs)
}
inline void ListVariables_Args::set_specs(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_specs()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ListVariables_Args.specs)
}
inline void ListVariables_Args::set_specs(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_specs()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ListVariables_Args.specs)
}
inline void ListVariables_Args::set_specs(int index, absl::string_view value) {
  _internal_mutable_specs()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ListVariables_Args.specs)
}
inline void ListVariables_Args::add_specs(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ListVariables_Args.specs)
}
inline void ListVariables_Args::add_specs(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ListVariables_Args.specs)
}
inline void ListVariables_Args::add_specs(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ListVariables_Args.specs)
}
inline void ListVariables_Args::add_specs(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ListVariables_Args.specs)
}
inline void ListVariables_Args::add_specs(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specs()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ListVariables_Args.specs)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListVariables_Args::specs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ListVariables_Args.specs)
  return _internal_specs();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListVariables_Args::mutable_specs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ListVariables_Args.specs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_specs();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListVariables_Args::_internal_specs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.specs_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListVariables_Args::_internal_mutable_specs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.specs_;
}

// .com.kcl.api.ListVariables_Options options = 3;
inline bool ListVariables_Args::has_options() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.options_ != nullptr);
  return value;
}
inline void ListVariables_Args::clear_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ != nullptr) _impl_.options_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::ListVariables_Options& ListVariables_Args::_internal_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::ListVariables_Options* p = _impl_.options_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::ListVariables_Options&>(::com::kcl::api::_ListVariables_Options_default_instance_);
}
inline const ::com::kcl::api::ListVariables_Options& ListVariables_Args::options() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListVariables_Args.options)
  return _internal_options();
}
inline void ListVariables_Args::unsafe_arena_set_allocated_options(::com::kcl::api::ListVariables_Options* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.options_);
  }
  _impl_.options_ = reinterpret_cast<::com::kcl::api::ListVariables_Options*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.ListVariables_Args.options)
}
inline ::com::kcl::api::ListVariables_Options* ListVariables_Args::release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ListVariables_Options* released = _impl_.options_;
  _impl_.options_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::ListVariables_Options* ListVariables_Args::unsafe_arena_release_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ListVariables_Args.options)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ListVariables_Options* temp = _impl_.options_;
  _impl_.options_ = nullptr;
  return temp;
}
inline ::com::kcl::api::ListVariables_Options* ListVariables_Args::_internal_mutable_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.options_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::ListVariables_Options>(GetArena());
    _impl_.options_ = reinterpret_cast<::com::kcl::api::ListVariables_Options*>(p);
  }
  return _impl_.options_;
}
inline ::com::kcl::api::ListVariables_Options* ListVariables_Args::mutable_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::ListVariables_Options* _msg = _internal_mutable_options();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListVariables_Args.options)
  return _msg;
}
inline void ListVariables_Args::set_allocated_options(::com::kcl::api::ListVariables_Options* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.options_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.options_ = reinterpret_cast<::com::kcl::api::ListVariables_Options*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ListVariables_Args.options)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// ListVariables_Result

// map<string, .com.kcl.api.VariableList> variables = 1;
inline int ListVariables_Result::_internal_variables_size() const {
  return _internal_variables().size();
}
inline int ListVariables_Result::variables_size() const {
  return _internal_variables_size();
}
inline void ListVariables_Result::clear_variables() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.variables_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::VariableList>& ListVariables_Result::_internal_variables() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.variables_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::VariableList>& ListVariables_Result::variables() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.ListVariables_Result.variables)
  return _internal_variables();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::VariableList>* ListVariables_Result::_internal_mutable_variables() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.variables_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::VariableList>* ListVariables_Result::mutable_variables() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.ListVariables_Result.variables)
  return _internal_mutable_variables();
}

// repeated string unsupported_codes = 2;
inline int ListVariables_Result::_internal_unsupported_codes_size() const {
  return _internal_unsupported_codes().size();
}
inline int ListVariables_Result::unsupported_codes_size() const {
  return _internal_unsupported_codes_size();
}
inline void ListVariables_Result::clear_unsupported_codes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.unsupported_codes_.Clear();
}
inline std::string* ListVariables_Result::add_unsupported_codes()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_unsupported_codes()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ListVariables_Result.unsupported_codes)
  return _s;
}
inline const std::string& ListVariables_Result::unsupported_codes(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListVariables_Result.unsupported_codes)
  return _internal_unsupported_codes().Get(index);
}
inline std::string* ListVariables_Result::mutable_unsupported_codes(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListVariables_Result.unsupported_codes)
  return _internal_mutable_unsupported_codes()->Mutable(index);
}
inline void ListVariables_Result::set_unsupported_codes(int index, const std::string& value) {
  _internal_mutable_unsupported_codes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline void ListVariables_Result::set_unsupported_codes(int index, std::string&& value) {
  _internal_mutable_unsupported_codes()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline void ListVariables_Result::set_unsupported_codes(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_unsupported_codes()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline void ListVariables_Result::set_unsupported_codes(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_unsupported_codes()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline void ListVariables_Result::set_unsupported_codes(int index, absl::string_view value) {
  _internal_mutable_unsupported_codes()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline void ListVariables_Result::add_unsupported_codes(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unsupported_codes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline void ListVariables_Result::add_unsupported_codes(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unsupported_codes()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline void ListVariables_Result::add_unsupported_codes(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unsupported_codes()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline void ListVariables_Result::add_unsupported_codes(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unsupported_codes()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline void ListVariables_Result::add_unsupported_codes(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_unsupported_codes()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ListVariables_Result.unsupported_codes)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListVariables_Result::unsupported_codes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ListVariables_Result.unsupported_codes)
  return _internal_unsupported_codes();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListVariables_Result::mutable_unsupported_codes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ListVariables_Result.unsupported_codes)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_unsupported_codes();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListVariables_Result::_internal_unsupported_codes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.unsupported_codes_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListVariables_Result::_internal_mutable_unsupported_codes() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.unsupported_codes_;
}

// repeated .com.kcl.api.Error parse_errors = 3;
inline int ListVariables_Result::_internal_parse_errors_size() const {
  return _internal_parse_errors().size();
}
inline int ListVariables_Result::parse_errors_size() const {
  return _internal_parse_errors_size();
}
inline void ListVariables_Result::clear_parse_errors() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parse_errors_.Clear();
}
inline ::com::kcl::api::Error* ListVariables_Result::mutable_parse_errors(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListVariables_Result.parse_errors)
  return _internal_mutable_parse_errors()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>* ListVariables_Result::mutable_parse_errors()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ListVariables_Result.parse_errors)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_parse_errors();
}
inline const ::com::kcl::api::Error& ListVariables_Result::parse_errors(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListVariables_Result.parse_errors)
  return _internal_parse_errors().Get(index);
}
inline ::com::kcl::api::Error* ListVariables_Result::add_parse_errors() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Error* _add = _internal_mutable_parse_errors()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.ListVariables_Result.parse_errors)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>& ListVariables_Result::parse_errors() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ListVariables_Result.parse_errors)
  return _internal_parse_errors();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>&
ListVariables_Result::_internal_parse_errors() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parse_errors_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Error>*
ListVariables_Result::_internal_mutable_parse_errors() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.parse_errors_;
}

// -------------------------------------------------------------------

// Variable

// string value = 1;
inline void Variable::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Variable::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Variable.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Variable::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Variable.value)
}
inline std::string* Variable::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Variable.value)
  return _s;
}
inline const std::string& Variable::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Variable::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Variable::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Variable::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Variable.value)
  return _impl_.value_.Release();
}
inline void Variable::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Variable.value)
}

// string type_name = 2;
inline void Variable::clear_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.ClearToEmpty();
}
inline const std::string& Variable::type_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Variable.type_name)
  return _internal_type_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Variable::set_type_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Variable.type_name)
}
inline std::string* Variable::mutable_type_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Variable.type_name)
  return _s;
}
inline const std::string& Variable::_internal_type_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_name_.Get();
}
inline void Variable::_internal_set_type_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.Set(value, GetArena());
}
inline std::string* Variable::_internal_mutable_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_name_.Mutable( GetArena());
}
inline std::string* Variable::release_type_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Variable.type_name)
  return _impl_.type_name_.Release();
}
inline void Variable::set_allocated_type_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_name_.IsDefault()) {
          _impl_.type_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Variable.type_name)
}

// string op_sym = 3;
inline void Variable::clear_op_sym() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_sym_.ClearToEmpty();
}
inline const std::string& Variable::op_sym() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Variable.op_sym)
  return _internal_op_sym();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Variable::set_op_sym(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_sym_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Variable.op_sym)
}
inline std::string* Variable::mutable_op_sym() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_op_sym();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Variable.op_sym)
  return _s;
}
inline const std::string& Variable::_internal_op_sym() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.op_sym_.Get();
}
inline void Variable::_internal_set_op_sym(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_sym_.Set(value, GetArena());
}
inline std::string* Variable::_internal_mutable_op_sym() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.op_sym_.Mutable( GetArena());
}
inline std::string* Variable::release_op_sym() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Variable.op_sym)
  return _impl_.op_sym_.Release();
}
inline void Variable::set_allocated_op_sym(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.op_sym_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.op_sym_.IsDefault()) {
          _impl_.op_sym_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Variable.op_sym)
}

// repeated .com.kcl.api.Variable list_items = 4;
inline int Variable::_internal_list_items_size() const {
  return _internal_list_items().size();
}
inline int Variable::list_items_size() const {
  return _internal_list_items_size();
}
inline void Variable::clear_list_items() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.list_items_.Clear();
}
inline ::com::kcl::api::Variable* Variable::mutable_list_items(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Variable.list_items)
  return _internal_mutable_list_items()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>* Variable::mutable_list_items()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Variable.list_items)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_list_items();
}
inline const ::com::kcl::api::Variable& Variable::list_items(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Variable.list_items)
  return _internal_list_items().Get(index);
}
inline ::com::kcl::api::Variable* Variable::add_list_items() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Variable* _add = _internal_mutable_list_items()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.Variable.list_items)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>& Variable::list_items() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Variable.list_items)
  return _internal_list_items();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>&
Variable::_internal_list_items() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.list_items_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Variable>*
Variable::_internal_mutable_list_items() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.list_items_;
}

// repeated .com.kcl.api.MapEntry dict_entries = 5;
inline int Variable::_internal_dict_entries_size() const {
  return _internal_dict_entries().size();
}
inline int Variable::dict_entries_size() const {
  return _internal_dict_entries_size();
}
inline void Variable::clear_dict_entries() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.dict_entries_.Clear();
}
inline ::com::kcl::api::MapEntry* Variable::mutable_dict_entries(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Variable.dict_entries)
  return _internal_mutable_dict_entries()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::MapEntry>* Variable::mutable_dict_entries()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Variable.dict_entries)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_dict_entries();
}
inline const ::com::kcl::api::MapEntry& Variable::dict_entries(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Variable.dict_entries)
  return _internal_dict_entries().Get(index);
}
inline ::com::kcl::api::MapEntry* Variable::add_dict_entries() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::MapEntry* _add = _internal_mutable_dict_entries()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.Variable.dict_entries)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::MapEntry>& Variable::dict_entries() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Variable.dict_entries)
  return _internal_dict_entries();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::MapEntry>&
Variable::_internal_dict_entries() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.dict_entries_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::MapEntry>*
Variable::_internal_mutable_dict_entries() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.dict_entries_;
}

// -------------------------------------------------------------------

// MapEntry

// string key = 1;
inline void MapEntry::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& MapEntry::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.MapEntry.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void MapEntry::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.MapEntry.key)
}
inline std::string* MapEntry::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.MapEntry.key)
  return _s;
}
inline const std::string& MapEntry::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void MapEntry::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* MapEntry::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* MapEntry::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.MapEntry.key)
  return _impl_.key_.Release();
}
inline void MapEntry::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.MapEntry.key)
}

// .com.kcl.api.Variable value = 2;
inline bool MapEntry::has_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.value_ != nullptr);
  return value;
}
inline void MapEntry::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.value_ != nullptr) _impl_.value_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::Variable& MapEntry::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::Variable* p = _impl_.value_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::Variable&>(::com::kcl::api::_Variable_default_instance_);
}
inline const ::com::kcl::api::Variable& MapEntry::value() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.MapEntry.value)
  return _internal_value();
}
inline void MapEntry::unsafe_arena_set_allocated_value(::com::kcl::api::Variable* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.value_);
  }
  _impl_.value_ = reinterpret_cast<::com::kcl::api::Variable*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.MapEntry.value)
}
inline ::com::kcl::api::Variable* MapEntry::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::Variable* released = _impl_.value_;
  _impl_.value_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::Variable* MapEntry::unsafe_arena_release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.MapEntry.value)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::Variable* temp = _impl_.value_;
  _impl_.value_ = nullptr;
  return temp;
}
inline ::com::kcl::api::Variable* MapEntry::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.value_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::Variable>(GetArena());
    _impl_.value_ = reinterpret_cast<::com::kcl::api::Variable*>(p);
  }
  return _impl_.value_;
}
inline ::com::kcl::api::Variable* MapEntry::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::Variable* _msg = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.MapEntry.value)
  return _msg;
}
inline void MapEntry::set_allocated_value(::com::kcl::api::Variable* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.value_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.value_ = reinterpret_cast<::com::kcl::api::Variable*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.MapEntry.value)
}

// -------------------------------------------------------------------

// GetSchemaTypeMapping_Args

// .com.kcl.api.ExecProgram_Args exec_args = 1;
inline bool GetSchemaTypeMapping_Args::has_exec_args() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.exec_args_ != nullptr);
  return value;
}
inline void GetSchemaTypeMapping_Args::clear_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_args_ != nullptr) _impl_.exec_args_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::ExecProgram_Args& GetSchemaTypeMapping_Args::_internal_exec_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::ExecProgram_Args* p = _impl_.exec_args_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::ExecProgram_Args&>(::com::kcl::api::_ExecProgram_Args_default_instance_);
}
inline const ::com::kcl::api::ExecProgram_Args& GetSchemaTypeMapping_Args::exec_args() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.GetSchemaTypeMapping_Args.exec_args)
  return _internal_exec_args();
}
inline void GetSchemaTypeMapping_Args::unsafe_arena_set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exec_args_);
  }
  _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.GetSchemaTypeMapping_Args.exec_args)
}
inline ::com::kcl::api::ExecProgram_Args* GetSchemaTypeMapping_Args::release_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ExecProgram_Args* released = _impl_.exec_args_;
  _impl_.exec_args_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::ExecProgram_Args* GetSchemaTypeMapping_Args::unsafe_arena_release_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.GetSchemaTypeMapping_Args.exec_args)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ExecProgram_Args* temp = _impl_.exec_args_;
  _impl_.exec_args_ = nullptr;
  return temp;
}
inline ::com::kcl::api::ExecProgram_Args* GetSchemaTypeMapping_Args::_internal_mutable_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_args_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::ExecProgram_Args>(GetArena());
    _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(p);
  }
  return _impl_.exec_args_;
}
inline ::com::kcl::api::ExecProgram_Args* GetSchemaTypeMapping_Args::mutable_exec_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::ExecProgram_Args* _msg = _internal_mutable_exec_args();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.GetSchemaTypeMapping_Args.exec_args)
  return _msg;
}
inline void GetSchemaTypeMapping_Args::set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.exec_args_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.GetSchemaTypeMapping_Args.exec_args)
}

// string schema_name = 2;
inline void GetSchemaTypeMapping_Args::clear_schema_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_name_.ClearToEmpty();
}
inline const std::string& GetSchemaTypeMapping_Args::schema_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.GetSchemaTypeMapping_Args.schema_name)
  return _internal_schema_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void GetSchemaTypeMapping_Args::set_schema_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.GetSchemaTypeMapping_Args.schema_name)
}
inline std::string* GetSchemaTypeMapping_Args::mutable_schema_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_schema_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.GetSchemaTypeMapping_Args.schema_name)
  return _s;
}
inline const std::string& GetSchemaTypeMapping_Args::_internal_schema_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.schema_name_.Get();
}
inline void GetSchemaTypeMapping_Args::_internal_set_schema_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_name_.Set(value, GetArena());
}
inline std::string* GetSchemaTypeMapping_Args::_internal_mutable_schema_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.schema_name_.Mutable( GetArena());
}
inline std::string* GetSchemaTypeMapping_Args::release_schema_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.GetSchemaTypeMapping_Args.schema_name)
  return _impl_.schema_name_.Release();
}
inline void GetSchemaTypeMapping_Args::set_allocated_schema_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.schema_name_.IsDefault()) {
          _impl_.schema_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.GetSchemaTypeMapping_Args.schema_name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// GetSchemaTypeMapping_Result

// map<string, .com.kcl.api.KclType> schema_type_mapping = 1;
inline int GetSchemaTypeMapping_Result::_internal_schema_type_mapping_size() const {
  return _internal_schema_type_mapping().size();
}
inline int GetSchemaTypeMapping_Result::schema_type_mapping_size() const {
  return _internal_schema_type_mapping_size();
}
inline void GetSchemaTypeMapping_Result::clear_schema_type_mapping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_type_mapping_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>& GetSchemaTypeMapping_Result::_internal_schema_type_mapping() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.schema_type_mapping_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>& GetSchemaTypeMapping_Result::schema_type_mapping() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.GetSchemaTypeMapping_Result.schema_type_mapping)
  return _internal_schema_type_mapping();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>* GetSchemaTypeMapping_Result::_internal_mutable_schema_type_mapping() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.schema_type_mapping_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>* GetSchemaTypeMapping_Result::mutable_schema_type_mapping() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.GetSchemaTypeMapping_Result.schema_type_mapping)
  return _internal_mutable_schema_type_mapping();
}

// -------------------------------------------------------------------

// ValidateCode_Args

// string datafile = 1;
inline void ValidateCode_Args::clear_datafile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datafile_.ClearToEmpty();
}
inline const std::string& ValidateCode_Args::datafile() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ValidateCode_Args.datafile)
  return _internal_datafile();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateCode_Args::set_datafile(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datafile_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ValidateCode_Args.datafile)
}
inline std::string* ValidateCode_Args::mutable_datafile() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_datafile();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ValidateCode_Args.datafile)
  return _s;
}
inline const std::string& ValidateCode_Args::_internal_datafile() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.datafile_.Get();
}
inline void ValidateCode_Args::_internal_set_datafile(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datafile_.Set(value, GetArena());
}
inline std::string* ValidateCode_Args::_internal_mutable_datafile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.datafile_.Mutable( GetArena());
}
inline std::string* ValidateCode_Args::release_datafile() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ValidateCode_Args.datafile)
  return _impl_.datafile_.Release();
}
inline void ValidateCode_Args::set_allocated_datafile(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.datafile_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.datafile_.IsDefault()) {
          _impl_.datafile_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ValidateCode_Args.datafile)
}

// string data = 2;
inline void ValidateCode_Args::clear_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.ClearToEmpty();
}
inline const std::string& ValidateCode_Args::data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ValidateCode_Args.data)
  return _internal_data();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateCode_Args::set_data(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ValidateCode_Args.data)
}
inline std::string* ValidateCode_Args::mutable_data() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_data();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ValidateCode_Args.data)
  return _s;
}
inline const std::string& ValidateCode_Args::_internal_data() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.data_.Get();
}
inline void ValidateCode_Args::_internal_set_data(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.Set(value, GetArena());
}
inline std::string* ValidateCode_Args::_internal_mutable_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.data_.Mutable( GetArena());
}
inline std::string* ValidateCode_Args::release_data() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ValidateCode_Args.data)
  return _impl_.data_.Release();
}
inline void ValidateCode_Args::set_allocated_data(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.data_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.data_.IsDefault()) {
          _impl_.data_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ValidateCode_Args.data)
}

// string file = 3;
inline void ValidateCode_Args::clear_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.ClearToEmpty();
}
inline const std::string& ValidateCode_Args::file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ValidateCode_Args.file)
  return _internal_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateCode_Args::set_file(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ValidateCode_Args.file)
}
inline std::string* ValidateCode_Args::mutable_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ValidateCode_Args.file)
  return _s;
}
inline const std::string& ValidateCode_Args::_internal_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_.Get();
}
inline void ValidateCode_Args::_internal_set_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.Set(value, GetArena());
}
inline std::string* ValidateCode_Args::_internal_mutable_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.file_.Mutable( GetArena());
}
inline std::string* ValidateCode_Args::release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ValidateCode_Args.file)
  return _impl_.file_.Release();
}
inline void ValidateCode_Args::set_allocated_file(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_.IsDefault()) {
          _impl_.file_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ValidateCode_Args.file)
}

// string code = 4;
inline void ValidateCode_Args::clear_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.ClearToEmpty();
}
inline const std::string& ValidateCode_Args::code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ValidateCode_Args.code)
  return _internal_code();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateCode_Args::set_code(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ValidateCode_Args.code)
}
inline std::string* ValidateCode_Args::mutable_code() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_code();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ValidateCode_Args.code)
  return _s;
}
inline const std::string& ValidateCode_Args::_internal_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.code_.Get();
}
inline void ValidateCode_Args::_internal_set_code(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.Set(value, GetArena());
}
inline std::string* ValidateCode_Args::_internal_mutable_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.code_.Mutable( GetArena());
}
inline std::string* ValidateCode_Args::release_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ValidateCode_Args.code)
  return _impl_.code_.Release();
}
inline void ValidateCode_Args::set_allocated_code(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.code_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.code_.IsDefault()) {
          _impl_.code_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ValidateCode_Args.code)
}

// string schema = 5;
inline void ValidateCode_Args::clear_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_.ClearToEmpty();
}
inline const std::string& ValidateCode_Args::schema() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ValidateCode_Args.schema)
  return _internal_schema();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateCode_Args::set_schema(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ValidateCode_Args.schema)
}
inline std::string* ValidateCode_Args::mutable_schema() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_schema();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ValidateCode_Args.schema)
  return _s;
}
inline const std::string& ValidateCode_Args::_internal_schema() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.schema_.Get();
}
inline void ValidateCode_Args::_internal_set_schema(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_.Set(value, GetArena());
}
inline std::string* ValidateCode_Args::_internal_mutable_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.schema_.Mutable( GetArena());
}
inline std::string* ValidateCode_Args::release_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ValidateCode_Args.schema)
  return _impl_.schema_.Release();
}
inline void ValidateCode_Args::set_allocated_schema(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.schema_.IsDefault()) {
          _impl_.schema_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ValidateCode_Args.schema)
}

// string attribute_name = 6;
inline void ValidateCode_Args::clear_attribute_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attribute_name_.ClearToEmpty();
}
inline const std::string& ValidateCode_Args::attribute_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ValidateCode_Args.attribute_name)
  return _internal_attribute_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateCode_Args::set_attribute_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attribute_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ValidateCode_Args.attribute_name)
}
inline std::string* ValidateCode_Args::mutable_attribute_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_attribute_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ValidateCode_Args.attribute_name)
  return _s;
}
inline const std::string& ValidateCode_Args::_internal_attribute_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.attribute_name_.Get();
}
inline void ValidateCode_Args::_internal_set_attribute_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attribute_name_.Set(value, GetArena());
}
inline std::string* ValidateCode_Args::_internal_mutable_attribute_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.attribute_name_.Mutable( GetArena());
}
inline std::string* ValidateCode_Args::release_attribute_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ValidateCode_Args.attribute_name)
  return _impl_.attribute_name_.Release();
}
inline void ValidateCode_Args::set_allocated_attribute_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.attribute_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.attribute_name_.IsDefault()) {
          _impl_.attribute_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ValidateCode_Args.attribute_name)
}

// string format = 7;
inline void ValidateCode_Args::clear_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.ClearToEmpty();
}
inline const std::string& ValidateCode_Args::format() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ValidateCode_Args.format)
  return _internal_format();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateCode_Args::set_format(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ValidateCode_Args.format)
}
inline std::string* ValidateCode_Args::mutable_format() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_format();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ValidateCode_Args.format)
  return _s;
}
inline const std::string& ValidateCode_Args::_internal_format() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.format_.Get();
}
inline void ValidateCode_Args::_internal_set_format(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.Set(value, GetArena());
}
inline std::string* ValidateCode_Args::_internal_mutable_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.format_.Mutable( GetArena());
}
inline std::string* ValidateCode_Args::release_format() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ValidateCode_Args.format)
  return _impl_.format_.Release();
}
inline void ValidateCode_Args::set_allocated_format(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.format_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.format_.IsDefault()) {
          _impl_.format_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ValidateCode_Args.format)
}

// -------------------------------------------------------------------

// ValidateCode_Result

// bool success = 1;
inline void ValidateCode_Result::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
}
inline bool ValidateCode_Result::success() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ValidateCode_Result.success)
  return _internal_success();
}
inline void ValidateCode_Result::set_success(bool value) {
  _internal_set_success(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ValidateCode_Result.success)
}
inline bool ValidateCode_Result::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void ValidateCode_Result::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

// string err_message = 2;
inline void ValidateCode_Result::clear_err_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_message_.ClearToEmpty();
}
inline const std::string& ValidateCode_Result::err_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ValidateCode_Result.err_message)
  return _internal_err_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ValidateCode_Result::set_err_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ValidateCode_Result.err_message)
}
inline std::string* ValidateCode_Result::mutable_err_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_err_message();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ValidateCode_Result.err_message)
  return _s;
}
inline const std::string& ValidateCode_Result::_internal_err_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.err_message_.Get();
}
inline void ValidateCode_Result::_internal_set_err_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_message_.Set(value, GetArena());
}
inline std::string* ValidateCode_Result::_internal_mutable_err_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.err_message_.Mutable( GetArena());
}
inline std::string* ValidateCode_Result::release_err_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ValidateCode_Result.err_message)
  return _impl_.err_message_.Release();
}
inline void ValidateCode_Result::set_allocated_err_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.err_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.err_message_.IsDefault()) {
          _impl_.err_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ValidateCode_Result.err_message)
}

// -------------------------------------------------------------------

// Position

// int64 line = 1;
inline void Position::clear_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.line_ = ::int64_t{0};
}
inline ::int64_t Position::line() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.Position.line)
  return _internal_line();
}
inline void Position::set_line(::int64_t value) {
  _internal_set_line(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.Position.line)
}
inline ::int64_t Position::_internal_line() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.line_;
}
inline void Position::_internal_set_line(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.line_ = value;
}

// int64 column = 2;
inline void Position::clear_column() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.column_ = ::int64_t{0};
}
inline ::int64_t Position::column() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.Position.column)
  return _internal_column();
}
inline void Position::set_column(::int64_t value) {
  _internal_set_column(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.Position.column)
}
inline ::int64_t Position::_internal_column() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.column_;
}
inline void Position::_internal_set_column(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.column_ = value;
}

// string filename = 3;
inline void Position::clear_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.ClearToEmpty();
}
inline const std::string& Position::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Position.filename)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Position::set_filename(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Position.filename)
}
inline std::string* Position::mutable_filename() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Position.filename)
  return _s;
}
inline const std::string& Position::_internal_filename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filename_.Get();
}
inline void Position::_internal_set_filename(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(value, GetArena());
}
inline std::string* Position::_internal_mutable_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.filename_.Mutable( GetArena());
}
inline std::string* Position::release_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Position.filename)
  return _impl_.filename_.Release();
}
inline void Position::set_allocated_filename(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filename_.IsDefault()) {
          _impl_.filename_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Position.filename)
}

// -------------------------------------------------------------------

// ListDepFiles_Args

// string work_dir = 1;
inline void ListDepFiles_Args::clear_work_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.ClearToEmpty();
}
inline const std::string& ListDepFiles_Args::work_dir() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListDepFiles_Args.work_dir)
  return _internal_work_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListDepFiles_Args::set_work_dir(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ListDepFiles_Args.work_dir)
}
inline std::string* ListDepFiles_Args::mutable_work_dir() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_work_dir();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListDepFiles_Args.work_dir)
  return _s;
}
inline const std::string& ListDepFiles_Args::_internal_work_dir() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.work_dir_.Get();
}
inline void ListDepFiles_Args::_internal_set_work_dir(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.Set(value, GetArena());
}
inline std::string* ListDepFiles_Args::_internal_mutable_work_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.work_dir_.Mutable( GetArena());
}
inline std::string* ListDepFiles_Args::release_work_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ListDepFiles_Args.work_dir)
  return _impl_.work_dir_.Release();
}
inline void ListDepFiles_Args::set_allocated_work_dir(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.work_dir_.IsDefault()) {
          _impl_.work_dir_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ListDepFiles_Args.work_dir)
}

// bool use_abs_path = 2;
inline void ListDepFiles_Args::clear_use_abs_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_abs_path_ = false;
}
inline bool ListDepFiles_Args::use_abs_path() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListDepFiles_Args.use_abs_path)
  return _internal_use_abs_path();
}
inline void ListDepFiles_Args::set_use_abs_path(bool value) {
  _internal_set_use_abs_path(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ListDepFiles_Args.use_abs_path)
}
inline bool ListDepFiles_Args::_internal_use_abs_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_abs_path_;
}
inline void ListDepFiles_Args::_internal_set_use_abs_path(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_abs_path_ = value;
}

// bool include_all = 3;
inline void ListDepFiles_Args::clear_include_all() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_all_ = false;
}
inline bool ListDepFiles_Args::include_all() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListDepFiles_Args.include_all)
  return _internal_include_all();
}
inline void ListDepFiles_Args::set_include_all(bool value) {
  _internal_set_include_all(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ListDepFiles_Args.include_all)
}
inline bool ListDepFiles_Args::_internal_include_all() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_all_;
}
inline void ListDepFiles_Args::_internal_set_include_all(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_all_ = value;
}

// bool use_fast_parser = 4;
inline void ListDepFiles_Args::clear_use_fast_parser() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_fast_parser_ = false;
}
inline bool ListDepFiles_Args::use_fast_parser() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListDepFiles_Args.use_fast_parser)
  return _internal_use_fast_parser();
}
inline void ListDepFiles_Args::set_use_fast_parser(bool value) {
  _internal_set_use_fast_parser(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ListDepFiles_Args.use_fast_parser)
}
inline bool ListDepFiles_Args::_internal_use_fast_parser() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.use_fast_parser_;
}
inline void ListDepFiles_Args::_internal_set_use_fast_parser(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.use_fast_parser_ = value;
}

// -------------------------------------------------------------------

// ListDepFiles_Result

// string pkgroot = 1;
inline void ListDepFiles_Result::clear_pkgroot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgroot_.ClearToEmpty();
}
inline const std::string& ListDepFiles_Result::pkgroot() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListDepFiles_Result.pkgroot)
  return _internal_pkgroot();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListDepFiles_Result::set_pkgroot(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgroot_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ListDepFiles_Result.pkgroot)
}
inline std::string* ListDepFiles_Result::mutable_pkgroot() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pkgroot();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListDepFiles_Result.pkgroot)
  return _s;
}
inline const std::string& ListDepFiles_Result::_internal_pkgroot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pkgroot_.Get();
}
inline void ListDepFiles_Result::_internal_set_pkgroot(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgroot_.Set(value, GetArena());
}
inline std::string* ListDepFiles_Result::_internal_mutable_pkgroot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pkgroot_.Mutable( GetArena());
}
inline std::string* ListDepFiles_Result::release_pkgroot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ListDepFiles_Result.pkgroot)
  return _impl_.pkgroot_.Release();
}
inline void ListDepFiles_Result::set_allocated_pkgroot(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgroot_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pkgroot_.IsDefault()) {
          _impl_.pkgroot_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ListDepFiles_Result.pkgroot)
}

// string pkgpath = 2;
inline void ListDepFiles_Result::clear_pkgpath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgpath_.ClearToEmpty();
}
inline const std::string& ListDepFiles_Result::pkgpath() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListDepFiles_Result.pkgpath)
  return _internal_pkgpath();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ListDepFiles_Result::set_pkgpath(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgpath_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.ListDepFiles_Result.pkgpath)
}
inline std::string* ListDepFiles_Result::mutable_pkgpath() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pkgpath();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListDepFiles_Result.pkgpath)
  return _s;
}
inline const std::string& ListDepFiles_Result::_internal_pkgpath() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pkgpath_.Get();
}
inline void ListDepFiles_Result::_internal_set_pkgpath(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgpath_.Set(value, GetArena());
}
inline std::string* ListDepFiles_Result::_internal_mutable_pkgpath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pkgpath_.Mutable( GetArena());
}
inline std::string* ListDepFiles_Result::release_pkgpath() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.ListDepFiles_Result.pkgpath)
  return _impl_.pkgpath_.Release();
}
inline void ListDepFiles_Result::set_allocated_pkgpath(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkgpath_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pkgpath_.IsDefault()) {
          _impl_.pkgpath_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.ListDepFiles_Result.pkgpath)
}

// repeated string files = 3;
inline int ListDepFiles_Result::_internal_files_size() const {
  return _internal_files().size();
}
inline int ListDepFiles_Result::files_size() const {
  return _internal_files_size();
}
inline void ListDepFiles_Result::clear_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.files_.Clear();
}
inline std::string* ListDepFiles_Result::add_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.ListDepFiles_Result.files)
  return _s;
}
inline const std::string& ListDepFiles_Result::files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.ListDepFiles_Result.files)
  return _internal_files().Get(index);
}
inline std::string* ListDepFiles_Result::mutable_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.ListDepFiles_Result.files)
  return _internal_mutable_files()->Mutable(index);
}
inline void ListDepFiles_Result::set_files(int index, const std::string& value) {
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.ListDepFiles_Result.files)
}
inline void ListDepFiles_Result::set_files(int index, std::string&& value) {
  _internal_mutable_files()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.ListDepFiles_Result.files)
}
inline void ListDepFiles_Result::set_files(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.ListDepFiles_Result.files)
}
inline void ListDepFiles_Result::set_files(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_files()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.ListDepFiles_Result.files)
}
inline void ListDepFiles_Result::set_files(int index, absl::string_view value) {
  _internal_mutable_files()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.ListDepFiles_Result.files)
}
inline void ListDepFiles_Result::add_files(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.ListDepFiles_Result.files)
}
inline void ListDepFiles_Result::add_files(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.ListDepFiles_Result.files)
}
inline void ListDepFiles_Result::add_files(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.ListDepFiles_Result.files)
}
inline void ListDepFiles_Result::add_files(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.ListDepFiles_Result.files)
}
inline void ListDepFiles_Result::add_files(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.ListDepFiles_Result.files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListDepFiles_Result::files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.ListDepFiles_Result.files)
  return _internal_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListDepFiles_Result::mutable_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.ListDepFiles_Result.files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
ListDepFiles_Result::_internal_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
ListDepFiles_Result::_internal_mutable_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.files_;
}

// -------------------------------------------------------------------

// LoadSettingsFiles_Args

// string work_dir = 1;
inline void LoadSettingsFiles_Args::clear_work_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.ClearToEmpty();
}
inline const std::string& LoadSettingsFiles_Args::work_dir() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadSettingsFiles_Args.work_dir)
  return _internal_work_dir();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void LoadSettingsFiles_Args::set_work_dir(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.LoadSettingsFiles_Args.work_dir)
}
inline std::string* LoadSettingsFiles_Args::mutable_work_dir() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_work_dir();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LoadSettingsFiles_Args.work_dir)
  return _s;
}
inline const std::string& LoadSettingsFiles_Args::_internal_work_dir() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.work_dir_.Get();
}
inline void LoadSettingsFiles_Args::_internal_set_work_dir(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.Set(value, GetArena());
}
inline std::string* LoadSettingsFiles_Args::_internal_mutable_work_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.work_dir_.Mutable( GetArena());
}
inline std::string* LoadSettingsFiles_Args::release_work_dir() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.LoadSettingsFiles_Args.work_dir)
  return _impl_.work_dir_.Release();
}
inline void LoadSettingsFiles_Args::set_allocated_work_dir(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.work_dir_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.work_dir_.IsDefault()) {
          _impl_.work_dir_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.LoadSettingsFiles_Args.work_dir)
}

// repeated string files = 2;
inline int LoadSettingsFiles_Args::_internal_files_size() const {
  return _internal_files().size();
}
inline int LoadSettingsFiles_Args::files_size() const {
  return _internal_files_size();
}
inline void LoadSettingsFiles_Args::clear_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.files_.Clear();
}
inline std::string* LoadSettingsFiles_Args::add_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.LoadSettingsFiles_Args.files)
  return _s;
}
inline const std::string& LoadSettingsFiles_Args::files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadSettingsFiles_Args.files)
  return _internal_files().Get(index);
}
inline std::string* LoadSettingsFiles_Args::mutable_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LoadSettingsFiles_Args.files)
  return _internal_mutable_files()->Mutable(index);
}
inline void LoadSettingsFiles_Args::set_files(int index, const std::string& value) {
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline void LoadSettingsFiles_Args::set_files(int index, std::string&& value) {
  _internal_mutable_files()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline void LoadSettingsFiles_Args::set_files(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline void LoadSettingsFiles_Args::set_files(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_files()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline void LoadSettingsFiles_Args::set_files(int index, absl::string_view value) {
  _internal_mutable_files()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline void LoadSettingsFiles_Args::add_files(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline void LoadSettingsFiles_Args::add_files(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline void LoadSettingsFiles_Args::add_files(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline void LoadSettingsFiles_Args::add_files(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline void LoadSettingsFiles_Args::add_files(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.LoadSettingsFiles_Args.files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LoadSettingsFiles_Args::files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.LoadSettingsFiles_Args.files)
  return _internal_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LoadSettingsFiles_Args::mutable_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.LoadSettingsFiles_Args.files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
LoadSettingsFiles_Args::_internal_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
LoadSettingsFiles_Args::_internal_mutable_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.files_;
}

// -------------------------------------------------------------------

// LoadSettingsFiles_Result

// .com.kcl.api.CliConfig kcl_cli_configs = 1;
inline bool LoadSettingsFiles_Result::has_kcl_cli_configs() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.kcl_cli_configs_ != nullptr);
  return value;
}
inline void LoadSettingsFiles_Result::clear_kcl_cli_configs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.kcl_cli_configs_ != nullptr) _impl_.kcl_cli_configs_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::CliConfig& LoadSettingsFiles_Result::_internal_kcl_cli_configs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::CliConfig* p = _impl_.kcl_cli_configs_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::CliConfig&>(::com::kcl::api::_CliConfig_default_instance_);
}
inline const ::com::kcl::api::CliConfig& LoadSettingsFiles_Result::kcl_cli_configs() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadSettingsFiles_Result.kcl_cli_configs)
  return _internal_kcl_cli_configs();
}
inline void LoadSettingsFiles_Result::unsafe_arena_set_allocated_kcl_cli_configs(::com::kcl::api::CliConfig* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.kcl_cli_configs_);
  }
  _impl_.kcl_cli_configs_ = reinterpret_cast<::com::kcl::api::CliConfig*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.LoadSettingsFiles_Result.kcl_cli_configs)
}
inline ::com::kcl::api::CliConfig* LoadSettingsFiles_Result::release_kcl_cli_configs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::CliConfig* released = _impl_.kcl_cli_configs_;
  _impl_.kcl_cli_configs_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::CliConfig* LoadSettingsFiles_Result::unsafe_arena_release_kcl_cli_configs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.LoadSettingsFiles_Result.kcl_cli_configs)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::CliConfig* temp = _impl_.kcl_cli_configs_;
  _impl_.kcl_cli_configs_ = nullptr;
  return temp;
}
inline ::com::kcl::api::CliConfig* LoadSettingsFiles_Result::_internal_mutable_kcl_cli_configs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.kcl_cli_configs_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::CliConfig>(GetArena());
    _impl_.kcl_cli_configs_ = reinterpret_cast<::com::kcl::api::CliConfig*>(p);
  }
  return _impl_.kcl_cli_configs_;
}
inline ::com::kcl::api::CliConfig* LoadSettingsFiles_Result::mutable_kcl_cli_configs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::CliConfig* _msg = _internal_mutable_kcl_cli_configs();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LoadSettingsFiles_Result.kcl_cli_configs)
  return _msg;
}
inline void LoadSettingsFiles_Result::set_allocated_kcl_cli_configs(::com::kcl::api::CliConfig* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.kcl_cli_configs_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.kcl_cli_configs_ = reinterpret_cast<::com::kcl::api::CliConfig*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.LoadSettingsFiles_Result.kcl_cli_configs)
}

// repeated .com.kcl.api.KeyValuePair kcl_options = 2;
inline int LoadSettingsFiles_Result::_internal_kcl_options_size() const {
  return _internal_kcl_options().size();
}
inline int LoadSettingsFiles_Result::kcl_options_size() const {
  return _internal_kcl_options_size();
}
inline void LoadSettingsFiles_Result::clear_kcl_options() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.kcl_options_.Clear();
}
inline ::com::kcl::api::KeyValuePair* LoadSettingsFiles_Result::mutable_kcl_options(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.LoadSettingsFiles_Result.kcl_options)
  return _internal_mutable_kcl_options()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::KeyValuePair>* LoadSettingsFiles_Result::mutable_kcl_options()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.LoadSettingsFiles_Result.kcl_options)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_kcl_options();
}
inline const ::com::kcl::api::KeyValuePair& LoadSettingsFiles_Result::kcl_options(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.LoadSettingsFiles_Result.kcl_options)
  return _internal_kcl_options().Get(index);
}
inline ::com::kcl::api::KeyValuePair* LoadSettingsFiles_Result::add_kcl_options() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::KeyValuePair* _add = _internal_mutable_kcl_options()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.LoadSettingsFiles_Result.kcl_options)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::KeyValuePair>& LoadSettingsFiles_Result::kcl_options() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.LoadSettingsFiles_Result.kcl_options)
  return _internal_kcl_options();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::KeyValuePair>&
LoadSettingsFiles_Result::_internal_kcl_options() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.kcl_options_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::KeyValuePair>*
LoadSettingsFiles_Result::_internal_mutable_kcl_options() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.kcl_options_;
}

// -------------------------------------------------------------------

// CliConfig

// repeated string files = 1;
inline int CliConfig::_internal_files_size() const {
  return _internal_files().size();
}
inline int CliConfig::files_size() const {
  return _internal_files_size();
}
inline void CliConfig::clear_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.files_.Clear();
}
inline std::string* CliConfig::add_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.CliConfig.files)
  return _s;
}
inline const std::string& CliConfig::files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.files)
  return _internal_files().Get(index);
}
inline std::string* CliConfig::mutable_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.CliConfig.files)
  return _internal_mutable_files()->Mutable(index);
}
inline void CliConfig::set_files(int index, const std::string& value) {
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.files)
}
inline void CliConfig::set_files(int index, std::string&& value) {
  _internal_mutable_files()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.files)
}
inline void CliConfig::set_files(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.CliConfig.files)
}
inline void CliConfig::set_files(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_files()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.CliConfig.files)
}
inline void CliConfig::set_files(int index, absl::string_view value) {
  _internal_mutable_files()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.CliConfig.files)
}
inline void CliConfig::add_files(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.CliConfig.files)
}
inline void CliConfig::add_files(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.CliConfig.files)
}
inline void CliConfig::add_files(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.CliConfig.files)
}
inline void CliConfig::add_files(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.CliConfig.files)
}
inline void CliConfig::add_files(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_files()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.CliConfig.files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CliConfig::files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.CliConfig.files)
  return _internal_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CliConfig::mutable_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.CliConfig.files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CliConfig::_internal_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CliConfig::_internal_mutable_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.files_;
}

// string output = 2;
inline void CliConfig::clear_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.ClearToEmpty();
}
inline const std::string& CliConfig::output() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.output)
  return _internal_output();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void CliConfig::set_output(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.output)
}
inline std::string* CliConfig::mutable_output() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_output();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.CliConfig.output)
  return _s;
}
inline const std::string& CliConfig::_internal_output() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.output_.Get();
}
inline void CliConfig::_internal_set_output(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.Set(value, GetArena());
}
inline std::string* CliConfig::_internal_mutable_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.output_.Mutable( GetArena());
}
inline std::string* CliConfig::release_output() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.CliConfig.output)
  return _impl_.output_.Release();
}
inline void CliConfig::set_allocated_output(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.output_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.output_.IsDefault()) {
          _impl_.output_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.CliConfig.output)
}

// repeated string overrides = 3;
inline int CliConfig::_internal_overrides_size() const {
  return _internal_overrides().size();
}
inline int CliConfig::overrides_size() const {
  return _internal_overrides_size();
}
inline void CliConfig::clear_overrides() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.overrides_.Clear();
}
inline std::string* CliConfig::add_overrides()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_overrides()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.CliConfig.overrides)
  return _s;
}
inline const std::string& CliConfig::overrides(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.overrides)
  return _internal_overrides().Get(index);
}
inline std::string* CliConfig::mutable_overrides(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.CliConfig.overrides)
  return _internal_mutable_overrides()->Mutable(index);
}
inline void CliConfig::set_overrides(int index, const std::string& value) {
  _internal_mutable_overrides()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.overrides)
}
inline void CliConfig::set_overrides(int index, std::string&& value) {
  _internal_mutable_overrides()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.overrides)
}
inline void CliConfig::set_overrides(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_overrides()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.CliConfig.overrides)
}
inline void CliConfig::set_overrides(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_overrides()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.CliConfig.overrides)
}
inline void CliConfig::set_overrides(int index, absl::string_view value) {
  _internal_mutable_overrides()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.CliConfig.overrides)
}
inline void CliConfig::add_overrides(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.CliConfig.overrides)
}
inline void CliConfig::add_overrides(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.CliConfig.overrides)
}
inline void CliConfig::add_overrides(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.CliConfig.overrides)
}
inline void CliConfig::add_overrides(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.CliConfig.overrides)
}
inline void CliConfig::add_overrides(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_overrides()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.CliConfig.overrides)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CliConfig::overrides() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.CliConfig.overrides)
  return _internal_overrides();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CliConfig::mutable_overrides() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.CliConfig.overrides)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_overrides();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CliConfig::_internal_overrides() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.overrides_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CliConfig::_internal_mutable_overrides() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.overrides_;
}

// repeated string path_selector = 4;
inline int CliConfig::_internal_path_selector_size() const {
  return _internal_path_selector().size();
}
inline int CliConfig::path_selector_size() const {
  return _internal_path_selector_size();
}
inline void CliConfig::clear_path_selector() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.path_selector_.Clear();
}
inline std::string* CliConfig::add_path_selector()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_path_selector()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.CliConfig.path_selector)
  return _s;
}
inline const std::string& CliConfig::path_selector(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.path_selector)
  return _internal_path_selector().Get(index);
}
inline std::string* CliConfig::mutable_path_selector(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.CliConfig.path_selector)
  return _internal_mutable_path_selector()->Mutable(index);
}
inline void CliConfig::set_path_selector(int index, const std::string& value) {
  _internal_mutable_path_selector()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.path_selector)
}
inline void CliConfig::set_path_selector(int index, std::string&& value) {
  _internal_mutable_path_selector()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.path_selector)
}
inline void CliConfig::set_path_selector(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_path_selector()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.CliConfig.path_selector)
}
inline void CliConfig::set_path_selector(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_path_selector()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.CliConfig.path_selector)
}
inline void CliConfig::set_path_selector(int index, absl::string_view value) {
  _internal_mutable_path_selector()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.CliConfig.path_selector)
}
inline void CliConfig::add_path_selector(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.CliConfig.path_selector)
}
inline void CliConfig::add_path_selector(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.CliConfig.path_selector)
}
inline void CliConfig::add_path_selector(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.CliConfig.path_selector)
}
inline void CliConfig::add_path_selector(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.CliConfig.path_selector)
}
inline void CliConfig::add_path_selector(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_path_selector()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.CliConfig.path_selector)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CliConfig::path_selector() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.CliConfig.path_selector)
  return _internal_path_selector();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CliConfig::mutable_path_selector() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.CliConfig.path_selector)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_path_selector();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
CliConfig::_internal_path_selector() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.path_selector_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
CliConfig::_internal_mutable_path_selector() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.path_selector_;
}

// bool strict_range_check = 5;
inline void CliConfig::clear_strict_range_check() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strict_range_check_ = false;
}
inline bool CliConfig::strict_range_check() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.strict_range_check)
  return _internal_strict_range_check();
}
inline void CliConfig::set_strict_range_check(bool value) {
  _internal_set_strict_range_check(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.strict_range_check)
}
inline bool CliConfig::_internal_strict_range_check() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.strict_range_check_;
}
inline void CliConfig::_internal_set_strict_range_check(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.strict_range_check_ = value;
}

// bool disable_none = 6;
inline void CliConfig::clear_disable_none() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_none_ = false;
}
inline bool CliConfig::disable_none() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.disable_none)
  return _internal_disable_none();
}
inline void CliConfig::set_disable_none(bool value) {
  _internal_set_disable_none(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.disable_none)
}
inline bool CliConfig::_internal_disable_none() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.disable_none_;
}
inline void CliConfig::_internal_set_disable_none(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.disable_none_ = value;
}

// int64 verbose = 7;
inline void CliConfig::clear_verbose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verbose_ = ::int64_t{0};
}
inline ::int64_t CliConfig::verbose() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.verbose)
  return _internal_verbose();
}
inline void CliConfig::set_verbose(::int64_t value) {
  _internal_set_verbose(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.verbose)
}
inline ::int64_t CliConfig::_internal_verbose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.verbose_;
}
inline void CliConfig::_internal_set_verbose(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.verbose_ = value;
}

// bool debug = 8;
inline void CliConfig::clear_debug() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.debug_ = false;
}
inline bool CliConfig::debug() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.debug)
  return _internal_debug();
}
inline void CliConfig::set_debug(bool value) {
  _internal_set_debug(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.debug)
}
inline bool CliConfig::_internal_debug() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.debug_;
}
inline void CliConfig::_internal_set_debug(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.debug_ = value;
}

// bool sort_keys = 9;
inline void CliConfig::clear_sort_keys() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_keys_ = false;
}
inline bool CliConfig::sort_keys() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.sort_keys)
  return _internal_sort_keys();
}
inline void CliConfig::set_sort_keys(bool value) {
  _internal_set_sort_keys(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.sort_keys)
}
inline bool CliConfig::_internal_sort_keys() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sort_keys_;
}
inline void CliConfig::_internal_set_sort_keys(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sort_keys_ = value;
}

// bool show_hidden = 10;
inline void CliConfig::clear_show_hidden() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_hidden_ = false;
}
inline bool CliConfig::show_hidden() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.show_hidden)
  return _internal_show_hidden();
}
inline void CliConfig::set_show_hidden(bool value) {
  _internal_set_show_hidden(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.show_hidden)
}
inline bool CliConfig::_internal_show_hidden() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.show_hidden_;
}
inline void CliConfig::_internal_set_show_hidden(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.show_hidden_ = value;
}

// bool include_schema_type_path = 11;
inline void CliConfig::clear_include_schema_type_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_schema_type_path_ = false;
}
inline bool CliConfig::include_schema_type_path() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.include_schema_type_path)
  return _internal_include_schema_type_path();
}
inline void CliConfig::set_include_schema_type_path(bool value) {
  _internal_set_include_schema_type_path(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.include_schema_type_path)
}
inline bool CliConfig::_internal_include_schema_type_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.include_schema_type_path_;
}
inline void CliConfig::_internal_set_include_schema_type_path(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.include_schema_type_path_ = value;
}

// bool fast_eval = 12;
inline void CliConfig::clear_fast_eval() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_eval_ = false;
}
inline bool CliConfig::fast_eval() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.CliConfig.fast_eval)
  return _internal_fast_eval();
}
inline void CliConfig::set_fast_eval(bool value) {
  _internal_set_fast_eval(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.CliConfig.fast_eval)
}
inline bool CliConfig::_internal_fast_eval() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fast_eval_;
}
inline void CliConfig::_internal_set_fast_eval(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fast_eval_ = value;
}

// -------------------------------------------------------------------

// KeyValuePair

// string key = 1;
inline void KeyValuePair::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.ClearToEmpty();
}
inline const std::string& KeyValuePair::key() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KeyValuePair.key)
  return _internal_key();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KeyValuePair::set_key(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.KeyValuePair.key)
}
inline std::string* KeyValuePair::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KeyValuePair.key)
  return _s;
}
inline const std::string& KeyValuePair::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.key_.Get();
}
inline void KeyValuePair::_internal_set_key(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.Set(value, GetArena());
}
inline std::string* KeyValuePair::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.key_.Mutable( GetArena());
}
inline std::string* KeyValuePair::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KeyValuePair.key)
  return _impl_.key_.Release();
}
inline void KeyValuePair::set_allocated_key(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.key_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.key_.IsDefault()) {
          _impl_.key_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KeyValuePair.key)
}

// string value = 2;
inline void KeyValuePair::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& KeyValuePair::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KeyValuePair.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KeyValuePair::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.KeyValuePair.value)
}
inline std::string* KeyValuePair::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KeyValuePair.value)
  return _s;
}
inline const std::string& KeyValuePair::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void KeyValuePair::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* KeyValuePair::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* KeyValuePair::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KeyValuePair.value)
  return _impl_.value_.Release();
}
inline void KeyValuePair::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KeyValuePair.value)
}

// -------------------------------------------------------------------

// Rename_Args

// string package_root = 1;
inline void Rename_Args::clear_package_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_root_.ClearToEmpty();
}
inline const std::string& Rename_Args::package_root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Rename_Args.package_root)
  return _internal_package_root();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Rename_Args::set_package_root(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Rename_Args.package_root)
}
inline std::string* Rename_Args::mutable_package_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_package_root();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Rename_Args.package_root)
  return _s;
}
inline const std::string& Rename_Args::_internal_package_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.package_root_.Get();
}
inline void Rename_Args::_internal_set_package_root(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_root_.Set(value, GetArena());
}
inline std::string* Rename_Args::_internal_mutable_package_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.package_root_.Mutable( GetArena());
}
inline std::string* Rename_Args::release_package_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Rename_Args.package_root)
  return _impl_.package_root_.Release();
}
inline void Rename_Args::set_allocated_package_root(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_root_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.package_root_.IsDefault()) {
          _impl_.package_root_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Rename_Args.package_root)
}

// string symbol_path = 2;
inline void Rename_Args::clear_symbol_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_path_.ClearToEmpty();
}
inline const std::string& Rename_Args::symbol_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Rename_Args.symbol_path)
  return _internal_symbol_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Rename_Args::set_symbol_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Rename_Args.symbol_path)
}
inline std::string* Rename_Args::mutable_symbol_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_symbol_path();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Rename_Args.symbol_path)
  return _s;
}
inline const std::string& Rename_Args::_internal_symbol_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.symbol_path_.Get();
}
inline void Rename_Args::_internal_set_symbol_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_path_.Set(value, GetArena());
}
inline std::string* Rename_Args::_internal_mutable_symbol_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.symbol_path_.Mutable( GetArena());
}
inline std::string* Rename_Args::release_symbol_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Rename_Args.symbol_path)
  return _impl_.symbol_path_.Release();
}
inline void Rename_Args::set_allocated_symbol_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.symbol_path_.IsDefault()) {
          _impl_.symbol_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Rename_Args.symbol_path)
}

// repeated string file_paths = 3;
inline int Rename_Args::_internal_file_paths_size() const {
  return _internal_file_paths().size();
}
inline int Rename_Args::file_paths_size() const {
  return _internal_file_paths_size();
}
inline void Rename_Args::clear_file_paths() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_paths_.Clear();
}
inline std::string* Rename_Args::add_file_paths()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_file_paths()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.Rename_Args.file_paths)
  return _s;
}
inline const std::string& Rename_Args::file_paths(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Rename_Args.file_paths)
  return _internal_file_paths().Get(index);
}
inline std::string* Rename_Args::mutable_file_paths(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Rename_Args.file_paths)
  return _internal_mutable_file_paths()->Mutable(index);
}
inline void Rename_Args::set_file_paths(int index, const std::string& value) {
  _internal_mutable_file_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.Rename_Args.file_paths)
}
inline void Rename_Args::set_file_paths(int index, std::string&& value) {
  _internal_mutable_file_paths()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.Rename_Args.file_paths)
}
inline void Rename_Args::set_file_paths(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_file_paths()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.Rename_Args.file_paths)
}
inline void Rename_Args::set_file_paths(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_file_paths()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.Rename_Args.file_paths)
}
inline void Rename_Args::set_file_paths(int index, absl::string_view value) {
  _internal_mutable_file_paths()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.Rename_Args.file_paths)
}
inline void Rename_Args::add_file_paths(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_file_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.Rename_Args.file_paths)
}
inline void Rename_Args::add_file_paths(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_file_paths()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.Rename_Args.file_paths)
}
inline void Rename_Args::add_file_paths(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_file_paths()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.Rename_Args.file_paths)
}
inline void Rename_Args::add_file_paths(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_file_paths()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.Rename_Args.file_paths)
}
inline void Rename_Args::add_file_paths(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_file_paths()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.Rename_Args.file_paths)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Rename_Args::file_paths() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Rename_Args.file_paths)
  return _internal_file_paths();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Rename_Args::mutable_file_paths() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Rename_Args.file_paths)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_file_paths();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Rename_Args::_internal_file_paths() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_paths_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Rename_Args::_internal_mutable_file_paths() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.file_paths_;
}

// string new_name = 4;
inline void Rename_Args::clear_new_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.ClearToEmpty();
}
inline const std::string& Rename_Args::new_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Rename_Args.new_name)
  return _internal_new_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Rename_Args::set_new_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Rename_Args.new_name)
}
inline std::string* Rename_Args::mutable_new_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Rename_Args.new_name)
  return _s;
}
inline const std::string& Rename_Args::_internal_new_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_name_.Get();
}
inline void Rename_Args::_internal_set_new_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.Set(value, GetArena());
}
inline std::string* Rename_Args::_internal_mutable_new_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_name_.Mutable( GetArena());
}
inline std::string* Rename_Args::release_new_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Rename_Args.new_name)
  return _impl_.new_name_.Release();
}
inline void Rename_Args::set_allocated_new_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.new_name_.IsDefault()) {
          _impl_.new_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Rename_Args.new_name)
}

// -------------------------------------------------------------------

// Rename_Result

// repeated string changed_files = 1;
inline int Rename_Result::_internal_changed_files_size() const {
  return _internal_changed_files().size();
}
inline int Rename_Result::changed_files_size() const {
  return _internal_changed_files_size();
}
inline void Rename_Result::clear_changed_files() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changed_files_.Clear();
}
inline std::string* Rename_Result::add_changed_files()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_changed_files()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.Rename_Result.changed_files)
  return _s;
}
inline const std::string& Rename_Result::changed_files(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Rename_Result.changed_files)
  return _internal_changed_files().Get(index);
}
inline std::string* Rename_Result::mutable_changed_files(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Rename_Result.changed_files)
  return _internal_mutable_changed_files()->Mutable(index);
}
inline void Rename_Result::set_changed_files(int index, const std::string& value) {
  _internal_mutable_changed_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.Rename_Result.changed_files)
}
inline void Rename_Result::set_changed_files(int index, std::string&& value) {
  _internal_mutable_changed_files()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.Rename_Result.changed_files)
}
inline void Rename_Result::set_changed_files(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_changed_files()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.Rename_Result.changed_files)
}
inline void Rename_Result::set_changed_files(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_changed_files()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.Rename_Result.changed_files)
}
inline void Rename_Result::set_changed_files(int index, absl::string_view value) {
  _internal_mutable_changed_files()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.Rename_Result.changed_files)
}
inline void Rename_Result::add_changed_files(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.Rename_Result.changed_files)
}
inline void Rename_Result::add_changed_files(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_files()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.Rename_Result.changed_files)
}
inline void Rename_Result::add_changed_files(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_files()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.Rename_Result.changed_files)
}
inline void Rename_Result::add_changed_files(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_files()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.Rename_Result.changed_files)
}
inline void Rename_Result::add_changed_files(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_changed_files()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.Rename_Result.changed_files)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Rename_Result::changed_files() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Rename_Result.changed_files)
  return _internal_changed_files();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Rename_Result::mutable_changed_files() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Rename_Result.changed_files)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_changed_files();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Rename_Result::_internal_changed_files() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.changed_files_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Rename_Result::_internal_mutable_changed_files() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.changed_files_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RenameCode_Args

// string package_root = 1;
inline void RenameCode_Args::clear_package_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_root_.ClearToEmpty();
}
inline const std::string& RenameCode_Args::package_root() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.RenameCode_Args.package_root)
  return _internal_package_root();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RenameCode_Args::set_package_root(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_root_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.RenameCode_Args.package_root)
}
inline std::string* RenameCode_Args::mutable_package_root() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_package_root();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.RenameCode_Args.package_root)
  return _s;
}
inline const std::string& RenameCode_Args::_internal_package_root() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.package_root_.Get();
}
inline void RenameCode_Args::_internal_set_package_root(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_root_.Set(value, GetArena());
}
inline std::string* RenameCode_Args::_internal_mutable_package_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.package_root_.Mutable( GetArena());
}
inline std::string* RenameCode_Args::release_package_root() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.RenameCode_Args.package_root)
  return _impl_.package_root_.Release();
}
inline void RenameCode_Args::set_allocated_package_root(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.package_root_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.package_root_.IsDefault()) {
          _impl_.package_root_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.RenameCode_Args.package_root)
}

// string symbol_path = 2;
inline void RenameCode_Args::clear_symbol_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_path_.ClearToEmpty();
}
inline const std::string& RenameCode_Args::symbol_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.RenameCode_Args.symbol_path)
  return _internal_symbol_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RenameCode_Args::set_symbol_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.RenameCode_Args.symbol_path)
}
inline std::string* RenameCode_Args::mutable_symbol_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_symbol_path();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.RenameCode_Args.symbol_path)
  return _s;
}
inline const std::string& RenameCode_Args::_internal_symbol_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.symbol_path_.Get();
}
inline void RenameCode_Args::_internal_set_symbol_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_path_.Set(value, GetArena());
}
inline std::string* RenameCode_Args::_internal_mutable_symbol_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.symbol_path_.Mutable( GetArena());
}
inline std::string* RenameCode_Args::release_symbol_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.RenameCode_Args.symbol_path)
  return _impl_.symbol_path_.Release();
}
inline void RenameCode_Args::set_allocated_symbol_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.symbol_path_.IsDefault()) {
          _impl_.symbol_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.RenameCode_Args.symbol_path)
}

// map<string, string> source_codes = 3;
inline int RenameCode_Args::_internal_source_codes_size() const {
  return _internal_source_codes().size();
}
inline int RenameCode_Args::source_codes_size() const {
  return _internal_source_codes_size();
}
inline void RenameCode_Args::clear_source_codes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.source_codes_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& RenameCode_Args::_internal_source_codes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.source_codes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& RenameCode_Args::source_codes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.RenameCode_Args.source_codes)
  return _internal_source_codes();
}
inline ::google::protobuf::Map<std::string, std::string>* RenameCode_Args::_internal_mutable_source_codes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.source_codes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* RenameCode_Args::mutable_source_codes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.RenameCode_Args.source_codes)
  return _internal_mutable_source_codes();
}

// string new_name = 4;
inline void RenameCode_Args::clear_new_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.ClearToEmpty();
}
inline const std::string& RenameCode_Args::new_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.RenameCode_Args.new_name)
  return _internal_new_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RenameCode_Args::set_new_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.RenameCode_Args.new_name)
}
inline std::string* RenameCode_Args::mutable_new_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_new_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.RenameCode_Args.new_name)
  return _s;
}
inline const std::string& RenameCode_Args::_internal_new_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.new_name_.Get();
}
inline void RenameCode_Args::_internal_set_new_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.Set(value, GetArena());
}
inline std::string* RenameCode_Args::_internal_mutable_new_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.new_name_.Mutable( GetArena());
}
inline std::string* RenameCode_Args::release_new_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.RenameCode_Args.new_name)
  return _impl_.new_name_.Release();
}
inline void RenameCode_Args::set_allocated_new_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.new_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.new_name_.IsDefault()) {
          _impl_.new_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.RenameCode_Args.new_name)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// RenameCode_Result

// map<string, string> changed_codes = 1;
inline int RenameCode_Result::_internal_changed_codes_size() const {
  return _internal_changed_codes().size();
}
inline int RenameCode_Result::changed_codes_size() const {
  return _internal_changed_codes_size();
}
inline void RenameCode_Result::clear_changed_codes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.changed_codes_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& RenameCode_Result::_internal_changed_codes() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.changed_codes_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& RenameCode_Result::changed_codes() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.RenameCode_Result.changed_codes)
  return _internal_changed_codes();
}
inline ::google::protobuf::Map<std::string, std::string>* RenameCode_Result::_internal_mutable_changed_codes() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.changed_codes_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* RenameCode_Result::mutable_changed_codes() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.RenameCode_Result.changed_codes)
  return _internal_mutable_changed_codes();
}

// -------------------------------------------------------------------

// Test_Args

// .com.kcl.api.ExecProgram_Args exec_args = 1;
inline bool Test_Args::has_exec_args() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.exec_args_ != nullptr);
  return value;
}
inline void Test_Args::clear_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_args_ != nullptr) _impl_.exec_args_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::ExecProgram_Args& Test_Args::_internal_exec_args() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::ExecProgram_Args* p = _impl_.exec_args_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::ExecProgram_Args&>(::com::kcl::api::_ExecProgram_Args_default_instance_);
}
inline const ::com::kcl::api::ExecProgram_Args& Test_Args::exec_args() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Test_Args.exec_args)
  return _internal_exec_args();
}
inline void Test_Args::unsafe_arena_set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.exec_args_);
  }
  _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.Test_Args.exec_args)
}
inline ::com::kcl::api::ExecProgram_Args* Test_Args::release_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ExecProgram_Args* released = _impl_.exec_args_;
  _impl_.exec_args_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::ExecProgram_Args* Test_Args::unsafe_arena_release_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Test_Args.exec_args)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::ExecProgram_Args* temp = _impl_.exec_args_;
  _impl_.exec_args_ = nullptr;
  return temp;
}
inline ::com::kcl::api::ExecProgram_Args* Test_Args::_internal_mutable_exec_args() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_args_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::ExecProgram_Args>(GetArena());
    _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(p);
  }
  return _impl_.exec_args_;
}
inline ::com::kcl::api::ExecProgram_Args* Test_Args::mutable_exec_args() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::ExecProgram_Args* _msg = _internal_mutable_exec_args();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Test_Args.exec_args)
  return _msg;
}
inline void Test_Args::set_allocated_exec_args(::com::kcl::api::ExecProgram_Args* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.exec_args_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.exec_args_ = reinterpret_cast<::com::kcl::api::ExecProgram_Args*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Test_Args.exec_args)
}

// repeated string pkg_list = 2;
inline int Test_Args::_internal_pkg_list_size() const {
  return _internal_pkg_list().size();
}
inline int Test_Args::pkg_list_size() const {
  return _internal_pkg_list_size();
}
inline void Test_Args::clear_pkg_list() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_list_.Clear();
}
inline std::string* Test_Args::add_pkg_list()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_pkg_list()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.Test_Args.pkg_list)
  return _s;
}
inline const std::string& Test_Args::pkg_list(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Test_Args.pkg_list)
  return _internal_pkg_list().Get(index);
}
inline std::string* Test_Args::mutable_pkg_list(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Test_Args.pkg_list)
  return _internal_mutable_pkg_list()->Mutable(index);
}
inline void Test_Args::set_pkg_list(int index, const std::string& value) {
  _internal_mutable_pkg_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.Test_Args.pkg_list)
}
inline void Test_Args::set_pkg_list(int index, std::string&& value) {
  _internal_mutable_pkg_list()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.Test_Args.pkg_list)
}
inline void Test_Args::set_pkg_list(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_pkg_list()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.Test_Args.pkg_list)
}
inline void Test_Args::set_pkg_list(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_pkg_list()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.Test_Args.pkg_list)
}
inline void Test_Args::set_pkg_list(int index, absl::string_view value) {
  _internal_mutable_pkg_list()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.Test_Args.pkg_list)
}
inline void Test_Args::add_pkg_list(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pkg_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.Test_Args.pkg_list)
}
inline void Test_Args::add_pkg_list(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pkg_list()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.Test_Args.pkg_list)
}
inline void Test_Args::add_pkg_list(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pkg_list()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.Test_Args.pkg_list)
}
inline void Test_Args::add_pkg_list(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pkg_list()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.Test_Args.pkg_list)
}
inline void Test_Args::add_pkg_list(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_pkg_list()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.Test_Args.pkg_list)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Test_Args::pkg_list() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Test_Args.pkg_list)
  return _internal_pkg_list();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Test_Args::mutable_pkg_list() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Test_Args.pkg_list)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_pkg_list();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Test_Args::_internal_pkg_list() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pkg_list_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Test_Args::_internal_mutable_pkg_list() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.pkg_list_;
}

// string run_regexp = 3;
inline void Test_Args::clear_run_regexp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.run_regexp_.ClearToEmpty();
}
inline const std::string& Test_Args::run_regexp() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Test_Args.run_regexp)
  return _internal_run_regexp();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Test_Args::set_run_regexp(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.run_regexp_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Test_Args.run_regexp)
}
inline std::string* Test_Args::mutable_run_regexp() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_run_regexp();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Test_Args.run_regexp)
  return _s;
}
inline const std::string& Test_Args::_internal_run_regexp() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.run_regexp_.Get();
}
inline void Test_Args::_internal_set_run_regexp(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.run_regexp_.Set(value, GetArena());
}
inline std::string* Test_Args::_internal_mutable_run_regexp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.run_regexp_.Mutable( GetArena());
}
inline std::string* Test_Args::release_run_regexp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Test_Args.run_regexp)
  return _impl_.run_regexp_.Release();
}
inline void Test_Args::set_allocated_run_regexp(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.run_regexp_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.run_regexp_.IsDefault()) {
          _impl_.run_regexp_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Test_Args.run_regexp)
}

// bool fail_fast = 4;
inline void Test_Args::clear_fail_fast() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fail_fast_ = false;
}
inline bool Test_Args::fail_fast() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.Test_Args.fail_fast)
  return _internal_fail_fast();
}
inline void Test_Args::set_fail_fast(bool value) {
  _internal_set_fail_fast(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.Test_Args.fail_fast)
}
inline bool Test_Args::_internal_fail_fast() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.fail_fast_;
}
inline void Test_Args::_internal_set_fail_fast(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.fail_fast_ = value;
}

// -------------------------------------------------------------------

// Test_Result

// repeated .com.kcl.api.TestCaseInfo info = 2;
inline int Test_Result::_internal_info_size() const {
  return _internal_info().size();
}
inline int Test_Result::info_size() const {
  return _internal_info_size();
}
inline void Test_Result::clear_info() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.info_.Clear();
}
inline ::com::kcl::api::TestCaseInfo* Test_Result::mutable_info(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Test_Result.info)
  return _internal_mutable_info()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::TestCaseInfo>* Test_Result::mutable_info()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Test_Result.info)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_info();
}
inline const ::com::kcl::api::TestCaseInfo& Test_Result::info(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Test_Result.info)
  return _internal_info().Get(index);
}
inline ::com::kcl::api::TestCaseInfo* Test_Result::add_info() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::TestCaseInfo* _add = _internal_mutable_info()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.Test_Result.info)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::TestCaseInfo>& Test_Result::info() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Test_Result.info)
  return _internal_info();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::TestCaseInfo>&
Test_Result::_internal_info() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.info_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::TestCaseInfo>*
Test_Result::_internal_mutable_info() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.info_;
}

// -------------------------------------------------------------------

// TestCaseInfo

// string name = 1;
inline void TestCaseInfo::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& TestCaseInfo::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.TestCaseInfo.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestCaseInfo::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.TestCaseInfo.name)
}
inline std::string* TestCaseInfo::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.TestCaseInfo.name)
  return _s;
}
inline const std::string& TestCaseInfo::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void TestCaseInfo::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* TestCaseInfo::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* TestCaseInfo::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.TestCaseInfo.name)
  return _impl_.name_.Release();
}
inline void TestCaseInfo::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.TestCaseInfo.name)
}

// string error = 2;
inline void TestCaseInfo::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
}
inline const std::string& TestCaseInfo::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.TestCaseInfo.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestCaseInfo::set_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.TestCaseInfo.error)
}
inline std::string* TestCaseInfo::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.TestCaseInfo.error)
  return _s;
}
inline const std::string& TestCaseInfo::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void TestCaseInfo::_internal_set_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(value, GetArena());
}
inline std::string* TestCaseInfo::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_.Mutable( GetArena());
}
inline std::string* TestCaseInfo::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.TestCaseInfo.error)
  return _impl_.error_.Release();
}
inline void TestCaseInfo::set_allocated_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_.IsDefault()) {
          _impl_.error_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.TestCaseInfo.error)
}

// uint64 duration = 3;
inline void TestCaseInfo::clear_duration() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = ::uint64_t{0u};
}
inline ::uint64_t TestCaseInfo::duration() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.TestCaseInfo.duration)
  return _internal_duration();
}
inline void TestCaseInfo::set_duration(::uint64_t value) {
  _internal_set_duration(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.TestCaseInfo.duration)
}
inline ::uint64_t TestCaseInfo::_internal_duration() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.duration_;
}
inline void TestCaseInfo::_internal_set_duration(::uint64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.duration_ = value;
}

// string log_message = 4;
inline void TestCaseInfo::clear_log_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_message_.ClearToEmpty();
}
inline const std::string& TestCaseInfo::log_message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.TestCaseInfo.log_message)
  return _internal_log_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void TestCaseInfo::set_log_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.TestCaseInfo.log_message)
}
inline std::string* TestCaseInfo::mutable_log_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_log_message();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.TestCaseInfo.log_message)
  return _s;
}
inline const std::string& TestCaseInfo::_internal_log_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.log_message_.Get();
}
inline void TestCaseInfo::_internal_set_log_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_message_.Set(value, GetArena());
}
inline std::string* TestCaseInfo::_internal_mutable_log_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.log_message_.Mutable( GetArena());
}
inline std::string* TestCaseInfo::release_log_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.TestCaseInfo.log_message)
  return _impl_.log_message_.Release();
}
inline void TestCaseInfo::set_allocated_log_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.log_message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.log_message_.IsDefault()) {
          _impl_.log_message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.TestCaseInfo.log_message)
}

// -------------------------------------------------------------------

// UpdateDependencies_Args

// string manifest_path = 1;
inline void UpdateDependencies_Args::clear_manifest_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.manifest_path_.ClearToEmpty();
}
inline const std::string& UpdateDependencies_Args::manifest_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.UpdateDependencies_Args.manifest_path)
  return _internal_manifest_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateDependencies_Args::set_manifest_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.manifest_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.UpdateDependencies_Args.manifest_path)
}
inline std::string* UpdateDependencies_Args::mutable_manifest_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_manifest_path();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.UpdateDependencies_Args.manifest_path)
  return _s;
}
inline const std::string& UpdateDependencies_Args::_internal_manifest_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.manifest_path_.Get();
}
inline void UpdateDependencies_Args::_internal_set_manifest_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.manifest_path_.Set(value, GetArena());
}
inline std::string* UpdateDependencies_Args::_internal_mutable_manifest_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.manifest_path_.Mutable( GetArena());
}
inline std::string* UpdateDependencies_Args::release_manifest_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.UpdateDependencies_Args.manifest_path)
  return _impl_.manifest_path_.Release();
}
inline void UpdateDependencies_Args::set_allocated_manifest_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.manifest_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.manifest_path_.IsDefault()) {
          _impl_.manifest_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.UpdateDependencies_Args.manifest_path)
}

// bool vendor = 2;
inline void UpdateDependencies_Args::clear_vendor() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_ = false;
}
inline bool UpdateDependencies_Args::vendor() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.UpdateDependencies_Args.vendor)
  return _internal_vendor();
}
inline void UpdateDependencies_Args::set_vendor(bool value) {
  _internal_set_vendor(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.UpdateDependencies_Args.vendor)
}
inline bool UpdateDependencies_Args::_internal_vendor() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.vendor_;
}
inline void UpdateDependencies_Args::_internal_set_vendor(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.vendor_ = value;
}

// -------------------------------------------------------------------

// UpdateDependencies_Result

// repeated .com.kcl.api.ExternalPkg external_pkgs = 3;
inline int UpdateDependencies_Result::_internal_external_pkgs_size() const {
  return _internal_external_pkgs().size();
}
inline int UpdateDependencies_Result::external_pkgs_size() const {
  return _internal_external_pkgs_size();
}
inline void UpdateDependencies_Result::clear_external_pkgs() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.external_pkgs_.Clear();
}
inline ::com::kcl::api::ExternalPkg* UpdateDependencies_Result::mutable_external_pkgs(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.UpdateDependencies_Result.external_pkgs)
  return _internal_mutable_external_pkgs()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>* UpdateDependencies_Result::mutable_external_pkgs()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.UpdateDependencies_Result.external_pkgs)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_external_pkgs();
}
inline const ::com::kcl::api::ExternalPkg& UpdateDependencies_Result::external_pkgs(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.UpdateDependencies_Result.external_pkgs)
  return _internal_external_pkgs().Get(index);
}
inline ::com::kcl::api::ExternalPkg* UpdateDependencies_Result::add_external_pkgs() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::ExternalPkg* _add = _internal_mutable_external_pkgs()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.UpdateDependencies_Result.external_pkgs)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>& UpdateDependencies_Result::external_pkgs() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.UpdateDependencies_Result.external_pkgs)
  return _internal_external_pkgs();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>&
UpdateDependencies_Result::_internal_external_pkgs() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.external_pkgs_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::ExternalPkg>*
UpdateDependencies_Result::_internal_mutable_external_pkgs() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.external_pkgs_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// KclType

// string type = 1;
inline void KclType::clear_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.ClearToEmpty();
}
inline const std::string& KclType::type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.type)
  return _internal_type();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KclType::set_type(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.type)
}
inline std::string* KclType::mutable_type() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_type();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.type)
  return _s;
}
inline const std::string& KclType::_internal_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.type_.Get();
}
inline void KclType::_internal_set_type(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.Set(value, GetArena());
}
inline std::string* KclType::_internal_mutable_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.type_.Mutable( GetArena());
}
inline std::string* KclType::release_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.type)
  return _impl_.type_.Release();
}
inline void KclType::set_allocated_type(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.type_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.type_.IsDefault()) {
          _impl_.type_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.type)
}

// repeated .com.kcl.api.KclType union_types = 2;
inline int KclType::_internal_union_types_size() const {
  return _internal_union_types().size();
}
inline int KclType::union_types_size() const {
  return _internal_union_types_size();
}
inline void KclType::clear_union_types() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.union_types_.Clear();
}
inline ::com::kcl::api::KclType* KclType::mutable_union_types(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.union_types)
  return _internal_mutable_union_types()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::KclType>* KclType::mutable_union_types()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.KclType.union_types)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_union_types();
}
inline const ::com::kcl::api::KclType& KclType::union_types(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.union_types)
  return _internal_union_types().Get(index);
}
inline ::com::kcl::api::KclType* KclType::add_union_types() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::KclType* _add = _internal_mutable_union_types()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.KclType.union_types)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::KclType>& KclType::union_types() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.KclType.union_types)
  return _internal_union_types();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::KclType>&
KclType::_internal_union_types() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.union_types_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::KclType>*
KclType::_internal_mutable_union_types() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.union_types_;
}

// string default = 3;
inline void KclType::clear_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default__.ClearToEmpty();
}
inline const std::string& KclType::default_() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.default)
  return _internal_default_();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KclType::set_default_(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default__.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.default)
}
inline std::string* KclType::mutable_default_() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_default_();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.default)
  return _s;
}
inline const std::string& KclType::_internal_default_() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.default__.Get();
}
inline void KclType::_internal_set_default_(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default__.Set(value, GetArena());
}
inline std::string* KclType::_internal_mutable_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.default__.Mutable( GetArena());
}
inline std::string* KclType::release_default_() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.default)
  return _impl_.default__.Release();
}
inline void KclType::set_allocated_default_(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.default__.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.default__.IsDefault()) {
          _impl_.default__.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.default)
}

// string schema_name = 4;
inline void KclType::clear_schema_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_name_.ClearToEmpty();
}
inline const std::string& KclType::schema_name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.schema_name)
  return _internal_schema_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KclType::set_schema_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.schema_name)
}
inline std::string* KclType::mutable_schema_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_schema_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.schema_name)
  return _s;
}
inline const std::string& KclType::_internal_schema_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.schema_name_.Get();
}
inline void KclType::_internal_set_schema_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_name_.Set(value, GetArena());
}
inline std::string* KclType::_internal_mutable_schema_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.schema_name_.Mutable( GetArena());
}
inline std::string* KclType::release_schema_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.schema_name)
  return _impl_.schema_name_.Release();
}
inline void KclType::set_allocated_schema_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.schema_name_.IsDefault()) {
          _impl_.schema_name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.schema_name)
}

// string schema_doc = 5;
inline void KclType::clear_schema_doc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_doc_.ClearToEmpty();
}
inline const std::string& KclType::schema_doc() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.schema_doc)
  return _internal_schema_doc();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KclType::set_schema_doc(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_doc_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.schema_doc)
}
inline std::string* KclType::mutable_schema_doc() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_schema_doc();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.schema_doc)
  return _s;
}
inline const std::string& KclType::_internal_schema_doc() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.schema_doc_.Get();
}
inline void KclType::_internal_set_schema_doc(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_doc_.Set(value, GetArena());
}
inline std::string* KclType::_internal_mutable_schema_doc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.schema_doc_.Mutable( GetArena());
}
inline std::string* KclType::release_schema_doc() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.schema_doc)
  return _impl_.schema_doc_.Release();
}
inline void KclType::set_allocated_schema_doc(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.schema_doc_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.schema_doc_.IsDefault()) {
          _impl_.schema_doc_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.schema_doc)
}

// map<string, .com.kcl.api.KclType> properties = 6;
inline int KclType::_internal_properties_size() const {
  return _internal_properties().size();
}
inline int KclType::properties_size() const {
  return _internal_properties_size();
}
inline void KclType::clear_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.properties_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>& KclType::_internal_properties() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.properties_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>& KclType::properties() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.KclType.properties)
  return _internal_properties();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>* KclType::_internal_mutable_properties() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.properties_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::KclType>* KclType::mutable_properties() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.KclType.properties)
  return _internal_mutable_properties();
}

// repeated string required = 7;
inline int KclType::_internal_required_size() const {
  return _internal_required().size();
}
inline int KclType::required_size() const {
  return _internal_required_size();
}
inline void KclType::clear_required() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.required_.Clear();
}
inline std::string* KclType::add_required()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_required()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.KclType.required)
  return _s;
}
inline const std::string& KclType::required(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.required)
  return _internal_required().Get(index);
}
inline std::string* KclType::mutable_required(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.required)
  return _internal_mutable_required()->Mutable(index);
}
inline void KclType::set_required(int index, const std::string& value) {
  _internal_mutable_required()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.required)
}
inline void KclType::set_required(int index, std::string&& value) {
  _internal_mutable_required()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.required)
}
inline void KclType::set_required(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_required()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.KclType.required)
}
inline void KclType::set_required(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_required()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.KclType.required)
}
inline void KclType::set_required(int index, absl::string_view value) {
  _internal_mutable_required()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.KclType.required)
}
inline void KclType::add_required(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_required()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.KclType.required)
}
inline void KclType::add_required(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_required()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.KclType.required)
}
inline void KclType::add_required(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_required()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.KclType.required)
}
inline void KclType::add_required(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_required()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.KclType.required)
}
inline void KclType::add_required(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_required()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.KclType.required)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
KclType::required() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.KclType.required)
  return _internal_required();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
KclType::mutable_required() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.KclType.required)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_required();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
KclType::_internal_required() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.required_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
KclType::_internal_mutable_required() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.required_;
}

// .com.kcl.api.KclType key = 8;
inline bool KclType::has_key() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.key_ != nullptr);
  return value;
}
inline void KclType::clear_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.key_ != nullptr) _impl_.key_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const ::com::kcl::api::KclType& KclType::_internal_key() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::KclType* p = _impl_.key_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::KclType&>(::com::kcl::api::_KclType_default_instance_);
}
inline const ::com::kcl::api::KclType& KclType::key() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.key)
  return _internal_key();
}
inline void KclType::unsafe_arena_set_allocated_key(::com::kcl::api::KclType* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.key_);
  }
  _impl_.key_ = reinterpret_cast<::com::kcl::api::KclType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.KclType.key)
}
inline ::com::kcl::api::KclType* KclType::release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::KclType* released = _impl_.key_;
  _impl_.key_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::KclType* KclType::unsafe_arena_release_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.key)

  _impl_._has_bits_[0] &= ~0x00000001u;
  ::com::kcl::api::KclType* temp = _impl_.key_;
  _impl_.key_ = nullptr;
  return temp;
}
inline ::com::kcl::api::KclType* KclType::_internal_mutable_key() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.key_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::KclType>(GetArena());
    _impl_.key_ = reinterpret_cast<::com::kcl::api::KclType*>(p);
  }
  return _impl_.key_;
}
inline ::com::kcl::api::KclType* KclType::mutable_key() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000001u;
  ::com::kcl::api::KclType* _msg = _internal_mutable_key();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.key)
  return _msg;
}
inline void KclType::set_allocated_key(::com::kcl::api::KclType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.key_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }

  _impl_.key_ = reinterpret_cast<::com::kcl::api::KclType*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.key)
}

// .com.kcl.api.KclType item = 9;
inline bool KclType::has_item() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.item_ != nullptr);
  return value;
}
inline void KclType::clear_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.item_ != nullptr) _impl_.item_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const ::com::kcl::api::KclType& KclType::_internal_item() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::KclType* p = _impl_.item_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::KclType&>(::com::kcl::api::_KclType_default_instance_);
}
inline const ::com::kcl::api::KclType& KclType::item() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.item)
  return _internal_item();
}
inline void KclType::unsafe_arena_set_allocated_item(::com::kcl::api::KclType* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.item_);
  }
  _impl_.item_ = reinterpret_cast<::com::kcl::api::KclType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.KclType.item)
}
inline ::com::kcl::api::KclType* KclType::release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::com::kcl::api::KclType* released = _impl_.item_;
  _impl_.item_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::KclType* KclType::unsafe_arena_release_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.item)

  _impl_._has_bits_[0] &= ~0x00000002u;
  ::com::kcl::api::KclType* temp = _impl_.item_;
  _impl_.item_ = nullptr;
  return temp;
}
inline ::com::kcl::api::KclType* KclType::_internal_mutable_item() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.item_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::KclType>(GetArena());
    _impl_.item_ = reinterpret_cast<::com::kcl::api::KclType*>(p);
  }
  return _impl_.item_;
}
inline ::com::kcl::api::KclType* KclType::mutable_item() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002u;
  ::com::kcl::api::KclType* _msg = _internal_mutable_item();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.item)
  return _msg;
}
inline void KclType::set_allocated_item(::com::kcl::api::KclType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.item_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }

  _impl_.item_ = reinterpret_cast<::com::kcl::api::KclType*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.item)
}

// int32 line = 10;
inline void KclType::clear_line() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.line_ = 0;
}
inline ::int32_t KclType::line() const {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.line)
  return _internal_line();
}
inline void KclType::set_line(::int32_t value) {
  _internal_set_line(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.line)
}
inline ::int32_t KclType::_internal_line() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.line_;
}
inline void KclType::_internal_set_line(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.line_ = value;
}

// repeated .com.kcl.api.Decorator decorators = 11;
inline int KclType::_internal_decorators_size() const {
  return _internal_decorators().size();
}
inline int KclType::decorators_size() const {
  return _internal_decorators_size();
}
inline void KclType::clear_decorators() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.decorators_.Clear();
}
inline ::com::kcl::api::Decorator* KclType::mutable_decorators(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.decorators)
  return _internal_mutable_decorators()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Decorator>* KclType::mutable_decorators()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.KclType.decorators)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_decorators();
}
inline const ::com::kcl::api::Decorator& KclType::decorators(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.decorators)
  return _internal_decorators().Get(index);
}
inline ::com::kcl::api::Decorator* KclType::add_decorators() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::com::kcl::api::Decorator* _add = _internal_mutable_decorators()->Add();
  // @@protoc_insertion_point(field_add:com.kcl.api.KclType.decorators)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Decorator>& KclType::decorators() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.KclType.decorators)
  return _internal_decorators();
}
inline const ::google::protobuf::RepeatedPtrField<::com::kcl::api::Decorator>&
KclType::_internal_decorators() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.decorators_;
}
inline ::google::protobuf::RepeatedPtrField<::com::kcl::api::Decorator>*
KclType::_internal_mutable_decorators() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.decorators_;
}

// string filename = 12;
inline void KclType::clear_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.ClearToEmpty();
}
inline const std::string& KclType::filename() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.filename)
  return _internal_filename();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KclType::set_filename(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.filename)
}
inline std::string* KclType::mutable_filename() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filename();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.filename)
  return _s;
}
inline const std::string& KclType::_internal_filename() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filename_.Get();
}
inline void KclType::_internal_set_filename(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.Set(value, GetArena());
}
inline std::string* KclType::_internal_mutable_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.filename_.Mutable( GetArena());
}
inline std::string* KclType::release_filename() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.filename)
  return _impl_.filename_.Release();
}
inline void KclType::set_allocated_filename(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filename_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.filename_.IsDefault()) {
          _impl_.filename_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.filename)
}

// string pkg_path = 13;
inline void KclType::clear_pkg_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_path_.ClearToEmpty();
}
inline const std::string& KclType::pkg_path() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.pkg_path)
  return _internal_pkg_path();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KclType::set_pkg_path(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_path_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.pkg_path)
}
inline std::string* KclType::mutable_pkg_path() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_pkg_path();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.pkg_path)
  return _s;
}
inline const std::string& KclType::_internal_pkg_path() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pkg_path_.Get();
}
inline void KclType::_internal_set_pkg_path(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_path_.Set(value, GetArena());
}
inline std::string* KclType::_internal_mutable_pkg_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.pkg_path_.Mutable( GetArena());
}
inline std::string* KclType::release_pkg_path() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.pkg_path)
  return _impl_.pkg_path_.Release();
}
inline void KclType::set_allocated_pkg_path(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pkg_path_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.pkg_path_.IsDefault()) {
          _impl_.pkg_path_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.pkg_path)
}

// string description = 14;
inline void KclType::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& KclType::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void KclType::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.KclType.description)
}
inline std::string* KclType::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.description)
  return _s;
}
inline const std::string& KclType::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void KclType::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* KclType::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* KclType::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.description)
  return _impl_.description_.Release();
}
inline void KclType::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.description)
}

// map<string, .com.kcl.api.Example> examples = 15;
inline int KclType::_internal_examples_size() const {
  return _internal_examples().size();
}
inline int KclType::examples_size() const {
  return _internal_examples_size();
}
inline void KclType::clear_examples() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.examples_.Clear();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::Example>& KclType::_internal_examples() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.examples_.GetMap();
}
inline const ::google::protobuf::Map<std::string, ::com::kcl::api::Example>& KclType::examples() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.KclType.examples)
  return _internal_examples();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::Example>* KclType::_internal_mutable_examples() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.examples_.MutableMap();
}
inline ::google::protobuf::Map<std::string, ::com::kcl::api::Example>* KclType::mutable_examples() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.KclType.examples)
  return _internal_mutable_examples();
}

// .com.kcl.api.KclType base_schema = 16;
inline bool KclType::has_base_schema() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || _impl_.base_schema_ != nullptr);
  return value;
}
inline void KclType::clear_base_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_schema_ != nullptr) _impl_.base_schema_->Clear();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const ::com::kcl::api::KclType& KclType::_internal_base_schema() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::com::kcl::api::KclType* p = _impl_.base_schema_;
  return p != nullptr ? *p : reinterpret_cast<const ::com::kcl::api::KclType&>(::com::kcl::api::_KclType_default_instance_);
}
inline const ::com::kcl::api::KclType& KclType::base_schema() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.KclType.base_schema)
  return _internal_base_schema();
}
inline void KclType::unsafe_arena_set_allocated_base_schema(::com::kcl::api::KclType* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.base_schema_);
  }
  _impl_.base_schema_ = reinterpret_cast<::com::kcl::api::KclType*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:com.kcl.api.KclType.base_schema)
}
inline ::com::kcl::api::KclType* KclType::release_base_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::com::kcl::api::KclType* released = _impl_.base_schema_;
  _impl_.base_schema_ = nullptr;
#ifdef PROTOBUF_FORCE_COPY_IN_RELEASE
  auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
  released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  if (GetArena() == nullptr) {
    delete old;
  }
#else   // PROTOBUF_FORCE_COPY_IN_RELEASE
  if (GetArena() != nullptr) {
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
  }
#endif  // !PROTOBUF_FORCE_COPY_IN_RELEASE
  return released;
}
inline ::com::kcl::api::KclType* KclType::unsafe_arena_release_base_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.KclType.base_schema)

  _impl_._has_bits_[0] &= ~0x00000004u;
  ::com::kcl::api::KclType* temp = _impl_.base_schema_;
  _impl_.base_schema_ = nullptr;
  return temp;
}
inline ::com::kcl::api::KclType* KclType::_internal_mutable_base_schema() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.base_schema_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::com::kcl::api::KclType>(GetArena());
    _impl_.base_schema_ = reinterpret_cast<::com::kcl::api::KclType*>(p);
  }
  return _impl_.base_schema_;
}
inline ::com::kcl::api::KclType* KclType::mutable_base_schema() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000004u;
  ::com::kcl::api::KclType* _msg = _internal_mutable_base_schema();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.KclType.base_schema)
  return _msg;
}
inline void KclType::set_allocated_base_schema(::com::kcl::api::KclType* value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete (_impl_.base_schema_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = (value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }

  _impl_.base_schema_ = reinterpret_cast<::com::kcl::api::KclType*>(value);
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.KclType.base_schema)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Decorator

// string name = 1;
inline void Decorator::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& Decorator::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Decorator.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Decorator::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Decorator.name)
}
inline std::string* Decorator::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Decorator.name)
  return _s;
}
inline const std::string& Decorator::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void Decorator::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* Decorator::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* Decorator::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Decorator.name)
  return _impl_.name_.Release();
}
inline void Decorator::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Decorator.name)
}

// repeated string arguments = 2;
inline int Decorator::_internal_arguments_size() const {
  return _internal_arguments().size();
}
inline int Decorator::arguments_size() const {
  return _internal_arguments_size();
}
inline void Decorator::clear_arguments() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.arguments_.Clear();
}
inline std::string* Decorator::add_arguments()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_arguments()->Add();
  // @@protoc_insertion_point(field_add_mutable:com.kcl.api.Decorator.arguments)
  return _s;
}
inline const std::string& Decorator::arguments(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Decorator.arguments)
  return _internal_arguments().Get(index);
}
inline std::string* Decorator::mutable_arguments(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Decorator.arguments)
  return _internal_mutable_arguments()->Mutable(index);
}
inline void Decorator::set_arguments(int index, const std::string& value) {
  _internal_mutable_arguments()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:com.kcl.api.Decorator.arguments)
}
inline void Decorator::set_arguments(int index, std::string&& value) {
  _internal_mutable_arguments()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:com.kcl.api.Decorator.arguments)
}
inline void Decorator::set_arguments(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_arguments()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:com.kcl.api.Decorator.arguments)
}
inline void Decorator::set_arguments(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_arguments()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:com.kcl.api.Decorator.arguments)
}
inline void Decorator::set_arguments(int index, absl::string_view value) {
  _internal_mutable_arguments()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:com.kcl.api.Decorator.arguments)
}
inline void Decorator::add_arguments(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:com.kcl.api.Decorator.arguments)
}
inline void Decorator::add_arguments(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:com.kcl.api.Decorator.arguments)
}
inline void Decorator::add_arguments(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:com.kcl.api.Decorator.arguments)
}
inline void Decorator::add_arguments(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:com.kcl.api.Decorator.arguments)
}
inline void Decorator::add_arguments(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_arguments()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:com.kcl.api.Decorator.arguments)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Decorator::arguments() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:com.kcl.api.Decorator.arguments)
  return _internal_arguments();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Decorator::mutable_arguments() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:com.kcl.api.Decorator.arguments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_arguments();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
Decorator::_internal_arguments() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.arguments_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
Decorator::_internal_mutable_arguments() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.arguments_;
}

// map<string, string> keywords = 3;
inline int Decorator::_internal_keywords_size() const {
  return _internal_keywords().size();
}
inline int Decorator::keywords_size() const {
  return _internal_keywords_size();
}
inline void Decorator::clear_keywords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.keywords_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& Decorator::_internal_keywords() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.keywords_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& Decorator::keywords() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:com.kcl.api.Decorator.keywords)
  return _internal_keywords();
}
inline ::google::protobuf::Map<std::string, std::string>* Decorator::_internal_mutable_keywords() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.keywords_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* Decorator::mutable_keywords() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:com.kcl.api.Decorator.keywords)
  return _internal_mutable_keywords();
}

// -------------------------------------------------------------------

// Example

// string summary = 1;
inline void Example::clear_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_.ClearToEmpty();
}
inline const std::string& Example::summary() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Example.summary)
  return _internal_summary();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Example::set_summary(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Example.summary)
}
inline std::string* Example::mutable_summary() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_summary();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Example.summary)
  return _s;
}
inline const std::string& Example::_internal_summary() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.summary_.Get();
}
inline void Example::_internal_set_summary(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_.Set(value, GetArena());
}
inline std::string* Example::_internal_mutable_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.summary_.Mutable( GetArena());
}
inline std::string* Example::release_summary() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Example.summary)
  return _impl_.summary_.Release();
}
inline void Example::set_allocated_summary(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.summary_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.summary_.IsDefault()) {
          _impl_.summary_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Example.summary)
}

// string description = 2;
inline void Example::clear_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.ClearToEmpty();
}
inline const std::string& Example::description() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Example.description)
  return _internal_description();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Example::set_description(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Example.description)
}
inline std::string* Example::mutable_description() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_description();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Example.description)
  return _s;
}
inline const std::string& Example::_internal_description() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.description_.Get();
}
inline void Example::_internal_set_description(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.Set(value, GetArena());
}
inline std::string* Example::_internal_mutable_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.description_.Mutable( GetArena());
}
inline std::string* Example::release_description() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Example.description)
  return _impl_.description_.Release();
}
inline void Example::set_allocated_description(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.description_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.description_.IsDefault()) {
          _impl_.description_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Example.description)
}

// string value = 3;
inline void Example::clear_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.ClearToEmpty();
}
inline const std::string& Example::value() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:com.kcl.api.Example.value)
  return _internal_value();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void Example::set_value(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:com.kcl.api.Example.value)
}
inline std::string* Example::mutable_value() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_value();
  // @@protoc_insertion_point(field_mutable:com.kcl.api.Example.value)
  return _s;
}
inline const std::string& Example::_internal_value() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.value_.Get();
}
inline void Example::_internal_set_value(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.Set(value, GetArena());
}
inline std::string* Example::_internal_mutable_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.value_.Mutable( GetArena());
}
inline std::string* Example::release_value() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:com.kcl.api.Example.value)
  return _impl_.value_.Release();
}
inline void Example::set_allocated_value(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.value_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.value_.IsDefault()) {
          _impl_.value_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:com.kcl.api.Example.value)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace api
}  // namespace kcl
}  // namespace com


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_spec_2eproto_2epb_2eh
